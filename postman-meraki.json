{
	"info": {
		"_postman_id": "06b43780-cabd-4886-89c6-81baf1e436ec",
		"name": "Meraki Dashboard API copy",
		"description": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 13 January, 2020\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API usage",
			"item": [
				{
					"name": "getOrganizationApiRequests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&adminId={{adminId}}&path={{path}}&method={{method}}&responseCode={{responseCode}}&sourceIp={{sourceIp}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"apiRequests"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "adminId",
									"value": "{{adminId}}",
									"description": "Filter the results by the ID of the admin who made the API requests"
								},
								{
									"key": "path",
									"value": "{{path}}",
									"description": "Filter the results by the path of the API requests"
								},
								{
									"key": "method",
									"value": "{{method}}",
									"description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
								},
								{
									"key": "responseCode",
									"value": "{{responseCode}}",
									"description": "Filter the results by the response code of the API requests"
								},
								{
									"key": "sourceIp",
									"value": "{{sourceIp}}",
									"description": "Filter the results by the IP address of the originating API request"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the API requests made by an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&adminId={{adminId}}&path={{path}}&method={{method}}&responseCode={{responseCode}}&sourceIp={{sourceIp}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"apiRequests"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "adminId",
											"value": "{{adminId}}",
											"description": "Filter the results by the ID of the admin who made the API requests"
										},
										{
											"key": "path",
											"value": "{{path}}",
											"description": "Filter the results by the path of the API requests"
										},
										{
											"key": "method",
											"value": "{{method}}",
											"description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
										},
										{
											"key": "responseCode",
											"value": "{{responseCode}}",
											"description": "Filter the results by the response code of the API requests"
										},
										{
											"key": "sourceIp",
											"value": "{{sourceIp}}",
											"description": "Filter the results by the IP address of the originating API request"
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the API requests made by an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"adminId\": \"212406\",\r\n    \"method\": \"GET\",\r\n    \"host\": \"api.meraki.com\",\r\n    \"path\": \"/api/v0/organizations/33349/apiRequests\",\r\n    \"queryString\": \"timespan=604800\",\r\n    \"userAgent\": \"PostmanRuntime/7.6.0\",\r\n    \"ts\": \"2019-02-20T17:31:23Z\",\r\n    \"responseCode\": 200,\r\n    \"sourceIp\": \"123.123.123.1\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Action batches",
			"item": [
				{
					"name": "createOrganizationActionBatch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"actionBatches"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Create an action batch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfirmed| boolean| Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.\nsynchronous| boolean| Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.\nactions| array| A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"actionBatches"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Create an action batch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfirmed| boolean| Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.\nsynchronous| boolean| Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.\nactions| array| A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123\",\r\n  \"organizationId\": \"2930418\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"status\": {\r\n    \"completed\": false,\r\n    \"failed\": false,\r\n    \"errors\": []\r\n  },\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationActionBatches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"actionBatches"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the list of action batches in the organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"actionBatches"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the list of action batches in the organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"123\",\r\n    \"organizationId\": \"2930418\",\r\n    \"confirmed\": true,\r\n    \"synchronous\": false,\r\n    \"status\": {\r\n      \"completed\": false,\r\n      \"failed\": false,\r\n      \"errors\": []\r\n    },\r\n    \"actions\": [\r\n      {\r\n        \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n        \"operation\": \"update\",\r\n        \"body\": {\r\n          \"enabled\": false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationActionBatch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"actionBatches",
								":actionBatchId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "actionBatchId",
									"value": "{{actionBatchId}}"
								}
							]
						},
						"description": "Return an action batch"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"actionBatches",
										":actionBatchId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "actionBatchId",
											"value": "{{actionBatchId}}"
										}
									]
								},
								"description": "Return an action batch"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123\",\r\n  \"organizationId\": \"2930418\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"status\": {\r\n    \"completed\": false,\r\n    \"failed\": false,\r\n    \"errors\": []\r\n  },\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteOrganizationActionBatch",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"actionBatches",
								":actionBatchId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "actionBatchId",
									"value": "{{actionBatchId}}"
								}
							]
						},
						"description": "Delete an action batch"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"actionBatches",
										":actionBatchId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "actionBatchId",
											"value": "{{actionBatchId}}"
										}
									]
								},
								"description": "Delete an action batch"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "updateOrganizationActionBatch",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmed\": true,\r\n  \"synchronous\": false\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"actionBatches",
								":actionBatchId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "actionBatchId",
									"value": "{{actionBatchId}}"
								}
							]
						},
						"description": "Update an action batch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfirmed| boolean| A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.\nsynchronous| boolean| Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmed\": true,\r\n  \"synchronous\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"actionBatches",
										":actionBatchId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "actionBatchId",
											"value": "{{actionBatchId}}"
										}
									]
								},
								"description": "Update an action batch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfirmed| boolean| A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.\nsynchronous| boolean| Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123\",\r\n  \"organizationId\": \"2930418\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"status\": {\r\n    \"completed\": false,\r\n    \"failed\": false,\r\n    \"errors\": []\r\n  },\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admins",
			"item": [
				{
					"name": "getOrganizationAdmins",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"admins"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the dashboard administrators in this organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"admins"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the dashboard administrators in this organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"212406\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"orgAccess\": \"none\",\r\n    \"accountStatus\": \"ok\",\r\n    \"twoFactorAuthEnabled\": false,\r\n    \"hasApiKey\": true,\r\n    \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ],\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_24329156\",\r\n        \"access\": \"full\"\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createOrganizationAdmin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"admins"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Create a new dashboard administrator\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nemail| string| The email of the dashboard administrator. This attribute can not be updated.\nname| string| The name of the dashboard administrator\norgAccess| string| The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'\ntags| array| The list of tags that the dashboard administrator has privileges on\nnetworks| array| The list of networks that the dashboard administrator has privileges on\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"admins"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Create a new dashboard administrator\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nemail| string| The email of the dashboard administrator. This attribute can not be updated.\nname| string| The name of the dashboard administrator\norgAccess| string| The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'\ntags| array| The list of tags that the dashboard administrator has privileges on\nnetworks| array| The list of networks that the dashboard administrator has privileges on\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationAdmin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/admins/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"admins",
								":id"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update an administrator\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the dashboard administrator\norgAccess| string| The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'\ntags| array| The list of tags that the dashboard administrator has privileges on\nnetworks| array| The list of networks that the dashboard administrator has privileges on\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/admins/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"admins",
										":id"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Update an administrator\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the dashboard administrator\norgAccess| string| The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'\ntags| array| The list of tags that the dashboard administrator has privileges on\nnetworks| array| The list of networks that the dashboard administrator has privileges on\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteOrganizationAdmin",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/admins/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"admins",
								":id"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Revoke all access for a dashboard administrator within this organization"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/admins/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"admins",
										":id"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Revoke all access for a dashboard administrator within this organization"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alert settings",
			"item": [
				{
					"name": "getNetworkAlertSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/alertSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"alertSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the alert configuration for this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/alertSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"alertSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the alert configuration for this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkAlertSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/alertSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"alertSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the alert configuration for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultDestinations| object| The network_wide destinations for all alerts on the network.\nalerts| array| Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/alertSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"alertSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the alert configuration for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultDestinations| object| The network_wide destinations for all alerts on the network.\nalerts| array| Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bluetooth clients",
			"item": [
				{
					"name": "getNetworkBluetoothClients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients?t0={{t0}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&includeConnectivityHistory={{includeConnectivityHistory}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"bluetoothClients"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "includeConnectivityHistory",
									"value": "{{includeConnectivityHistory}}",
									"description": "Include the connectivity history for this client"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the Bluetooth clients seen by APs in this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients?t0={{t0}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&includeConnectivityHistory={{includeConnectivityHistory}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bluetoothClients"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "includeConnectivityHistory",
											"value": "{{includeConnectivityHistory}}",
											"description": "Include the connectivity history for this client"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the Bluetooth clients seen by APs in this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1284392014819\",\r\n    \"mac\": \"22:33:44:55:66:77\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Miles's phone\",\r\n    \"deviceName\": \"Bose QuietComfort 35\",\r\n    \"manufacturer\": \"Bose\",\r\n    \"lastSeen\": 1526087474,\r\n    \"seenByDeviceMac\": \"00:11:22:33:44:55\",\r\n    \"inSightAlert\": false,\r\n    \"outOfSightAlert\": false,\r\n    \"tags\": [\r\n      \"tag1\",\r\n      \"tag2\"\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkBluetoothClient",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients/:bluetoothClientId?includeConnectivityHistory={{includeConnectivityHistory}}&connectivityHistoryTimespan={{connectivityHistoryTimespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"bluetoothClients",
								":bluetoothClientId"
							],
							"query": [
								{
									"key": "includeConnectivityHistory",
									"value": "{{includeConnectivityHistory}}",
									"description": "Include the connectivity history for this client"
								},
								{
									"key": "connectivityHistoryTimespan",
									"value": "{{connectivityHistoryTimespan}}",
									"description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "bluetoothClientId",
									"value": "{{bluetoothClientId}}"
								}
							]
						},
						"description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients/:bluetoothClientId?includeConnectivityHistory={{includeConnectivityHistory}}&connectivityHistoryTimespan={{connectivityHistoryTimespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bluetoothClients",
										":bluetoothClientId"
									],
									"query": [
										{
											"key": "includeConnectivityHistory",
											"value": "{{includeConnectivityHistory}}",
											"description": "Include the connectivity history for this client"
										},
										{
											"key": "connectivityHistoryTimespan",
											"value": "{{connectivityHistoryTimespan}}",
											"description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "bluetoothClientId",
											"value": "{{bluetoothClientId}}"
										}
									]
								},
								"description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1284392014819\",\r\n  \"mac\": \"22:33:44:55:66:77\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Miles's phone\",\r\n  \"deviceName\": \"Bose QuietComfort 35\",\r\n  \"manufacturer\": \"Bose\",\r\n  \"lastSeen\": 1526087474,\r\n  \"seenByDeviceMac\": \"00:11:22:33:44:55\",\r\n  \"inSightAlert\": false,\r\n  \"outOfSightAlert\": false,\r\n  \"tags\": [\r\n    \"tag1\",\r\n    \"tag2\"\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Camera quality retention profiles",
			"item": [
				{
					"name": "getNetworkCameraQualityRetentionProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"qualityRetentionProfiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the quality retention profiles for this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"qualityRetentionProfiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the quality retention profiles for this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Sample quality retention profile\",\r\n    \"restrictedBandwidthModeEnabled\": true,\r\n    \"motionBasedRetentionEnabled\": false,\r\n    \"audioRecordingEnabled\": false,\r\n    \"cloudArchiveEnabled\": false,\r\n    \"maxRetentionDays\": 7,\r\n    \"scheduleId\": null,\r\n    \"videoSettings\": {\r\n      \"MV32\": {\r\n        \"quality\": \"Enhanced\",\r\n        \"resolution\": \"1080x1080\"\r\n      },\r\n      \"MV21/MV71\": {\r\n        \"quality\": \"High\",\r\n        \"resolution\": \"1280x720\"\r\n      },\r\n      \"MV12/MV22/MV72\": {\r\n        \"quality\": \"High\",\r\n        \"resolution\": \"1920x1080\"\r\n      },\r\n      \"MV12WE\": {\r\n        \"quality\": \"High\",\r\n        \"resolution\": \"1920x1080\"\r\n      }\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkCameraQualityRetentionProfile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"qualityRetentionProfiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Creates new quality retention profile for this network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique. This parameter is required.\nmotionBasedRetentionEnabled| boolean| Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.\nrestrictedBandwidthModeEnabled| boolean| Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.\naudioRecordingEnabled| boolean| Whether or not to record audio. Can be either true or false. Defaults to false.\ncloudArchiveEnabled| boolean| Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.\nscheduleId| string| Schedule for which this camera will record video, or 'null' to always record.\nmaxRetentionDays| integer| The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days\nvideoSettings| object| Video quality and resolution settings for all the camera models.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"qualityRetentionProfiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Creates new quality retention profile for this network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique. This parameter is required.\nmotionBasedRetentionEnabled| boolean| Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.\nrestrictedBandwidthModeEnabled| boolean| Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.\naudioRecordingEnabled| boolean| Whether or not to record audio. Can be either true or false. Defaults to false.\ncloudArchiveEnabled| boolean| Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.\nscheduleId| string| Schedule for which this camera will record video, or 'null' to always record.\nmaxRetentionDays| integer| The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days\nvideoSettings| object| Video quality and resolution settings for all the camera models.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Sample quality retention profile\",\r\n  \"restrictedBandwidthModeEnabled\": true,\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"cloudArchiveEnabled\": false,\r\n  \"maxRetentionDays\": 7,\r\n  \"scheduleId\": null,\r\n  \"videoSettings\": {\r\n    \"MV32\": {\r\n      \"quality\": \"Enhanced\",\r\n      \"resolution\": \"1080x1080\"\r\n    },\r\n    \"MV21/MV71\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1280x720\"\r\n    },\r\n    \"MV12/MV22/MV72\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    },\r\n    \"MV12WE\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkCameraQualityRetentionProfile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"qualityRetentionProfiles",
								":qualityRetentionProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qualityRetentionProfileId",
									"value": "{{qualityRetentionProfileId}}"
								}
							]
						},
						"description": "Retrieve a single quality retention profile"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"qualityRetentionProfiles",
										":qualityRetentionProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qualityRetentionProfileId",
											"value": "{{qualityRetentionProfileId}}"
										}
									]
								},
								"description": "Retrieve a single quality retention profile"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Sample quality retention profile\",\r\n  \"restrictedBandwidthModeEnabled\": true,\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"cloudArchiveEnabled\": false,\r\n  \"maxRetentionDays\": 7,\r\n  \"scheduleId\": null,\r\n  \"videoSettings\": {\r\n    \"MV32\": {\r\n      \"quality\": \"Enhanced\",\r\n      \"resolution\": \"1080x1080\"\r\n    },\r\n    \"MV21/MV71\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1280x720\"\r\n    },\r\n    \"MV12/MV22/MV72\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    },\r\n    \"MV12WE\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkCameraQualityRetentionProfile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"qualityRetentionProfiles",
								":qualityRetentionProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qualityRetentionProfileId",
									"value": "{{qualityRetentionProfileId}}"
								}
							]
						},
						"description": "Update an existing quality retention profile for this network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique.\nmotionBasedRetentionEnabled| boolean| Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.\nrestrictedBandwidthModeEnabled| boolean| Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.\naudioRecordingEnabled| boolean| Whether or not to record audio. Can be either true or false. Defaults to false.\ncloudArchiveEnabled| boolean| Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.\nscheduleId| string| Schedule for which this camera will record video, or 'null' to always record.\nmaxRetentionDays| integer| The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days\nvideoSettings| object| Video quality and resolution settings for all the camera models.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"qualityRetentionProfiles",
										":qualityRetentionProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qualityRetentionProfileId",
											"value": "{{qualityRetentionProfileId}}"
										}
									]
								},
								"description": "Update an existing quality retention profile for this network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique.\nmotionBasedRetentionEnabled| boolean| Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.\nrestrictedBandwidthModeEnabled| boolean| Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.\naudioRecordingEnabled| boolean| Whether or not to record audio. Can be either true or false. Defaults to false.\ncloudArchiveEnabled| boolean| Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.\nscheduleId| string| Schedule for which this camera will record video, or 'null' to always record.\nmaxRetentionDays| integer| The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days\nvideoSettings| object| Video quality and resolution settings for all the camera models.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Sample quality retention profile\",\r\n  \"restrictedBandwidthModeEnabled\": true,\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"cloudArchiveEnabled\": false,\r\n  \"maxRetentionDays\": 7,\r\n  \"scheduleId\": null,\r\n  \"videoSettings\": {\r\n    \"MV32\": {\r\n      \"quality\": \"Enhanced\",\r\n      \"resolution\": \"1080x1080\"\r\n    },\r\n    \"MV21/MV71\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1280x720\"\r\n    },\r\n    \"MV12/MV22/MV72\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    },\r\n    \"MV12WE\": {\r\n      \"quality\": \"High\",\r\n      \"resolution\": \"1920x1080\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkCameraQualityRetentionProfile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"qualityRetentionProfiles",
								":qualityRetentionProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qualityRetentionProfileId",
									"value": "{{qualityRetentionProfileId}}"
								}
							]
						},
						"description": "Delete an existing quality retention profile for this network."
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"qualityRetentionProfiles",
										":qualityRetentionProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qualityRetentionProfileId",
											"value": "{{qualityRetentionProfileId}}"
										}
									]
								},
								"description": "Delete an existing quality retention profile for this network."
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cameras",
			"item": [
				{
					"name": "getDeviceCameraQualityAndRetentionSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetentionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"qualityAndRetentionSettings"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns quality and retention settings for the given camera"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetentionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"qualityAndRetentionSettings"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns quality and retention settings for the given camera"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"restrictedBandwidthModeEnabled\": false,\r\n  \"profileId\": null,\r\n  \"quality\": \"Standard\",\r\n  \"resolution\": 720\r\n}"
						}
					]
				},
				{
					"name": "updateDeviceCameraQualityAndRetentionSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"restrictedBandwidthModeEnabled\": false,\r\n  \"profileId\": null,\r\n  \"quality\": \"Standard\",\r\n  \"resolution\": 720\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetentionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"qualityAndRetentionSettings"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Update quality and retention settings for the given camera\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nprofileId| string| The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.\nmotionBasedRetentionEnabled| boolean| Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera\naudioRecordingEnabled| boolean| Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera\nrestrictedBandwidthModeEnabled| boolean| Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera\nquality| string| Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.\nresolution| string| Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"restrictedBandwidthModeEnabled\": false,\r\n  \"profileId\": null,\r\n  \"quality\": \"Standard\",\r\n  \"resolution\": 720\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetentionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"qualityAndRetentionSettings"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Update quality and retention settings for the given camera\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nprofileId| string| The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.\nmotionBasedRetentionEnabled| boolean| Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera\naudioRecordingEnabled| boolean| Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera\nrestrictedBandwidthModeEnabled| boolean| Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera\nquality| string| Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.\nresolution| string| Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"motionBasedRetentionEnabled\": false,\r\n  \"audioRecordingEnabled\": false,\r\n  \"restrictedBandwidthModeEnabled\": false,\r\n  \"profileId\": null,\r\n  \"quality\": \"Standard\",\r\n  \"resolution\": 720\r\n}"
						}
					]
				},
				{
					"name": "getNetworkCameraSchedules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/camera/schedules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"camera",
								"schedules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns a list of all camera recording schedules."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/camera/schedules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"camera",
										"schedules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns a list of all camera recording schedules."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"123\",\r\n    \"name\": \"Weekday schedule\"\r\n  },\r\n  {\r\n    \"id\": \"124\",\r\n    \"name\": \"Office hours\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "generateNetworkCameraSnapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cameras/:serial/snapshot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cameras",
								":serial",
								"snapshot"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntimestamp| string| [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.\n"
					},
					"response": [
						{
							"name": "Response_202",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cameras/:serial/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cameras",
										":serial",
										"snapshot"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntimestamp| string| [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.\n"
							},
							"status": "Successful operation",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"url\": \"https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2\",\r\n  \"expiry\": \"Access to the image will expire at 2018-12-11T03:12:39Z.\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkCameraVideoLink",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cameras/:serial/videoLink?timestamp={{timestamp}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cameras",
								":serial",
								"videoLink"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "{{timestamp}}",
									"description": "[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cameras/:serial/videoLink?timestamp={{timestamp}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cameras",
										":serial",
										"videoLink"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "{{timestamp}}",
											"description": "[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"url\": \"https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Clients",
			"item": [
				{
					"name": "getDeviceClients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/clients?t0={{t0}}&timespan={{timespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"clients"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
								}
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/clients?t0={{t0}}&timespan={{timespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"clients"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
										}
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"mdnsName\": \"Miles's phone\",\r\n  \"dhcpHostname\": \"MilesPhone\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients?t0={{t0}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the clients that have used this network in the timespan"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients?t0={{t0}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the clients that have used this network in the timespan"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"ip6\": \"\",\r\n  \"firstSeen\": 1518365681,\r\n  \"lastSeen\": 1526087474,\r\n  \"manufacturer\": \"Apple\",\r\n  \"os\": \"iOS\"\r\n}"
						}
					]
				},
				{
					"name": "provisionNetworkClients",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"name\": \"Miles's phone\",\r\n  \"devicePolicy\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/provision",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								"provision"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmac| string| The MAC address of the client. Required.\nname| string| The display name for the client. Optional. Limited to 255 bytes.\ndevicePolicy| string| The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.\ngroupPolicyId| string| The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"name\": \"Miles's phone\",\r\n  \"devicePolicy\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/provision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										"provision"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmac| string| The MAC address of the client. Required.\nname| string| The display name for the client. Optional. Limited to 255 bytes.\ndevicePolicy| string| The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.\ngroupPolicyId| string| The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"clientId\": \"k74272e\",\r\n  \"name\": \"Miles's phone\",\r\n  \"devicePolicy\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClient",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"null\",\r\n  \"vlan\": \"255\",\r\n  \"switchport\": null,\r\n  \"ip6\": \"\",\r\n  \"firstSeen\": 1518365681,\r\n  \"lastSeen\": 1526087474,\r\n  \"manufacturer\": \"Apple\",\r\n  \"os\": \"iOS\",\r\n  \"ssid\": \"My SSID\",\r\n  \"wirelessCapabilities\": \"802.11ac - 2.4 and 5 GHz\",\r\n  \"smInstalled\": true,\r\n  \"recentDeviceMac\": \"00:11:22:33:44:55\",\r\n  \"clientVpnConnections\": [\r\n    {\r\n      \"remoteIp\": \"1.2.3.4\",\r\n      \"connectedAt\": 1522613355,\r\n      \"disconnectedAt\": 1522613360\r\n    }\r\n  ],\r\n  \"lldp\": [\r\n    [\r\n      \"System name\",\r\n      \"Some system name\"\r\n    ],\r\n    [\r\n      \"System description\",\r\n      \"Some system description\"\r\n    ],\r\n    [\r\n      \"Port ID\",\r\n      \"1\"\r\n    ],\r\n    [\r\n      \"Chassis ID\",\r\n      \"00:18:0a:00:00:00\"\r\n    ],\r\n    [\r\n      \"Port description\",\r\n      \"eth0\"\r\n    ],\r\n    [\r\n      \"System capabilities\",\r\n      \"Two-port MAC Relay\"\r\n    ]\r\n  ],\r\n  \"cdp\": null,\r\n  \"status\": \"Online\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClientEvents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/events?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"events"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/events?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"events"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"deviceSerial\": \"Q234-ABCD-5678\",\r\n    \"occurredAt\": 1518365681,\r\n    \"type\": \"l3roaming_assoc_start\",\r\n    \"details\": {\r\n      \"vap\": \"1\",\r\n      \"on_packet\": \"true\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkClientLatencyHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/latencyHistory?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"latencyHistory"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
								},
								{
									"key": "resolution",
									"value": "{{resolution}}",
									"description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/latencyHistory?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"latencyHistory"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
										},
										{
											"key": "resolution",
											"value": "{{resolution}}",
											"description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"t0\": 1550534400,\r\n    \"t1\": 1550620800,\r\n    \"latencyBinsByCategory\": {\r\n      \"backgroundTraffic\": {\r\n        \"0.5\": 41750,\r\n        \"1.0\": 21552,\r\n        \"2.0\": 59940,\r\n        \"4.0\": 146622,\r\n        \"8.0\": 57354,\r\n        \"16.0\": 0,\r\n        \"32.0\": 9954,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 1896,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      },\r\n      \"bestEffortTraffic\": {\r\n        \"0.5\": 1840899,\r\n        \"1.0\": 1644506,\r\n        \"2.0\": 629958,\r\n        \"4.0\": 449564,\r\n        \"8.0\": 2009658,\r\n        \"16.0\": 1329568,\r\n        \"32.0\": 282168,\r\n        \"64.0\": 97573,\r\n        \"128.0\": 191977,\r\n        \"256.0\": 30560,\r\n        \"512.0\": 26032,\r\n        \"1024.0\": 4943,\r\n        \"2048.0\": 12072\r\n      },\r\n      \"videoTraffic\": {\r\n        \"0.5\": 0,\r\n        \"1.0\": 0,\r\n        \"2.0\": 0,\r\n        \"4.0\": 0,\r\n        \"8.0\": 0,\r\n        \"16.0\": 0,\r\n        \"32.0\": 0,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 0,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      },\r\n      \"voiceTraffic\": {\r\n        \"0.5\": 716,\r\n        \"1.0\": 948,\r\n        \"2.0\": 474,\r\n        \"4.0\": 78,\r\n        \"8.0\": 0,\r\n        \"16.0\": 0,\r\n        \"32.0\": 0,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 0,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      }\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkClientPolicy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"policy"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"policy"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkClientPolicy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"policy"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndevicePolicy| string| The group policy (Whitelisted, Blocked, Normal, Group policy)\ngroupPolicyId| string| [optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"policy"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndevicePolicy| string| The group policy (Whitelisted, Blocked, Normal, Group policy)\ngroupPolicyId| string| [optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClientSplashAuthorizationStatus",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"splashAuthorizationStatus"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"splashAuthorizationStatus"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkClientSplashAuthorizationStatus",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"splashAuthorizationStatus"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nssids| object| The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"splashAuthorizationStatus"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nssids| object| The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClientTrafficHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/trafficHistory?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"trafficHistory"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/trafficHistory?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"trafficHistory"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ts\": 1518365681,\r\n    \"application\": \"Google\",\r\n    \"destination\": \"www.google.com\",\r\n    \"protocol\": \"UDP\",\r\n    \"port\": 443,\r\n    \"recv\": 383,\r\n    \"sent\": 56,\r\n    \"numFlows\": 5,\r\n    \"activeSeconds\": 240\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkClientUsageHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/usageHistory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"usageHistory"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/usageHistory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"usageHistory"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"sent\": 500,\r\n    \"received\": 680,\r\n    \"ts\": 1518365681\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Config templates",
			"item": [
				{
					"name": "getOrganizationConfigTemplates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"configTemplates"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the configuration templates for this organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"configTemplates"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the configuration templates for this organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"N_24329156\",\r\n    \"name\": \"My config template\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "deleteOrganizationConfigTemplate",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"configTemplates",
								":configTemplateId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "configTemplateId",
									"value": "{{configTemplateId}}"
								}
							]
						},
						"description": "Remove a configuration template"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"configTemplates",
										":configTemplateId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "configTemplateId",
											"value": "{{configTemplateId}}"
										}
									]
								},
								"description": "Remove a configuration template"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Connectivity monitoring destinations",
			"item": [
				{
					"name": "getNetworkConnectivityMonitoringDestinations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/connectivityMonitoringDestinations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"connectivityMonitoringDestinations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the connectivity testing destinations for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/connectivityMonitoringDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"connectivityMonitoringDestinations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the connectivity testing destinations for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\",\r\n      \"description\": null,\r\n      \"default\": false\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkConnectivityMonitoringDestinations",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/connectivityMonitoringDestinations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"connectivityMonitoringDestinations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the connectivity testing destinations for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestinations| array| The list of connectivity monitoring destinations\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/connectivityMonitoringDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"connectivityMonitoringDestinations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the connectivity testing destinations for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestinations| array| The list of connectivity monitoring destinations\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\",\r\n      \"description\": null,\r\n      \"default\": false\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Content filtering categories",
			"item": [
				{
					"name": "getNetworkContentFilteringCategories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/contentFiltering/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"contentFiltering",
								"categories"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List all available content filtering categories for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/contentFiltering/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"contentFiltering",
										"categories"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List all available content filtering categories for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"categories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/3\",\r\n      \"name\": \"Financial Services\"\r\n    },\r\n    \"...\",\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/11\",\r\n      \"name\": \"Adult and Pornography\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Content filtering rules",
			"item": [
				{
					"name": "getNetworkContentFiltering",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/contentFiltering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"contentFiltering"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the content filtering settings for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/contentFiltering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"contentFiltering"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the content filtering settings for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkContentFiltering",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    \"meraki:contentFiltering/category/1\",\r\n    \"meraki:contentFiltering/category/7\"\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/contentFiltering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"contentFiltering"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the content filtering settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nallowedUrlPatterns| array| A whitelist of URL patterns to allow\nblockedUrlPatterns| array| A blacklist of URL patterns to block\nblockedUrlCategories| array| A list of URL categories to block\nurlCategoryListSize| string| URL category list size which is either 'topSites' or 'fullList'\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    \"meraki:contentFiltering/category/1\",\r\n    \"meraki:contentFiltering/category/7\"\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/contentFiltering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"contentFiltering"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the content filtering settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nallowedUrlPatterns| array| A whitelist of URL patterns to allow\nblockedUrlPatterns| array| A blacklist of URL patterns to block\nblockedUrlCategories| array| A list of URL categories to block\nurlCategoryListSize| string| URL category list size which is either 'topSites' or 'fullList'\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dashboard branding policies",
			"item": [
				{
					"name": "getOrganizationBrandingPolicies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the branding policies of an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the branding policies of an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"brandingPolicyId\": \"456\",\r\n    \"name\": \"My Branding Policy\",\r\n    \"enabled\": true,\r\n    \"adminSettings\": {\r\n      \"appliesTo\": \"All admins of networks...\",\r\n      \"values\": [\r\n        \"N_1234\",\r\n        \"L_5678\"\r\n      ]\r\n    },\r\n    \"helpSettings\": {\r\n      \"helpTab\": \"show\",\r\n      \"getHelpSubtab\": \"default or inherit\",\r\n      \"communitySubtab\": \"show\",\r\n      \"casesSubtab\": \"hide\",\r\n      \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n      \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n      \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n      \"ciscoMerakiProductDocumentation\": \"show\",\r\n      \"supportContactInfo\": \"show\",\r\n      \"newFeaturesSubtab\": \"show\",\r\n      \"firewallInfoSubtab\": \"hide\",\r\n      \"apiDocsSubtab\": \"default or inherit\",\r\n      \"hardwareReplacementsSubtab\": \"hide\",\r\n      \"smForums\": \"hide\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createOrganizationBrandingPolicy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Add a new branding policy to an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| Name of the Dashboard branding policy.\nenabled| boolean| Boolean indicating whether this policy is enabled.\nadminSettings| object| Settings for describing which kinds of admins this policy applies to.\nhelpSettings| object|     Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n Each property defaults to 'default or inherit' when not provided.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Add a new branding policy to an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| Name of the Dashboard branding policy.\nenabled| boolean| Boolean indicating whether this policy is enabled.\nadminSettings| object| Settings for describing which kinds of admins this policy applies to.\nhelpSettings| object|     Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n Each property defaults to 'default or inherit' when not provided.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationBrandingPoliciesPriorities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies",
								"priorities"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority)."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies",
										"priorities"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority)."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"brandingPolicyIds\": [\r\n    \"123\",\r\n    \"456\",\r\n    \"789\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationBrandingPoliciesPriorities",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brandingPolicyIds\": [\r\n    \"123\",\r\n    \"456\",\r\n    \"789\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies",
								"priorities"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Update the priority ordering of an organization's branding policies.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbrandingPolicyIds| array| A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"brandingPolicyIds\": [\r\n    \"123\",\r\n    \"456\",\r\n    \"789\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies",
										"priorities"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Update the priority ordering of an organization's branding policies.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbrandingPolicyIds| array| A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"brandingPolicyIds\": [\r\n    \"123\",\r\n    \"456\",\r\n    \"789\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationBrandingPolicy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies",
								":brandingPolicyId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "brandingPolicyId",
									"value": "{{brandingPolicyId}}"
								}
							]
						},
						"description": "Return a branding policy"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies",
										":brandingPolicyId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "brandingPolicyId",
											"value": "{{brandingPolicyId}}"
										}
									]
								},
								"description": "Return a branding policy"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationBrandingPolicy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies",
								":brandingPolicyId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "brandingPolicyId",
									"value": "{{brandingPolicyId}}"
								}
							]
						},
						"description": "Update a branding policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| Name of the Dashboard branding policy.\nenabled| boolean| Boolean indicating whether this policy is enabled.\nadminSettings| object| Settings for describing which kinds of admins this policy applies to.\nhelpSettings| object|     Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies",
										":brandingPolicyId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "brandingPolicyId",
											"value": "{{brandingPolicyId}}"
										}
									]
								},
								"description": "Update a branding policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| Name of the Dashboard branding policy.\nenabled| boolean| Boolean indicating whether this policy is enabled.\nadminSettings| object| Settings for describing which kinds of admins this policy applies to.\nhelpSettings| object|     Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"brandingPolicyId\": \"456\",\r\n  \"name\": \"My Branding Policy\",\r\n  \"enabled\": true,\r\n  \"adminSettings\": {\r\n    \"appliesTo\": \"All admins of networks...\",\r\n    \"values\": [\r\n      \"N_1234\",\r\n      \"L_5678\"\r\n    ]\r\n  },\r\n  \"helpSettings\": {\r\n    \"helpTab\": \"show\",\r\n    \"getHelpSubtab\": \"default or inherit\",\r\n    \"communitySubtab\": \"show\",\r\n    \"casesSubtab\": \"hide\",\r\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\r\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\r\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\r\n    \"ciscoMerakiProductDocumentation\": \"show\",\r\n    \"supportContactInfo\": \"show\",\r\n    \"newFeaturesSubtab\": \"show\",\r\n    \"firewallInfoSubtab\": \"hide\",\r\n    \"apiDocsSubtab\": \"default or inherit\",\r\n    \"hardwareReplacementsSubtab\": \"hide\",\r\n    \"smForums\": \"hide\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteOrganizationBrandingPolicy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"brandingPolicies",
								":brandingPolicyId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "brandingPolicyId",
									"value": "{{brandingPolicyId}}"
								}
							]
						},
						"description": "Delete a branding policy"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"brandingPolicies",
										":brandingPolicyId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "brandingPolicyId",
											"value": "{{brandingPolicyId}}"
										}
									]
								},
								"description": "Delete a branding policy"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "getNetworkDevices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the devices in a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the devices in a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"lat\": 37.4180951010362,\r\n    \"lng\": -122.098531723022,\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"model\": \"MR34\",\r\n    \"address\": \"1600 Pennsylvania Ave\",\r\n    \"notes\": \"My AP's note\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"tags\": \" recently-added \",\r\n    \"networkId\": \"N_24329156\",\r\n    \"beaconIdParams\": {\r\n      \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n      \"major\": 5,\r\n      \"minor\": 3\r\n    },\r\n    \"firmware\": \"wireless-25-14\",\r\n    \"floorPlanId\": \"g_1234567\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "claimNetworkDevices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serial\": \"Q234-ABCD-5678\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/claim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								"claim"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Claim a device into a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of a device\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"serial\": \"Q234-ABCD-5678\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										"claim"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Claim a device into a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of a device\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return a single device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return a single device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  },\r\n  \"firmware\": \"wireless-25-14\",\r\n  \"floorPlanId\": \"g_1234567\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkDevice",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"tags\": \" recently-added \"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Update the attributes of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of a device\ntags| string| The tags of a device\nlat| number| The latitude of a device\nlng| number| The longitude of a device\naddress| string| The address of a device\nnotes| string| The notes for the device. String. Limited to 255 characters.\nmoveMapMarker| boolean| Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.\nswitchProfileId| string| The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.\nfloorPlanId| string| The floor plan to associate to this device. null disassociates the device from the floorplan.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"tags\": \" recently-added \"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Update the attributes of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of a device\ntags| string| The tags of a device\nlat| number| The latitude of a device\nlng| number| The longitude of a device\naddress| string| The address of a device\nnotes| string| The notes for the device. String. Limited to 255 characters.\nmoveMapMarker| boolean| Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.\nswitchProfileId| string| The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.\nfloorPlanId| string| The floor plan to associate to this device. null disassociates the device from the floorplan.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  },\r\n  \"firmware\": \"wireless-25-14\",\r\n  \"floorPlanId\": \"g_1234567\"\r\n}"
						}
					]
				},
				{
					"name": "blinkNetworkDeviceLeds",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"duration\": 20,\r\n  \"period\": 160,\r\n  \"duty\": 50\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/blinkLeds",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"blinkLeds"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Blink the LEDs on a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nduration| integer| The duration in seconds. Must be between 5 and 120. Default is 20 seconds\nperiod| integer| The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds\nduty| integer| The duty cycle as the percent active. Must be between 10 and 90. Default is 50.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"duration\": 20,\r\n  \"period\": 160,\r\n  \"duty\": 50\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/blinkLeds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"blinkLeds"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Blink the LEDs on a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nduration| integer| The duration in seconds. Must be between 5 and 120. Default is 20 seconds\nperiod| integer| The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds\nduty| integer| The duty cycle as the percent active. Must be between 10 and 90. Default is 50.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"sentToDevice\": true\r\n}"
						}
					]
				},
				{
					"name": "getNetworkDeviceLldp_cdp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/lldp_cdp?timespan={{timespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"lldp_cdp"
							],
							"query": [
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "List LLDP and CDP information for a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/lldp_cdp?timespan={{timespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"lldp_cdp"
									],
									"query": [
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "List LLDP and CDP information for a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"sourceMac\": \"00:11:22:33:44:55\",\r\n  \"ports\": {\r\n    \"8\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 10\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"8\"\r\n      }\r\n    },\r\n    \"12\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 11\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      },\r\n      \"lldp\": {\r\n        \"systemName\": \"Meraki MS350-24X - Phineas\",\r\n        \"portId\": \"11\",\r\n        \"managementAddress\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      }\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkDeviceLossAndLatencyHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/lossAndLatencyHistory?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}&uplink={{uplink}}&ip={{ip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"lossAndLatencyHistory"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
								},
								{
									"key": "resolution",
									"value": "{{resolution}}",
									"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
								},
								{
									"key": "uplink",
									"value": "{{uplink}}",
									"description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The destination IP used to obtain the requested stats. This is required."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Get the uplink loss percentage and latency in milliseconds for a wired network device."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/lossAndLatencyHistory?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}&uplink={{uplink}}&ip={{ip}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"lossAndLatencyHistory"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
										},
										{
											"key": "resolution",
											"value": "{{resolution}}",
											"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
										},
										{
											"key": "uplink",
											"value": "{{uplink}}",
											"description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The destination IP used to obtain the requested stats. This is required."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Get the uplink loss percentage and latency in milliseconds for a wired network device."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"startTime\": \"2018-10-09T22:18:27Z\",\r\n    \"endTime\": \"2018-10-09T22:19:27Z\",\r\n    \"lossPercent\": 5,\r\n    \"latencyMs\": 324\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:19:27Z\",\r\n    \"endTime\": \"2018-10-09T22:20:27Z\",\r\n    \"lossPercent\": 1,\r\n    \"latencyMs\": 43\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:20:27Z\",\r\n    \"endTime\": \"2018-10-09T22:21:27Z\",\r\n    \"lossPercent\": 0,\r\n    \"latencyMs\": 44\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkDevicePerformance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/performance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"performance"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/performance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"performance"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"perfScore\": 10\r\n}"
						}
					]
				},
				{
					"name": "rebootNetworkDevice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/reboot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"reboot"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Reboot a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"reboot"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Reboot a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "removeNetworkDevice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"remove"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Remove a single device"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"remove"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Remove a single device"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkDeviceUplink",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/uplink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"uplink"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the uplink information for a device."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/uplink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"uplink"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the uplink information for a device."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"interface\": \"WAN 1\",\r\n    \"status\": \"Active\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"dns\": \"8.8.8.8, 8.8.4.4\",\r\n    \"usingStaticIp\": false\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationDevices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/devices?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&configurationUpdatedAfter={{configurationUpdatedAfter}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"devices"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "configurationUpdatedAfter",
									"value": "{{configurationUpdatedAfter}}",
									"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the devices in an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/devices?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&configurationUpdatedAfter={{configurationUpdatedAfter}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"devices"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "configurationUpdatedAfter",
											"value": "{{configurationUpdatedAfter}}",
											"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the devices in an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"model\": \"MR34\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"firmware\": \"wireless-25-14\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "getNetworkEvents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/events?productType={{productType}}&includedEventTypes[]={{includedEventTypes}}&excludedEventTypes[]={{excludedEventTypes}}&deviceMac={{deviceMac}}&deviceSerial={{deviceSerial}}&deviceName={{deviceName}}&clientIp={{clientIp}}&clientMac={{clientMac}}&clientName={{clientName}}&smDeviceMac={{smDeviceMac}}&smDeviceName={{smDeviceName}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"events"
							],
							"query": [
								{
									"key": "productType",
									"value": "{{productType}}",
									"description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway"
								},
								{
									"key": "includedEventTypes[]",
									"value": "{{includedEventTypes}}",
									"description": "A list of event types. The returned events will be filtered to only include events with these types."
								},
								{
									"key": "excludedEventTypes[]",
									"value": "{{excludedEventTypes}}",
									"description": "A list of event types. The returned events will be filtered to exclude events with these types."
								},
								{
									"key": "deviceMac",
									"value": "{{deviceMac}}",
									"description": "The MAC address of the Meraki device which the list of events will be filtered with"
								},
								{
									"key": "deviceSerial",
									"value": "{{deviceSerial}}",
									"description": "The serial of the Meraki device which the list of events will be filtered with"
								},
								{
									"key": "deviceName",
									"value": "{{deviceName}}",
									"description": "The name of the Meraki device which the list of events will be filtered with"
								},
								{
									"key": "clientIp",
									"value": "{{clientIp}}",
									"description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks."
								},
								{
									"key": "clientMac",
									"value": "{{clientMac}}",
									"description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks."
								},
								{
									"key": "clientName",
									"value": "{{clientName}}",
									"description": "The name, or partial name, of the client which the list of events will be filtered with"
								},
								{
									"key": "smDeviceMac",
									"value": "{{smDeviceMac}}",
									"description": "The MAC address of the Systems Manager device which the list of events will be filtered with"
								},
								{
									"key": "smDeviceName",
									"value": "{{smDeviceName}}",
									"description": "The name of the Systems Manager device which the list of events will be filtered with"
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the events for the network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/events?productType={{productType}}&includedEventTypes[]={{includedEventTypes}}&excludedEventTypes[]={{excludedEventTypes}}&deviceMac={{deviceMac}}&deviceSerial={{deviceSerial}}&deviceName={{deviceName}}&clientIp={{clientIp}}&clientMac={{clientMac}}&clientName={{clientName}}&smDeviceMac={{smDeviceMac}}&smDeviceName={{smDeviceName}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"events"
									],
									"query": [
										{
											"key": "productType",
											"value": "{{productType}}",
											"description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway"
										},
										{
											"key": "includedEventTypes[]",
											"value": "{{includedEventTypes}}",
											"description": "A list of event types. The returned events will be filtered to only include events with these types."
										},
										{
											"key": "excludedEventTypes[]",
											"value": "{{excludedEventTypes}}",
											"description": "A list of event types. The returned events will be filtered to exclude events with these types."
										},
										{
											"key": "deviceMac",
											"value": "{{deviceMac}}",
											"description": "The MAC address of the Meraki device which the list of events will be filtered with"
										},
										{
											"key": "deviceSerial",
											"value": "{{deviceSerial}}",
											"description": "The serial of the Meraki device which the list of events will be filtered with"
										},
										{
											"key": "deviceName",
											"value": "{{deviceName}}",
											"description": "The name of the Meraki device which the list of events will be filtered with"
										},
										{
											"key": "clientIp",
											"value": "{{clientIp}}",
											"description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks."
										},
										{
											"key": "clientMac",
											"value": "{{clientMac}}",
											"description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks."
										},
										{
											"key": "clientName",
											"value": "{{clientName}}",
											"description": "The name, or partial name, of the client which the list of events will be filtered with"
										},
										{
											"key": "smDeviceMac",
											"value": "{{smDeviceMac}}",
											"description": "The MAC address of the Systems Manager device which the list of events will be filtered with"
										},
										{
											"key": "smDeviceName",
											"value": "{{smDeviceName}}",
											"description": "The name of the Systems Manager device which the list of events will be filtered with"
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the events for the network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"message\": null,\r\n  \"pageStartAt\": \"2018-02-11T00:00:00.090210Z\",\r\n  \"pageEndAt\": \"2018-02-11T00:00:00.090210Z\",\r\n  \"events\": [\r\n    {\r\n      \"occurredAt\": \"2018-02-11T00:00:00.090210Z\",\r\n      \"networkId\": \"N_24329156\",\r\n      \"type\": \"association\",\r\n      \"description\": \"802.11 association\",\r\n      \"clientId\": \"k74272e\",\r\n      \"clientDescription\": \"Miles's phone\",\r\n      \"deviceSerial\": \"Q234-ABCD-5678\",\r\n      \"deviceName\": \"My AP\",\r\n      \"ssidNumber\": 1,\r\n      \"ssidName\": \"My SSID\",\r\n      \"eventData\": {\r\n        \"radio\": \"1\",\r\n        \"vap\": \"1\",\r\n        \"client_mac\": \"22:33:44:55:66:77\",\r\n        \"client_ip\": \"1.2.3.4\",\r\n        \"channel\": \"36\",\r\n        \"rssi\": \"12\",\r\n        \"aid\": \"2104009183\"\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkEventsEventTypes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/events/eventTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"events",
								"eventTypes"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the event type to human-readable description"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/events/eventTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"events",
										"eventTypes"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the event type to human-readable description"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"category\": \"802.11\",\r\n    \"type\": \"association\",\r\n    \"description\": \"802.11 association\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Firewalled services",
			"item": [
				{
					"name": "getNetworkFirewalledServices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/firewalledServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"firewalledServices"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the appliance services and their accessibility rules"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/firewalledServices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"firewalledServices"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the appliance services and their accessibility rules"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"service\": \"web\",\r\n    \"access\": \"restricted\",\r\n    \"allowedIps\": [\r\n      \"123.123.123.1\"\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkFirewalledService",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/firewalledServices/:service",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"firewalledServices",
								":service"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "service",
									"value": "{{service}}"
								}
							]
						},
						"description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/firewalledServices/:service",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"firewalledServices",
										":service"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "service",
											"value": "{{service}}"
										}
									]
								},
								"description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkFirewalledService",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/firewalledServices/:service",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"firewalledServices",
								":service"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "service",
									"value": "{{service}}"
								}
							]
						},
						"description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \naccess| string| A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required\nallowedIps| array| An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/firewalledServices/:service",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"firewalledServices",
										":service"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "service",
											"value": "{{service}}"
										}
									]
								},
								"description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \naccess| string| A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required\nallowedIps| array| An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Floorplans",
			"item": [
				{
					"name": "getNetworkFloorPlans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"floorPlans"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the floor plans that belong to your network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"floorPlans"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the floor plans that belong to your network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"floorPlanId\": \"g_1234567\",\r\n    \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\r\n    \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\r\n    \"imageExtension\": \"png\",\r\n    \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\r\n    \"name\": \"HQ Floor Plan\",\r\n    \"devices\": [\r\n      {\r\n        \"name\": \"My AP\",\r\n        \"lat\": 37.4180951010362,\r\n        \"lng\": -122.098531723022,\r\n        \"serial\": \"Q234-ABCD-5678\",\r\n        \"mac\": \"00:11:22:33:44:55\",\r\n        \"model\": \"MR34\",\r\n        \"address\": \"1600 Pennsylvania Ave\",\r\n        \"notes\": \"My AP's note\",\r\n        \"lanIp\": \"1.2.3.4\",\r\n        \"tags\": \" recently-added \",\r\n        \"networkId\": \"N_24329156\",\r\n        \"beaconIdParams\": {\r\n          \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n          \"major\": 5,\r\n          \"minor\": 3\r\n        },\r\n        \"firmware\": \"wireless-25-14\",\r\n        \"floorPlanId\": \"g_1234567\"\r\n      }\r\n    ],\r\n    \"width\": 100,\r\n    \"height\": 150,\r\n    \"center\": {\r\n      \"lat\": 37.770040510499996,\r\n      \"lng\": -122.38714009525\r\n    },\r\n    \"bottomLeftCorner\": {\r\n      \"lat\": 37.7696461495,\r\n      \"lng\": -122.3880815506\r\n    },\r\n    \"bottomRightCorner\": {\r\n      \"lat\": 37.771524649766654,\r\n      \"lng\": -122.38795275055205\r\n    },\r\n    \"topLeftCorner\": {\r\n      \"lat\": 37.769700101836364,\r\n      \"lng\": -122.3888684251381\r\n    },\r\n    \"topRightCorner\": {\r\n      \"lat\": 37.77157860210302,\r\n      \"lng\": -122.38873962509013\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkFloorPlan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"floorPlans"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Upload a floor plan\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of your floor plan.\ncenter| object| The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.\nbottomLeftCorner| object| The longitude and latitude of the bottom left corner of your floor plan.\nbottomRightCorner| object| The longitude and latitude of the bottom right corner of your floor plan.\ntopLeftCorner| object| The longitude and latitude of the top left corner of your floor plan.\ntopRightCorner| object| The longitude and latitude of the top right corner of your floor plan.\nimageContents| string| The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"floorPlans"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Upload a floor plan\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of your floor plan.\ncenter| object| The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.\nbottomLeftCorner| object| The longitude and latitude of the bottom left corner of your floor plan.\nbottomRightCorner| object| The longitude and latitude of the bottom right corner of your floor plan.\ntopLeftCorner| object| The longitude and latitude of the top left corner of your floor plan.\ntopRightCorner| object| The longitude and latitude of the top right corner of your floor plan.\nimageContents| string| The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"floorPlanId\": \"g_1234567\",\r\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\r\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\r\n  \"imageExtension\": \"png\",\r\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\r\n  \"name\": \"HQ Floor Plan\",\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"My AP\",\r\n      \"lat\": 37.4180951010362,\r\n      \"lng\": -122.098531723022,\r\n      \"serial\": \"Q234-ABCD-5678\",\r\n      \"mac\": \"00:11:22:33:44:55\",\r\n      \"model\": \"MR34\",\r\n      \"address\": \"1600 Pennsylvania Ave\",\r\n      \"notes\": \"My AP's note\",\r\n      \"lanIp\": \"1.2.3.4\",\r\n      \"tags\": \" recently-added \",\r\n      \"networkId\": \"N_24329156\",\r\n      \"beaconIdParams\": {\r\n        \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"major\": 5,\r\n        \"minor\": 3\r\n      },\r\n      \"firmware\": \"wireless-25-14\",\r\n      \"floorPlanId\": \"g_1234567\"\r\n    }\r\n  ],\r\n  \"width\": 100,\r\n  \"height\": 150,\r\n  \"center\": {\r\n    \"lat\": 37.770040510499996,\r\n    \"lng\": -122.38714009525\r\n  },\r\n  \"bottomLeftCorner\": {\r\n    \"lat\": 37.7696461495,\r\n    \"lng\": -122.3880815506\r\n  },\r\n  \"bottomRightCorner\": {\r\n    \"lat\": 37.771524649766654,\r\n    \"lng\": -122.38795275055205\r\n  },\r\n  \"topLeftCorner\": {\r\n    \"lat\": 37.769700101836364,\r\n    \"lng\": -122.3888684251381\r\n  },\r\n  \"topRightCorner\": {\r\n    \"lat\": 37.77157860210302,\r\n    \"lng\": -122.38873962509013\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkFloorPlan",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"floorPlans",
								":floorPlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "floorPlanId",
									"value": "{{floorPlanId}}"
								}
							]
						},
						"description": "Find a floor plan by ID"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"floorPlans",
										":floorPlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "floorPlanId",
											"value": "{{floorPlanId}}"
										}
									]
								},
								"description": "Find a floor plan by ID"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"floorPlanId\": \"g_1234567\",\r\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\r\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\r\n  \"imageExtension\": \"png\",\r\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\r\n  \"name\": \"HQ Floor Plan\",\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"My AP\",\r\n      \"lat\": 37.4180951010362,\r\n      \"lng\": -122.098531723022,\r\n      \"serial\": \"Q234-ABCD-5678\",\r\n      \"mac\": \"00:11:22:33:44:55\",\r\n      \"model\": \"MR34\",\r\n      \"address\": \"1600 Pennsylvania Ave\",\r\n      \"notes\": \"My AP's note\",\r\n      \"lanIp\": \"1.2.3.4\",\r\n      \"tags\": \" recently-added \",\r\n      \"networkId\": \"N_24329156\",\r\n      \"beaconIdParams\": {\r\n        \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"major\": 5,\r\n        \"minor\": 3\r\n      },\r\n      \"firmware\": \"wireless-25-14\",\r\n      \"floorPlanId\": \"g_1234567\"\r\n    }\r\n  ],\r\n  \"width\": 100,\r\n  \"height\": 150,\r\n  \"center\": {\r\n    \"lat\": 37.770040510499996,\r\n    \"lng\": -122.38714009525\r\n  },\r\n  \"bottomLeftCorner\": {\r\n    \"lat\": 37.7696461495,\r\n    \"lng\": -122.3880815506\r\n  },\r\n  \"bottomRightCorner\": {\r\n    \"lat\": 37.771524649766654,\r\n    \"lng\": -122.38795275055205\r\n  },\r\n  \"topLeftCorner\": {\r\n    \"lat\": 37.769700101836364,\r\n    \"lng\": -122.3888684251381\r\n  },\r\n  \"topRightCorner\": {\r\n    \"lat\": 37.77157860210302,\r\n    \"lng\": -122.38873962509013\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkFloorPlan",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"floorPlans",
								":floorPlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "floorPlanId",
									"value": "{{floorPlanId}}"
								}
							]
						},
						"description": "Update a floor plan's geolocation and other meta data\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of your floor plan.\ncenter| object| The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.\nbottomLeftCorner| object| The longitude and latitude of the bottom left corner of your floor plan.\nbottomRightCorner| object| The longitude and latitude of the bottom right corner of your floor plan.\ntopLeftCorner| object| The longitude and latitude of the top left corner of your floor plan.\ntopRightCorner| object| The longitude and latitude of the top right corner of your floor plan.\nimageContents| string| The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"floorPlans",
										":floorPlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "floorPlanId",
											"value": "{{floorPlanId}}"
										}
									]
								},
								"description": "Update a floor plan's geolocation and other meta data\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of your floor plan.\ncenter| object| The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.\nbottomLeftCorner| object| The longitude and latitude of the bottom left corner of your floor plan.\nbottomRightCorner| object| The longitude and latitude of the bottom right corner of your floor plan.\ntopLeftCorner| object| The longitude and latitude of the top left corner of your floor plan.\ntopRightCorner| object| The longitude and latitude of the top right corner of your floor plan.\nimageContents| string| The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"floorPlanId\": \"g_1234567\",\r\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\r\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\r\n  \"imageExtension\": \"png\",\r\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\r\n  \"name\": \"HQ Floor Plan\",\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"My AP\",\r\n      \"lat\": 37.4180951010362,\r\n      \"lng\": -122.098531723022,\r\n      \"serial\": \"Q234-ABCD-5678\",\r\n      \"mac\": \"00:11:22:33:44:55\",\r\n      \"model\": \"MR34\",\r\n      \"address\": \"1600 Pennsylvania Ave\",\r\n      \"notes\": \"My AP's note\",\r\n      \"lanIp\": \"1.2.3.4\",\r\n      \"tags\": \" recently-added \",\r\n      \"networkId\": \"N_24329156\",\r\n      \"beaconIdParams\": {\r\n        \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"major\": 5,\r\n        \"minor\": 3\r\n      },\r\n      \"firmware\": \"wireless-25-14\",\r\n      \"floorPlanId\": \"g_1234567\"\r\n    }\r\n  ],\r\n  \"width\": 100,\r\n  \"height\": 150,\r\n  \"center\": {\r\n    \"lat\": 37.770040510499996,\r\n    \"lng\": -122.38714009525\r\n  },\r\n  \"bottomLeftCorner\": {\r\n    \"lat\": 37.7696461495,\r\n    \"lng\": -122.3880815506\r\n  },\r\n  \"bottomRightCorner\": {\r\n    \"lat\": 37.771524649766654,\r\n    \"lng\": -122.38795275055205\r\n  },\r\n  \"topLeftCorner\": {\r\n    \"lat\": 37.769700101836364,\r\n    \"lng\": -122.3888684251381\r\n  },\r\n  \"topRightCorner\": {\r\n    \"lat\": 37.77157860210302,\r\n    \"lng\": -122.38873962509013\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkFloorPlan",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"floorPlans",
								":floorPlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "floorPlanId",
									"value": "{{floorPlanId}}"
								}
							]
						},
						"description": "Destroy a floor plan"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"floorPlans",
										":floorPlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "floorPlanId",
											"value": "{{floorPlanId}}"
										}
									]
								},
								"description": "Destroy a floor plan"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Group policies",
			"item": [
				{
					"name": "getNetworkGroupPolicies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"groupPolicies"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the group policies in a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"groupPolicies"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the group policies in a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"No video streaming\",\r\n    \"groupPolicyId\": \"101\",\r\n    \"scheduling\": {\r\n      \"enabled\": true,\r\n      \"monday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"tuesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"wednesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"thursday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"friday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"saturday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      },\r\n      \"sunday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      }\r\n    },\r\n    \"bandwidth\": {\r\n      \"settings\": \"custom\",\r\n      \"bandwidthLimits\": {\r\n        \"limitUp\": 1000000,\r\n        \"limitDown\": 1000000\r\n      }\r\n    },\r\n    \"firewallAndTrafficShaping\": {\r\n      \"settings\": \"custom\",\r\n      \"trafficShapingRules\": [\r\n        {\r\n          \"definitions\": [\r\n            {\r\n              \"type\": \"host\",\r\n              \"value\": \"google.com\"\r\n            },\r\n            {\r\n              \"type\": \"port\",\r\n              \"value\": \"9090\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"10.1.0.0/16:80\"\r\n            },\r\n            {\r\n              \"type\": \"localNet\",\r\n              \"value\": \"192.168.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"applicationCategory\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/category/2\",\r\n                \"name\": \"Blogging\"\r\n              }\r\n            },\r\n            {\r\n              \"type\": \"application\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/application/133\",\r\n                \"name\": \"Battle.net\"\r\n              }\r\n            }\r\n          ],\r\n          \"perClientBandwidthLimits\": {\r\n            \"settings\": \"custom\",\r\n            \"bandwidthLimits\": {\r\n              \"limitUp\": 1000000,\r\n              \"limitDown\": 1000000\r\n            }\r\n          },\r\n          \"dscpTagValue\": null,\r\n          \"pcpTagValue\": null\r\n        }\r\n      ],\r\n      \"l3FirewallRules\": [\r\n        {\r\n          \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n          \"policy\": \"allow\",\r\n          \"protocol\": \"tcp\",\r\n          \"destPort\": 443,\r\n          \"destCidr\": \"192.168.1.0/24\"\r\n        }\r\n      ],\r\n      \"l7FirewallRules\": [\r\n        [\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/67\",\r\n              \"name\": \"Xbox LIVE\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"port\",\r\n            \"value\": \"23\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24:5555\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"blacklistedCountries\",\r\n            \"value\": [\r\n              \"AX\",\r\n              \"CA\"\r\n            ]\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"whitelistedCountries\",\r\n            \"value\": [\r\n              \"US\"\r\n            ]\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    \"contentFiltering\": {\r\n      \"allowedUrlPatterns\": {\r\n        \"settings\": \"network default\",\r\n        \"patterns\": []\r\n      },\r\n      \"blockedUrlPatterns\": {\r\n        \"settings\": \"append\",\r\n        \"patterns\": [\r\n          \"http://www.example.com\",\r\n          \"http://www.betting.com\"\r\n        ]\r\n      },\r\n      \"blockedUrlCategories\": {\r\n        \"settings\": \"override\",\r\n        \"categories\": [\r\n          \"meraki:contentFiltering/category/1\",\r\n          \"meraki:contentFiltering/category/7\"\r\n        ]\r\n      }\r\n    },\r\n    \"splashAuthSettings\": \"bypass\",\r\n    \"vlanTagging\": {\r\n      \"settings\": \"custom\",\r\n      \"vlanId\": \"1\"\r\n    },\r\n    \"bonjourForwarding\": {\r\n      \"settings\": \"custom\",\r\n      \"rules\": [\r\n        {\r\n          \"description\": \"A simple bonjour rule\",\r\n          \"vlanId\": \"1\",\r\n          \"services\": [\r\n            \"All Services\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkGroupPolicy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"No video streaming\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"groupPolicies"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a group policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your group policy. Required.\nscheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.\n\nbandwidth| object|     The bandwidth settings for clients bound to your group policy.\n\nfirewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.\n\ncontentFiltering| object| The content filtering settings for your group policy\nsplashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.\nvlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.\nbonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"No video streaming\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"groupPolicies"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a group policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your group policy. Required.\nscheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.\n\nbandwidth| object|     The bandwidth settings for clients bound to your group policy.\n\nfirewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.\n\ncontentFiltering| object| The content filtering settings for your group policy\nsplashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.\nvlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.\nbonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkGroupPolicy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"groupPolicies",
								":groupPolicyId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "groupPolicyId",
									"value": "{{groupPolicyId}}"
								}
							]
						},
						"description": "Display a group policy"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"groupPolicies",
										":groupPolicyId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "groupPolicyId",
											"value": "{{groupPolicyId}}"
										}
									]
								},
								"description": "Display a group policy"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkGroupPolicy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"No video streaming\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"groupPolicies",
								":groupPolicyId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "groupPolicyId",
									"value": "{{groupPolicyId}}"
								}
							]
						},
						"description": "Update a group policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your group policy.\nscheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.\n\nbandwidth| object|     The bandwidth settings for clients bound to your group policy.\n\nfirewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.\n\ncontentFiltering| object| The content filtering settings for your group policy\nsplashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.\nvlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.\nbonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"No video streaming\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"groupPolicies",
										":groupPolicyId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "groupPolicyId",
											"value": "{{groupPolicyId}}"
										}
									]
								},
								"description": "Update a group policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your group policy.\nscheduling| object|     The schedule for the group policy. Schedules are applied to days of the week.\n\nbandwidth| object|     The bandwidth settings for clients bound to your group policy.\n\nfirewallAndTrafficShaping| object|     The firewall and traffic shaping rules and settings for your policy.\n\ncontentFiltering| object| The content filtering settings for your group policy\nsplashAuthSettings| string| Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.\nvlanTagging| object| The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.\nbonjourForwarding| object| The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"contentFiltering\": {\r\n    \"allowedUrlPatterns\": {\r\n      \"settings\": \"network default\",\r\n      \"patterns\": []\r\n    },\r\n    \"blockedUrlPatterns\": {\r\n      \"settings\": \"append\",\r\n      \"patterns\": [\r\n        \"http://www.example.com\",\r\n        \"http://www.betting.com\"\r\n      ]\r\n    },\r\n    \"blockedUrlCategories\": {\r\n      \"settings\": \"override\",\r\n      \"categories\": [\r\n        \"meraki:contentFiltering/category/1\",\r\n        \"meraki:contentFiltering/category/7\"\r\n      ]\r\n    }\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkGroupPolicy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"groupPolicies",
								":groupPolicyId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "groupPolicyId",
									"value": "{{groupPolicyId}}"
								}
							]
						},
						"description": "Delete a group policy"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"groupPolicies",
										":groupPolicyId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "groupPolicyId",
											"value": "{{groupPolicyId}}"
										}
									]
								},
								"description": "Delete a group policy"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "HTTP servers",
			"item": [
				{
					"name": "getNetworkHttpServers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the HTTP servers for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the HTTP servers for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"ABC123\",\r\n    \"networkId\": \"N_123\",\r\n    \"name\": \"My HTTP server\",\r\n    \"url\": \"https://www.example.com/webhooks\",\r\n    \"sharedSecret\": \"foobar\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkHttpServer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add an HTTP server to a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| A name for easy reference to the HTTP server\nurl| string| The URL of the HTTP server\nsharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add an HTTP server to a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| A name for easy reference to the HTTP server\nurl| string| The URL of the HTTP server\nsharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
						}
					]
				},
				{
					"name": "createNetworkHttpServersWebhookTest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"https://www.example.com/path\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers/webhookTests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers",
								"webhookTests"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Send a test webhook for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nurl| string| The URL where the test webhook will be sent\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"url\": \"https://www.example.com/path\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers/webhookTests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers",
										"webhookTests"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Send a test webhook for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nurl| string| The URL where the test webhook will be sent\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"enqueued\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkHttpServersWebhookTest",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers/webhookTests/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers",
								"webhookTests",
								":id"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return the status of a webhook test for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers/webhookTests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers",
										"webhookTests",
										":id"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Return the status of a webhook test for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"delivered\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkHttpServer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers",
								":id"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return an HTTP server for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers",
										":id"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Return an HTTP server for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkHttpServer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers",
								":id"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update an HTTP server\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| A name for easy reference to the HTTP server\nurl| string| The URL of the HTTP server\nsharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers",
										":id"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Update an HTTP server\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| A name for easy reference to the HTTP server\nurl| string| The URL of the HTTP server\nsharedSecret| string| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkHttpServer",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"httpServers",
								":id"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete an HTTP server from a network"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/httpServers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"httpServers",
										":id"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Delete an HTTP server from a network"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Intrusion settings",
			"item": [
				{
					"name": "getNetworkSecurityIntrusionSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/security/intrusionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"security",
								"intrusionSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns all supported intrusion settings for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/security/intrusionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"security",
										"intrusionSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns all supported intrusion settings for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSecurityIntrusionSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/security/intrusionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"security",
								"intrusionSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Set the supported intrusion settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)\nidsRulesets| string| Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved\nprotectedNetworks| object| Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/security/intrusionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"security",
										"intrusionSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Set the supported intrusion settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)\nidsRulesets| string| Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved\nprotectedNetworks| object| Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationSecurityIntrusionSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/security/intrusionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"security",
								"intrusionSettings"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Returns all supported intrusion settings for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/security/intrusionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"security",
										"intrusionSettings"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Returns all supported intrusion settings for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationSecurityIntrusionSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/security/intrusionSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"security",
								"intrusionSettings"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Sets supported intrusion settings for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwhitelistedRules| array| Sets a list of specific SNORT® signatures to whitelist\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/security/intrusionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"security",
										"intrusionSettings"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Sets supported intrusion settings for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwhitelistedRules| array| Sets a list of specific SNORT® signatures to whitelist\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Licenses",
			"item": [
				{
					"name": "getOrganizationLicenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&deviceSerial={{deviceSerial}}&networkId={{networkId}}&state={{state}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "deviceSerial",
									"value": "{{deviceSerial}}",
									"description": "Filter the licenses to those assigned to a particular device"
								},
								{
									"key": "networkId",
									"value": "{{networkId}}",
									"description": "Filter the licenses to those assigned in a particular network"
								},
								{
									"key": "state",
									"value": "{{state}}",
									"description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the licenses for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&deviceSerial={{deviceSerial}}&networkId={{networkId}}&state={{state}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "deviceSerial",
											"value": "{{deviceSerial}}",
											"description": "Filter the licenses to those assigned to a particular device"
										},
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "Filter the licenses to those assigned in a particular network"
										},
										{
											"key": "state",
											"value": "{{state}}",
											"description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'"
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the licenses for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"licenseType\": \"MX64-ENT\",\r\n    \"licenseKey\": \"Z21234567890\",\r\n    \"orderNumber\": \"4C1234567\",\r\n    \"deviceSerial\": \"Q234-ABCD-5678\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"state\": \"active\",\r\n    \"seatCount\": null,\r\n    \"totalDurationInDays\": 425,\r\n    \"durationInDays\": 365,\r\n    \"permanentlyQueuedLicenses\": [\r\n      {\r\n        \"id\": \"5678\",\r\n        \"licenseType\": \"MX64-ENT\",\r\n        \"licenseKey\": \"Z21234567890\",\r\n        \"orderNumber\": \"4C1234567\",\r\n        \"durationInDays\": 60\r\n      }\r\n    ],\r\n    \"claimDate\": \"2019-08-29T12:40:10Z\",\r\n    \"activationDate\": \"2019-09-01T15:01:46Z\",\r\n    \"expirationDate\": \"2020-10-30T15:01:46Z\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "assignOrganizationLicensesSeats",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"licenseId\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"seatCount\": 20\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/assignSeats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								"assignSeats"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Assign SM seats to a network. This will increase the managed SM device limit of the network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nlicenseId| string| The ID of the SM license to assign seats from\nnetworkId| string| The ID of the SM network to assign the seats to\nseatCount| integer| The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"licenseId\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"seatCount\": 20\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/assignSeats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										"assignSeats"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Assign SM seats to a network. This will increase the managed SM device limit of the network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nlicenseId| string| The ID of the SM license to assign seats from\nnetworkId| string| The ID of the SM network to assign the seats to\nseatCount| integer| The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"resultingLicenses\": [\r\n    {\r\n      \"id\": \"1234\",\r\n      \"licenseType\": \"SME\",\r\n      \"licenseKey\": \"Z21234567890\",\r\n      \"orderNumber\": \"4C1234567\",\r\n      \"deviceSerial\": null,\r\n      \"networkId\": \"N_24329156\",\r\n      \"state\": \"active\",\r\n      \"seatCount\": 25,\r\n      \"totalDurationInDays\": 365,\r\n      \"durationInDays\": 365,\r\n      \"permanentlyQueuedLicenses\": [],\r\n      \"claimDate\": \"2019-08-29T12:40:10Z\",\r\n      \"activationDate\": \"2019-09-01T15:01:46Z\",\r\n      \"expirationDate\": \"2020-08-31T15:01:46Z\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "moveOrganizationLicenses",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseIds\": [\r\n    \"123\",\r\n    \"456\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								"move"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestOrganizationId| string| The ID of the organization to move the licenses to\nlicenseIds| array| A list of IDs of licenses to move to the new organization\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseIds\": [\r\n    \"123\",\r\n    \"456\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										"move"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestOrganizationId| string| The ID of the organization to move the licenses to\nlicenseIds| array| A list of IDs of licenses to move to the new organization\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseIds\": [\r\n    \"123\",\r\n    \"456\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "moveOrganizationLicensesSeats",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseId\": \"1234\",\r\n  \"seatCount\": 20\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/moveSeats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								"moveSeats"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Move SM seats to another organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestOrganizationId| string| The ID of the organization to move the SM seats to\nlicenseId| string| The ID of the SM license to move the seats from\nseatCount| integer| The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseId\": \"1234\",\r\n  \"seatCount\": 20\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/moveSeats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										"moveSeats"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Move SM seats to another organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestOrganizationId| string| The ID of the organization to move the SM seats to\nlicenseId| string| The ID of the SM license to move the seats from\nseatCount| integer| The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destOrganizationId\": \"2930418\",\r\n  \"licenseId\": \"1234\",\r\n  \"seatCount\": 20\r\n}"
						}
					]
				},
				{
					"name": "renewOrganizationLicensesSeats",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"licenseIdToRenew\": \"123\",\r\n  \"unusedLicenseId\": \"1234\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/renewSeats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								"renewSeats"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nlicenseIdToRenew| string| The ID of the SM license to renew. This license must already be assigned to an SM network\nunusedLicenseId| string| The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"licenseIdToRenew\": \"123\",\r\n  \"unusedLicenseId\": \"1234\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/renewSeats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										"renewSeats"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nlicenseIdToRenew| string| The ID of the SM license to renew. This license must already be assigned to an SM network\nunusedLicenseId| string| The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"resultingLicenses\": [\r\n    {\r\n      \"id\": \"1234\",\r\n      \"licenseType\": \"SME\",\r\n      \"licenseKey\": \"Z21234567890\",\r\n      \"orderNumber\": \"4C1234567\",\r\n      \"deviceSerial\": null,\r\n      \"networkId\": \"N_24329156\",\r\n      \"state\": \"active\",\r\n      \"seatCount\": 25,\r\n      \"totalDurationInDays\": 365,\r\n      \"durationInDays\": 365,\r\n      \"permanentlyQueuedLicenses\": [],\r\n      \"claimDate\": \"2019-08-29T12:40:10Z\",\r\n      \"activationDate\": \"2019-09-01T15:01:46Z\",\r\n      \"expirationDate\": \"2020-08-31T15:01:46Z\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationLicense",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								":licenseId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "licenseId",
									"value": "{{licenseId}}"
								}
							]
						},
						"description": "Display a license"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										":licenseId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "licenseId",
											"value": "{{licenseId}}"
										}
									]
								},
								"description": "Display a license"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"licenseType\": \"MX64-ENT\",\r\n  \"licenseKey\": \"Z21234567890\",\r\n  \"orderNumber\": \"4C1234567\",\r\n  \"deviceSerial\": \"Q234-ABCD-5678\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"state\": \"active\",\r\n  \"seatCount\": null,\r\n  \"totalDurationInDays\": 425,\r\n  \"durationInDays\": 365,\r\n  \"permanentlyQueuedLicenses\": [\r\n    {\r\n      \"id\": \"5678\",\r\n      \"licenseType\": \"MX64-ENT\",\r\n      \"licenseKey\": \"Z21234567890\",\r\n      \"orderNumber\": \"4C1234567\",\r\n      \"durationInDays\": 60\r\n    }\r\n  ],\r\n  \"claimDate\": \"2019-08-29T12:40:10Z\",\r\n  \"activationDate\": \"2019-09-01T15:01:46Z\",\r\n  \"expirationDate\": \"2020-10-30T15:01:46Z\"\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationLicense",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenses",
								":licenseId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "licenseId",
									"value": "{{licenseId}}"
								}
							]
						},
						"description": "Update a license\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndeviceSerial| string| The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenses",
										":licenseId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "licenseId",
											"value": "{{licenseId}}"
										}
									]
								},
								"description": "Update a license\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndeviceSerial| string| The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"licenseType\": \"MX64-ENT\",\r\n  \"licenseKey\": \"Z21234567890\",\r\n  \"orderNumber\": \"4C1234567\",\r\n  \"deviceSerial\": \"Q234-ABCD-5678\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"state\": \"active\",\r\n  \"seatCount\": null,\r\n  \"totalDurationInDays\": 425,\r\n  \"durationInDays\": 365,\r\n  \"permanentlyQueuedLicenses\": [\r\n    {\r\n      \"id\": \"5678\",\r\n      \"licenseType\": \"MX64-ENT\",\r\n      \"licenseKey\": \"Z21234567890\",\r\n      \"orderNumber\": \"4C1234567\",\r\n      \"durationInDays\": 60\r\n    }\r\n  ],\r\n  \"claimDate\": \"2019-08-29T12:40:10Z\",\r\n  \"activationDate\": \"2019-09-01T15:01:46Z\",\r\n  \"expirationDate\": \"2020-10-30T15:01:46Z\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Link aggregations",
			"item": [
				{
					"name": "getNetworkSwitchLinkAggregations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"linkAggregations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List link aggregation groups"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"linkAggregations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List link aggregation groups"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"NDU2N18yXzM=\",\r\n    \"switchPorts\": [\r\n      {\r\n        \"serial\": \"Q234-ABCD-0001\",\r\n        \"portId\": \"1\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0002\",\r\n        \"portId\": \"2\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0003\",\r\n        \"portId\": \"3\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0004\",\r\n        \"portId\": \"4\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0005\",\r\n        \"portId\": \"5\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0006\",\r\n        \"portId\": \"6\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0007\",\r\n        \"portId\": \"7\"\r\n      },\r\n      {\r\n        \"serial\": \"Q234-ABCD-0008\",\r\n        \"portId\": \"8\"\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkSwitchLinkAggregation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"linkAggregations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a link aggregation group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nswitchPorts| array| Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.\nswitchProfilePorts| array| Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"linkAggregations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a link aggregation group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nswitchPorts| array| Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.\nswitchProfilePorts| array| Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"NDU2N18yXzM=\",\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchLinkAggregation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"NDU2N18yXzM=\",\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"linkAggregations",
								":linkAggregationId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "linkAggregationId",
									"value": "{{linkAggregationId}}"
								}
							]
						},
						"description": "Update a link aggregation group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nswitchPorts| array| Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.\nswitchProfilePorts| array| Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"NDU2N18yXzM=\",\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"linkAggregations",
										":linkAggregationId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "linkAggregationId",
											"value": "{{linkAggregationId}}"
										}
									]
								},
								"description": "Update a link aggregation group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nswitchPorts| array| Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.\nswitchProfilePorts| array| Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"NDU2N18yXzM=\",\r\n  \"switchPorts\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"portId\": \"1\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"portId\": \"2\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"portId\": \"3\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"portId\": \"4\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0005\",\r\n      \"portId\": \"5\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0006\",\r\n      \"portId\": \"6\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0007\",\r\n      \"portId\": \"7\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0008\",\r\n      \"portId\": \"8\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSwitchLinkAggregation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"linkAggregations",
								":linkAggregationId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "linkAggregationId",
									"value": "{{linkAggregationId}}"
								}
							]
						},
						"description": "Split a link aggregation group into separate ports"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"linkAggregations",
										":linkAggregationId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "linkAggregationId",
											"value": "{{linkAggregationId}}"
										}
									]
								},
								"description": "Split a link aggregation group into separate ports"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG DHCP settings",
			"item": [
				{
					"name": "getNetworkCellularGatewaySettingsDhcp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/dhcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"dhcp"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List common DHCP settings of MGs"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/dhcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"dhcp"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List common DHCP settings of MGs"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"dhcpLeaseTime\": \"1 hour\",\r\n  \"dnsNameservers\": \"custom\",\r\n  \"dnsCustomNameservers\": [\r\n    \"172.16.2.111\",\r\n    \"172.16.2.30\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkCellularGatewaySettingsDhcp",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"dhcpLeaseTime\": \"1 hour\",\r\n  \"dnsNameservers\": \"custom\",\r\n  \"dnsCustomNameservers\": [\r\n    \"172.16.2.111\",\r\n    \"172.16.2.30\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/dhcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"dhcp"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update common DHCP settings of MGs\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndhcpLeaseTime| string| DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.\ndnsNameservers| string| DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'.\ndnsCustomNameservers| array| list of fixed IP representing the the DNS Name servers when the mode is 'custom'\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"dhcpLeaseTime\": \"1 hour\",\r\n  \"dnsNameservers\": \"custom\",\r\n  \"dnsCustomNameservers\": [\r\n    \"172.16.2.111\",\r\n    \"172.16.2.30\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/dhcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"dhcp"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update common DHCP settings of MGs\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndhcpLeaseTime| string| DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.\ndnsNameservers| string| DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'.\ndnsCustomNameservers| array| list of fixed IP representing the the DNS Name servers when the mode is 'custom'\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"dhcpLeaseTime\": \"1 hour\",\r\n  \"dnsNameservers\": \"custom\",\r\n  \"dnsCustomNameservers\": [\r\n    \"172.16.2.111\",\r\n    \"172.16.2.30\"\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG LAN settings",
			"item": [
				{
					"name": "getDeviceCellularGatewaySettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"cellularGateway",
								"settings"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Show the LAN Settings of a MG"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"cellularGateway",
										"settings"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Show the LAN Settings of a MG"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"deviceName\": \"name of the MG\",\r\n  \"deviceLanIp\": \"192.168.0.33\",\r\n  \"deviceSubnet\": \"192.168.0.32/27\",\r\n  \"fixedIpAssignments\": [\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ac\",\r\n      \"name\": \"server 1\",\r\n      \"ip\": \"192.168.0.10\"\r\n    },\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ab\",\r\n      \"name\": \"server 2\",\r\n      \"ip\": \"192.168.0.20\"\r\n    }\r\n  ],\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateDeviceCellularGatewaySettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"deviceName\": \"name of the MG\",\r\n  \"deviceLanIp\": \"192.168.0.33\",\r\n  \"deviceSubnet\": \"192.168.0.32/27\",\r\n  \"fixedIpAssignments\": [\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ac\",\r\n      \"name\": \"server 1\",\r\n      \"ip\": \"192.168.0.10\"\r\n    },\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ab\",\r\n      \"name\": \"server 2\",\r\n      \"ip\": \"192.168.0.20\"\r\n    }\r\n  ],\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"cellularGateway",
								"settings"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Update the LAN Settings for a single MG.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nreservedIpRanges| array| list of all reserved IP ranges for a single MG\nfixedIpAssignments| array| list of all fixed IP assignments for a single MG\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"deviceName\": \"name of the MG\",\r\n  \"deviceLanIp\": \"192.168.0.33\",\r\n  \"deviceSubnet\": \"192.168.0.32/27\",\r\n  \"fixedIpAssignments\": [\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ac\",\r\n      \"name\": \"server 1\",\r\n      \"ip\": \"192.168.0.10\"\r\n    },\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ab\",\r\n      \"name\": \"server 2\",\r\n      \"ip\": \"192.168.0.20\"\r\n    }\r\n  ],\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"cellularGateway",
										"settings"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Update the LAN Settings for a single MG.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nreservedIpRanges| array| list of all reserved IP ranges for a single MG\nfixedIpAssignments| array| list of all fixed IP assignments for a single MG\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"deviceName\": \"name of the MG\",\r\n  \"deviceLanIp\": \"192.168.0.33\",\r\n  \"deviceSubnet\": \"192.168.0.32/27\",\r\n  \"fixedIpAssignments\": [\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ac\",\r\n      \"name\": \"server 1\",\r\n      \"ip\": \"192.168.0.10\"\r\n    },\r\n    {\r\n      \"mac\": \"0b:00:00:00:00:ab\",\r\n      \"name\": \"server 2\",\r\n      \"ip\": \"192.168.0.20\"\r\n    }\r\n  ],\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG connectivity monitoring destinations",
			"item": [
				{
					"name": "getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/connectivityMonitoringDestinations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"connectivityMonitoringDestinations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the connectivity testing destinations for an MG network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/connectivityMonitoringDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"connectivityMonitoringDestinations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the connectivity testing destinations for an MG network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\",\r\n      \"description\": null,\r\n      \"default\": false\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/connectivityMonitoringDestinations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"connectivityMonitoringDestinations"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the connectivity testing destinations for an MG network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestinations| array| The list of connectivity monitoring destinations\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/connectivityMonitoringDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"connectivityMonitoringDestinations"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the connectivity testing destinations for an MG network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndestinations| array| The list of connectivity monitoring destinations\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"destinations\": [\r\n    {\r\n      \"ip\": \"8.8.8.8\",\r\n      \"description\": \"Google\",\r\n      \"default\": false\r\n    },\r\n    {\r\n      \"ip\": \"1.23.45.67\",\r\n      \"description\": \"test description\",\r\n      \"default\": true\r\n    },\r\n    {\r\n      \"ip\": \"9.8.7.6\",\r\n      \"description\": null,\r\n      \"default\": false\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG port forwarding rules",
			"item": [
				{
					"name": "getDeviceCellularGatewaySettingsPortForwardingRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings/portForwardingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"cellularGateway",
								"settings",
								"portForwardingRules"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns the port forwarding rules for a single MG."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings/portForwardingRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"cellularGateway",
										"settings",
										"portForwardingRules"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns the port forwarding rules for a single MG."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test\",\r\n      \"access\": \"any\",\r\n      \"publicPort\": \"11-12\",\r\n      \"localPort\": \"4\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    },\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test 2\",\r\n      \"access\": \"restricted\",\r\n      \"allowedIps\": [\r\n        \"10.10.10.10\",\r\n        \"10.10.10.11\"\r\n      ],\r\n      \"publicPort\": \"99\",\r\n      \"localPort\": \"5\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateDeviceCellularGatewaySettingsPortForwardingRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test\",\r\n      \"access\": \"any\",\r\n      \"publicPort\": \"11-12\",\r\n      \"localPort\": \"4\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    },\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test 2\",\r\n      \"access\": \"restricted\",\r\n      \"allowedIps\": [\r\n        \"10.10.10.10\",\r\n        \"10.10.10.11\"\r\n      ],\r\n      \"publicPort\": \"99\",\r\n      \"localPort\": \"5\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings/portForwardingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"cellularGateway",
								"settings",
								"portForwardingRules"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Updates the port forwarding rules for a single MG.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of port forwarding params\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test\",\r\n      \"access\": \"any\",\r\n      \"publicPort\": \"11-12\",\r\n      \"localPort\": \"4\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    },\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test 2\",\r\n      \"access\": \"restricted\",\r\n      \"allowedIps\": [\r\n        \"10.10.10.10\",\r\n        \"10.10.10.11\"\r\n      ],\r\n      \"publicPort\": \"99\",\r\n      \"localPort\": \"5\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/cellularGateway/settings/portForwardingRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"cellularGateway",
										"settings",
										"portForwardingRules"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Updates the port forwarding rules for a single MG.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of port forwarding params\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test\",\r\n      \"access\": \"any\",\r\n      \"publicPort\": \"11-12\",\r\n      \"localPort\": \"4\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    },\r\n    {\r\n      \"lanIp\": \"172.31.128.5\",\r\n      \"name\": \"test 2\",\r\n      \"access\": \"restricted\",\r\n      \"allowedIps\": [\r\n        \"10.10.10.10\",\r\n        \"10.10.10.11\"\r\n      ],\r\n      \"publicPort\": \"99\",\r\n      \"localPort\": \"5\",\r\n      \"uplink\": \"both\",\r\n      \"protocol\": \"tcp\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG subnet pool settings",
			"item": [
				{
					"name": "getNetworkCellularGatewaySettingsSubnetPool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/subnetPool",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"subnetPool"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the subnet pool and mask configured for MGs in the network."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/subnetPool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"subnetPool"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the subnet pool and mask configured for MGs in the network."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"cidr\": \"192.168.0.0/16\",\r\n  \"mask\": \"24\",\r\n  \"subnets\": [\r\n    {\r\n      \"serial\": \"AAAA-AAAA-AAAA\",\r\n      \"name\": \"my first MG\",\r\n      \"applianceIp\": \"192.168.0.1\",\r\n      \"subnet\": \"192.168.0.0/24\"\r\n    },\r\n    {\r\n      \"serial\": \"BBBB-BBBB-BBBB\",\r\n      \"name\": \"my second MG\",\r\n      \"applianceIp\": \"192.168.0.33\",\r\n      \"subnet\": \"192.168.0.32/24\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkCellularGatewaySettingsSubnetPool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cidr\": \"192.168.0.0/16\",\r\n  \"mask\": \"24\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/subnetPool",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"subnetPool"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the subnet pool and mask configuration for MGs in the network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmask| integer| Mask used for the subnet of all MGs in  this network.\ncidr| string| CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cidr\": \"192.168.0.0/16\",\r\n  \"mask\": \"24\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/subnetPool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"subnetPool"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the subnet pool and mask configuration for MGs in the network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmask| integer| Mask used for the subnet of all MGs in  this network.\ncidr| string| CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"cidr\": \"192.168.0.0/16\",\r\n  \"mask\": \"24\",\r\n  \"subnets\": [\r\n    {\r\n      \"serial\": \"AAAA-AAAA-AAAA\",\r\n      \"name\": \"my first MG\",\r\n      \"applianceIp\": \"192.168.0.1\",\r\n      \"subnet\": \"192.168.0.0/24\"\r\n    },\r\n    {\r\n      \"serial\": \"BBBB-BBBB-BBBB\",\r\n      \"name\": \"my second MG\",\r\n      \"applianceIp\": \"192.168.0.33\",\r\n      \"subnet\": \"192.168.0.32/24\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MG uplink settings",
			"item": [
				{
					"name": "getNetworkCellularGatewaySettingsUplink",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/uplink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"uplink"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the uplink settings for your MG network."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/uplink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"uplink"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the uplink settings for your MG network."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"bandwidthLimits\": {\r\n    \"limitUp\": 51200,\r\n    \"limitDown\": 51200\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkCellularGatewaySettingsUplink",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/uplink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularGateway",
								"settings",
								"uplink"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Updates the uplink settings for your MG network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbandwidthLimits| object| The bandwidth settings for the 'cellular' uplink\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/settings/uplink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularGateway",
										"settings",
										"uplink"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Updates the uplink settings for your MG network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbandwidthLimits| object| The bandwidth settings for the 'cellular' uplink\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"bandwidthLimits\": {\r\n    \"limitUp\": 51200,\r\n    \"limitDown\": 51200\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MR L3 firewall",
			"item": [
				{
					"name": "getNetworkSsidL3FirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/l3FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"l3FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Return the L3 firewall rules for an SSID on an MR network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/l3FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"l3FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Return the L3 firewall rules for an SSID on an MR network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateNetworkSsidL3FirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/l3FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"l3FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Update the L3 firewall rules of an SSID on an MR network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)\nallowLanAccess| boolean| Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/l3FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"l3FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Update the L3 firewall rules of an SSID on an MR network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)\nallowLanAccess| boolean| Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MV Sense",
			"item": [
				{
					"name": "getDeviceCameraAnalyticsLive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/analytics/live",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"analytics",
								"live"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns live state from camera of analytics zones"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/analytics/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"analytics",
										"live"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns live state from camera of analytics zones"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ts\": \"2018-08-15T18:32:38.123Z\",\r\n  \"zones\": {\r\n    \"0\": {\r\n      \"person\": 0\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getDeviceCameraAnalyticsOverview",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/analytics/overview?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&objectType={{objectType}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"analytics",
								"overview"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
								},
								{
									"key": "objectType",
									"value": "{{objectType}}",
									"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
								}
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns an overview of aggregate analytics data for a timespan"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/analytics/overview?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&objectType={{objectType}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"analytics",
										"overview"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
										},
										{
											"key": "objectType",
											"value": "{{objectType}}",
											"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
										}
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns an overview of aggregate analytics data for a timespan"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 254,\r\n    \"averageCount\": 5\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getDeviceCameraAnalyticsRecent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/analytics/recent?objectType={{objectType}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"analytics",
								"recent"
							],
							"query": [
								{
									"key": "objectType",
									"value": "{{objectType}}",
									"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
								}
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns most recent record for analytics zones"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/analytics/recent?objectType={{objectType}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"analytics",
										"recent"
									],
									"query": [
										{
											"key": "objectType",
											"value": "{{objectType}}",
											"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
										}
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns most recent record for analytics zones"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 10,\r\n    \"averageCount\": 2.54\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getDeviceCameraAnalyticsZones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"analytics",
								"zones"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Returns all configured analytic zones for this camera"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"analytics",
										"zones"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Returns all configured analytic zones for this camera"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"0\",\r\n    \"type\": \"occupancy\",\r\n    \"label\": \"Full Frame\",\r\n    \"regionOfInterest\": {\r\n      \"x0\": \"0.00\",\r\n      \"y0\": \"0.00\",\r\n      \"x1\": \"1.00\",\r\n      \"y1\": \"1.00\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getDeviceCameraAnalyticsZoneHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones/:zoneId/history?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}&objectType={{objectType}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"camera",
								"analytics",
								"zones",
								":zoneId",
								"history"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
								},
								{
									"key": "resolution",
									"value": "{{resolution}}",
									"description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
								},
								{
									"key": "objectType",
									"value": "{{objectType}}",
									"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
								}
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								},
								{
									"key": "zoneId",
									"value": "{{zoneId}}"
								}
							]
						},
						"description": "Return historical records for analytic zones"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones/:zoneId/history?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&resolution={{resolution}}&objectType={{objectType}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"camera",
										"analytics",
										"zones",
										":zoneId",
										"history"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
										},
										{
											"key": "resolution",
											"value": "{{resolution}}",
											"description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
										},
										{
											"key": "objectType",
											"value": "{{objectType}}",
											"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
										}
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "zoneId",
											"value": "{{zoneId}}"
										}
									]
								},
								"description": "Return historical records for analytic zones"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"entrances\": 5,\r\n    \"averageCount\": 1.5\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX 1:1 NAT rules",
			"item": [
				{
					"name": "getNetworkOneToOneNatRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/oneToOneNatRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"oneToOneNatRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the 1:1 NAT mapping rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/oneToOneNatRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"oneToOneNatRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the 1:1 NAT mapping rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkOneToOneNatRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/oneToOneNatRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"oneToOneNatRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Set the 1:1 NAT mapping rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of 1:1 nat rules\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/oneToOneNatRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"oneToOneNatRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Set the 1:1 NAT mapping rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of 1:1 nat rules\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX 1:Many NAT rules",
			"item": [
				{
					"name": "getNetworkOneToManyNatRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/oneToManyNatRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"oneToManyNatRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the 1:Many NAT mapping rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/oneToManyNatRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"oneToManyNatRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the 1:Many NAT mapping rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkOneToManyNatRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/oneToManyNatRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"oneToManyNatRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Set the 1:Many NAT mapping rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of 1:Many nat rules\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/oneToManyNatRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"oneToManyNatRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Set the 1:Many NAT mapping rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of 1:Many nat rules\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX L3 firewall",
			"item": [
				{
					"name": "getNetworkL3FirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/l3FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"l3FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the L3 firewall rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/l3FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"l3FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the L3 firewall rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateNetworkL3FirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/l3FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"l3FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the L3 firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/l3FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"l3FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the L3 firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX L7 application categories",
			"item": [
				{
					"name": "getNetworkL7FirewallRulesApplicationCategories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules/applicationCategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"l7FirewallRules",
								"applicationCategories"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the L7 firewall application categories and their associated applications for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules/applicationCategories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"l7FirewallRules",
										"applicationCategories"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the L7 firewall application categories and their associated applications for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX L7 firewall",
			"item": [
				{
					"name": "getNetworkL7FirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"l7FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the MX L7 firewall rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"l7FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the MX L7 firewall rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkL7FirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"l7FirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the MX L7 firewall rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the MX L7 firewall rules\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/l7FirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"l7FirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the MX L7 firewall rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the MX L7 firewall rules\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX VLAN ports",
			"item": [
				{
					"name": "getNetworkAppliancePorts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/appliancePorts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"appliancePorts"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List per-port VLAN settings for all ports of a MX."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/appliancePorts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"appliancePorts"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List per-port VLAN settings for all ports of a MX."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"number\": 1,\r\n    \"enabled\": true,\r\n    \"type\": \"access\",\r\n    \"dropUntaggedTraffic\": false,\r\n    \"vlan\": 3,\r\n    \"accessPolicy\": \"open\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkAppliancePort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/appliancePorts/:appliancePortId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"appliancePorts",
								":appliancePortId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "appliancePortId",
									"value": "{{appliancePortId}}"
								}
							]
						},
						"description": "Return per-port VLAN settings for a single MX port."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/appliancePorts/:appliancePortId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"appliancePorts",
										":appliancePortId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "appliancePortId",
											"value": "{{appliancePortId}}"
										}
									]
								},
								"description": "Return per-port VLAN settings for a single MX port."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 1,\r\n  \"enabled\": true,\r\n  \"type\": \"access\",\r\n  \"dropUntaggedTraffic\": false,\r\n  \"vlan\": 3,\r\n  \"accessPolicy\": \"open\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkAppliancePort",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"enabled\": true,\r\n  \"type\": \"access\",\r\n  \"dropUntaggedTraffic\": false,\r\n  \"vlan\": 3,\r\n  \"accessPolicy\": \"open\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/appliancePorts/:appliancePortId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"appliancePorts",
								":appliancePortId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "appliancePortId",
									"value": "{{appliancePortId}}"
								}
							]
						},
						"description": "Update the per-port VLAN settings for a single MX port.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| The status of the port\ndropUntaggedTraffic| boolean| Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.\ntype| string| The type of the port: 'access' or 'trunk'.\nvlan| integer| Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.\nallowedVlans| string| Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.\naccessPolicy| string| The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"enabled\": true,\r\n  \"type\": \"access\",\r\n  \"dropUntaggedTraffic\": false,\r\n  \"vlan\": 3,\r\n  \"accessPolicy\": \"open\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/appliancePorts/:appliancePortId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"appliancePorts",
										":appliancePortId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "appliancePortId",
											"value": "{{appliancePortId}}"
										}
									]
								},
								"description": "Update the per-port VLAN settings for a single MX port.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| The status of the port\ndropUntaggedTraffic| boolean| Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.\ntype| string| The type of the port: 'access' or 'trunk'.\nvlan| integer| Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.\nallowedVlans| string| Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.\naccessPolicy| string| The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 1,\r\n  \"enabled\": true,\r\n  \"type\": \"access\",\r\n  \"dropUntaggedTraffic\": false,\r\n  \"vlan\": 3,\r\n  \"accessPolicy\": \"open\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX VPN firewall",
			"item": [
				{
					"name": "getOrganizationVpnFirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/vpnFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"vpnFirewallRules"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the firewall rules for an organization's site-to-site VPN"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/vpnFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"vpnFirewallRules"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the firewall rules for an organization's site-to-site VPN"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateOrganizationVpnFirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/vpnFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"vpnFirewallRules"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Update the firewall rules of an organization's site-to-site VPN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/vpnFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"vpnFirewallRules"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Update the firewall rules of an organization's site-to-site VPN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX cellular firewall",
			"item": [
				{
					"name": "getNetworkCellularFirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularFirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the cellular firewall rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularFirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the cellular firewall rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateNetworkCellularFirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/cellularFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"cellularFirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the cellular firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/cellularFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"cellularFirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the cellular firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX inbound firewall",
			"item": [
				{
					"name": "getNetworkApplianceFirewallInboundFirewallRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"appliance",
								"firewall",
								"inboundFirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the inbound firewall rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"appliance",
										"firewall",
										"inboundFirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the inbound firewall rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ],\r\n  \"syslogDefaultRule\": true\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkApplianceFirewallInboundFirewallRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"appliance",
								"firewall",
								"inboundFirewallRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the inbound firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"appliance",
										"firewall",
										"inboundFirewallRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the inbound firewall rules of an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the firewall rules (not including the default rule)\nsyslogDefaultRule| boolean| Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n      \"policy\": \"allow\",\r\n      \"protocol\": \"tcp\",\r\n      \"destPort\": 443,\r\n      \"destCidr\": \"192.168.1.0/24\",\r\n      \"srcPort\": \"Any\",\r\n      \"srcCidr\": \"Any\",\r\n      \"syslogEnabled\": false\r\n    }\r\n  ],\r\n  \"syslogDefaultRule\": true\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX port forwarding rules",
			"item": [
				{
					"name": "getNetworkPortForwardingRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/portForwardingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"portForwardingRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the port forwarding rules for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/portForwardingRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"portForwardingRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the port forwarding rules for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkPortForwardingRules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/portForwardingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"portForwardingRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the port forwarding rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of port forwarding params\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/portForwardingRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"portForwardingRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the port forwarding rules for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An array of port forwarding params\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX static routes",
			"item": [
				{
					"name": "getNetworkStaticRoutes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/staticRoutes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"staticRoutes"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the static routes for an MX or teleworker network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/staticRoutes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"staticRoutes"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the static routes for an MX or teleworker network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My route\",\r\n    \"gatewayIp\": \"1.2.3.5\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": \"{}\",\r\n    \"reservedIpRanges\": \"[]\",\r\n    \"enabled\": true\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkStaticRoute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"gatewayIp\": \"1.2.3.5\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/staticRoutes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"staticRoutes"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add a static route for an MX or teleworker network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new static route\nsubnet| string| The subnet of the static route\ngatewayIp| string| The gateway IP (next hop) of the static route\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"gatewayIp\": \"1.2.3.5\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/staticRoutes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"staticRoutes"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add a static route for an MX or teleworker network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new static route\nsubnet| string| The subnet of the static route\ngatewayIp| string| The gateway IP (next hop) of the static route\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"gatewayIp\": \"1.2.3.5\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkStaticRoute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"staticRoutes",
								":srId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "srId",
									"value": "{{srId}}"
								}
							]
						},
						"description": "Return a static route for an MX or teleworker network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"staticRoutes",
										":srId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "srId",
											"value": "{{srId}}"
										}
									]
								},
								"description": "Return a static route for an MX or teleworker network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkStaticRoute",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"staticRoutes",
								":srId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "srId",
									"value": "{{srId}}"
								}
							]
						},
						"description": "Update a static route for an MX or teleworker network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the static route\nsubnet| string| The subnet of the static route\ngatewayIp| string| The gateway IP (next hop) of the static route\nenabled| string| The enabled state of the static route\nfixedIpAssignments| string| The DHCP fixed IP assignments on the static route\nreservedIpRanges| string| The DHCP reserved IP ranges on the static route\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"staticRoutes",
										":srId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "srId",
											"value": "{{srId}}"
										}
									]
								},
								"description": "Update a static route for an MX or teleworker network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the static route\nsubnet| string| The subnet of the static route\ngatewayIp| string| The gateway IP (next hop) of the static route\nenabled| string| The enabled state of the static route\nfixedIpAssignments| string| The DHCP fixed IP assignments on the static route\nreservedIpRanges| string| The DHCP reserved IP ranges on the static route\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkStaticRoute",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"staticRoutes",
								":srId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "srId",
									"value": "{{srId}}"
								}
							]
						},
						"description": "Delete a static route from an MX or teleworker network"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/staticRoutes/:srId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"staticRoutes",
										":srId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "srId",
											"value": "{{srId}}"
										}
									]
								},
								"description": "Delete a static route from an MX or teleworker network"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MX warm spare settings",
			"item": [
				{
					"name": "swapNetworkWarmspare",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/swapWarmSpare",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"swapWarmSpare"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Swap MX primary and warm spare appliances"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/swapWarmSpare",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"swapWarmSpare"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Swap MX primary and warm spare appliances"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "getNetworkWarmSpareSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/warmSpareSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"warmSpareSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return MX warm spare settings"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/warmSpareSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"warmSpareSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return MX warm spare settings"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"enabled\": true,\r\n  \"primarySerial\": \"Q234-ABCD-5678\",\r\n  \"spareSerial\": \"Q234-ABCD-5678\",\r\n  \"uplinkMode\": \"virtual\",\r\n  \"wan1\": {\r\n    \"ip\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.1.0/24\"\r\n  },\r\n  \"wan2\": {\r\n    \"ip\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.128.0/24\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkWarmSpareSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"enabled\": true,\r\n  \"spareSerial\": \"Q234-ABCD-5678\",\r\n  \"uplinkMode\": \"virtual\",\r\n  \"virtualIp1\": \"1.2.3.4\",\r\n  \"virtualIp2\": \"1.2.3.4\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/warmSpareSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"warmSpareSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update MX warm spare settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| Enable warm spare\nspareSerial| string| Serial number of the warm spare appliance\nuplinkMode| string| Uplink mode, either virtual or public\nvirtualIp1| string| The WAN 1 shared IP\nvirtualIp2| string| The WAN 2 shared IP\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"enabled\": true,\r\n  \"spareSerial\": \"Q234-ABCD-5678\",\r\n  \"uplinkMode\": \"virtual\",\r\n  \"virtualIp1\": \"1.2.3.4\",\r\n  \"virtualIp2\": \"1.2.3.4\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/warmSpareSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"warmSpareSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update MX warm spare settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| Enable warm spare\nspareSerial| string| Serial number of the warm spare appliance\nuplinkMode| string| Uplink mode, either virtual or public\nvirtualIp1| string| The WAN 1 shared IP\nvirtualIp2| string| The WAN 2 shared IP\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"enabled\": true,\r\n  \"primarySerial\": \"Q234-ABCD-5678\",\r\n  \"spareSerial\": \"Q234-ABCD-5678\",\r\n  \"uplinkMode\": \"virtual\",\r\n  \"wan1\": {\r\n    \"ip\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.1.0/24\"\r\n  },\r\n  \"wan2\": {\r\n    \"ip\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.128.0/24\"\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Malware settings",
			"item": [
				{
					"name": "getNetworkSecurityMalwareSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/security/malwareSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"security",
								"malwareSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns all supported malware settings for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/security/malwareSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"security",
										"malwareSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns all supported malware settings for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSecurityMalwareSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/security/malwareSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"security",
								"malwareSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Set the supported malware settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'\nallowedUrls| array| The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting\nallowedFiles| array| The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/security/malwareSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"security",
										"malwareSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Set the supported malware settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'\nallowedUrls| array| The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting\nallowedFiles| array| The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Management interface settings",
			"item": [
				{
					"name": "getNetworkDeviceManagementInterfaceSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/managementInterfaceSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"managementInterfaceSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the management interface settings for a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/managementInterfaceSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"managementInterfaceSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the management interface settings for a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ddnsHostnames\": {\r\n    \"activeDdnsHostname\": \"mx1-sample.dynamic-m.com\",\r\n    \"ddnsHostnameWan1\": \"mx1-sample-1.dynamic-m.com\",\r\n    \"ddnsHostnameWan2\": \"mx1-sample-2.dynamic-m.com\"\r\n  },\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkDeviceManagementInterfaceSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/managementInterfaceSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"managementInterfaceSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Update the management interface settings for a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwan1| object| WAN 1 settings\nwan2| object| WAN 2 settings (only for MX devices)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/managementInterfaceSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"managementInterfaceSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Update the management interface settings for a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwan1| object| WAN 1 settings\nwan2| object| WAN 2 settings (only for MX devices)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Meraki auth users",
			"item": [
				{
					"name": "getNetworkMerakiAuthUsers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"merakiAuthUsers"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the splash or RADIUS users configured under Meraki Authentication for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"merakiAuthUsers"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the splash or RADIUS users configured under Meraki Authentication for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"aGlAaGkuY29t\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"createdAt\": 1518365681,\r\n    \"accountType\": \"Guest\",\r\n    \"authorizations\": [\r\n      {\r\n        \"authorizedZone\": \"Store WiFi\",\r\n        \"expiresAt\": 1526087474,\r\n        \"authorizedByName\": \"Miles Meraki\",\r\n        \"authorizedByEmail\": \"miles@meraki.com\"\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkMerakiAuthUser",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"merakiAuthUsers",
								":merakiAuthUserId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "merakiAuthUserId",
									"value": "{{merakiAuthUserId}}"
								}
							]
						},
						"description": "Return the Meraki Auth splash or RADIUS user"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"merakiAuthUsers",
										":merakiAuthUserId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "merakiAuthUserId",
											"value": "{{merakiAuthUserId}}"
										}
									]
								},
								"description": "Return the Meraki Auth splash or RADIUS user"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"aGlAaGkuY29t\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"createdAt\": 1518365681,\r\n  \"accountType\": \"Guest\",\r\n  \"authorizations\": [\r\n    {\r\n      \"authorizedZone\": \"Store WiFi\",\r\n      \"expiresAt\": 1526087474,\r\n      \"authorizedByName\": \"Miles Meraki\",\r\n      \"authorizedByEmail\": \"miles@meraki.com\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Named tag scope",
			"item": [
				{
					"name": "getNetworkSmTargetGroups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups?withDetails={{withDetails}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"targetGroups"
							],
							"query": [
								{
									"key": "withDetails",
									"value": "{{withDetails}}",
									"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the target groups in this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups?withDetails={{withDetails}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"targetGroups"
									],
									"query": [
										{
											"key": "withDetails",
											"value": "{{withDetails}}",
											"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the target groups in this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My target group\",\r\n    \"scope\": \"none\",\r\n    \"tags\": \"[]\",\r\n    \"type\": \"devices\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkSmTargetGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"targetGroups"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add a target group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of this target group\nscope| string| The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"targetGroups"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add a target group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of this target group\nscope| string| The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmTargetGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId?withDetails={{withDetails}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"targetGroups",
								":targetGroupId"
							],
							"query": [
								{
									"key": "withDetails",
									"value": "{{withDetails}}",
									"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "targetGroupId",
									"value": "{{targetGroupId}}"
								}
							]
						},
						"description": "Return a target group"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId?withDetails={{withDetails}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"targetGroups",
										":targetGroupId"
									],
									"query": [
										{
											"key": "withDetails",
											"value": "{{withDetails}}",
											"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "targetGroupId",
											"value": "{{targetGroupId}}"
										}
									]
								},
								"description": "Return a target group"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmTargetGroup",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"targetGroups",
								":targetGroupId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "targetGroupId",
									"value": "{{targetGroupId}}"
								}
							]
						},
						"description": "Update a target group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of this target group\nscope| string| The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"targetGroups",
										":targetGroupId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "targetGroupId",
											"value": "{{targetGroupId}}"
										}
									]
								},
								"description": "Update a target group\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of this target group\nscope| string| The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSmTargetGroup",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"targetGroups",
								":targetGroupId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "targetGroupId",
									"value": "{{targetGroupId}}"
								}
							]
						},
						"description": "Delete a target group from a network"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"targetGroups",
										":targetGroupId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "targetGroupId",
											"value": "{{targetGroupId}}"
										}
									]
								},
								"description": "Delete a target group from a network"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "NetFlow settings",
			"item": [
				{
					"name": "getNetworkNetflowSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/netflowSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"netflowSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the NetFlow traffic reporting settings for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/netflowSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"netflowSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the NetFlow traffic reporting settings for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkNetflowSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/netflowSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"netflowSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the NetFlow traffic reporting settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nreportingEnabled| boolean| Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).\ncollectorIp| string| The IPv4 address of the NetFlow collector.\ncollectorPort| integer| The port that the NetFlow collector will be listening on.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/netflowSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"netflowSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the NetFlow traffic reporting settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nreportingEnabled| boolean| Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).\ncollectorIp| string| The IPv4 address of the NetFlow collector.\ncollectorPort| integer| The port that the NetFlow collector will be listening on.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Networks",
			"item": [
				{
					"name": "getNetwork",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": \"2930418\",\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"productTypes\": [\r\n    \"appliance\",\r\n    \"switch\",\r\n    \"wireless\"\r\n  ],\r\n  \"disableMyMerakiCom\": false,\r\n  \"enrollmentString\": \"long-island-office\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetwork",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"disableMyMerakiCom\": false\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the network\ntimeZone| string| The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>\ntags| string| A space-separated list of tags to be applied to the network\ndisableMyMerakiCom| boolean| Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)\ndisableRemoteStatusPage| boolean| Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false\nenrollmentString| string| A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"disableMyMerakiCom\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the network\ntimeZone| string| The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>\ntags| string| A space-separated list of tags to be applied to the network\ndisableMyMerakiCom| boolean| Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)\ndisableRemoteStatusPage| boolean| Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false\nenrollmentString| string| A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": \"2930418\",\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"productTypes\": [\r\n    \"appliance\",\r\n    \"switch\",\r\n    \"wireless\"\r\n  ],\r\n  \"disableMyMerakiCom\": false,\r\n  \"enrollmentString\": \"long-island-office\"\r\n}"
						}
					]
				},
				{
					"name": "deleteNetwork",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Delete a network"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Delete a network"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkAccessPolicies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/accessPolicies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"accessPolicies"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the access policies for this network. Only valid for MS networks."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/accessPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"accessPolicies"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the access policies for this network. Only valid for MS networks."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My access policy\",\r\n    \"accessType\": \"8021.x\",\r\n    \"guestVlan\": 3700,\r\n    \"radiusServers\": [\r\n      {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"port\": 1337\r\n      },\r\n      {\r\n        \"ip\": \"2.3.4.5\",\r\n        \"port\": 1337\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkAirMarshal",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/airMarshal?t0={{t0}}&timespan={{timespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"airMarshal"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List Air Marshal scan results from a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/airMarshal?t0={{t0}}&timespan={{timespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"airMarshal"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List Air Marshal scan results from a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ssid\": \"linksys\",\r\n    \"bssids\": [\r\n      {\r\n        \"bssid\": \"00:11:22:33:44:55\",\r\n        \"contained\": false,\r\n        \"detectedBy\": [\r\n          {\r\n            \"device\": \"Q234-ABCD-5678\",\r\n            \"rssi\": 17\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"channels\": [\r\n      36,\r\n      40\r\n    ],\r\n    \"firstSeen\": 1518365681,\r\n    \"lastSeen\": 1526087474,\r\n    \"wiredMacs\": [\r\n      \"00:11:22:33:44:55\"\r\n    ],\r\n    \"wiredVlans\": [\r\n      0,\r\n      108\r\n    ],\r\n    \"wiredLastSeen\": 1526087474\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "bindNetwork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"configTemplateId\": \"N_23952905\",\r\n  \"autoBind\": false\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/bind",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"bind"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Bind a network to a template.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfigTemplateId| string| The ID of the template to which the network should be bound.\nautoBind| boolean| Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"configTemplateId\": \"N_23952905\",\r\n  \"autoBind\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bind"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Bind a network to a template.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nconfigTemplateId| string| The ID of the template to which the network should be bound.\nautoBind| boolean| Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkBluetoothSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/bluetoothSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"bluetoothSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bluetoothSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bluetoothSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkBluetoothSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/bluetoothSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"bluetoothSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscanningEnabled| boolean| Whether APs will scan for Bluetooth enabled clients. (true, false)\nadvertisingEnabled| boolean| Whether APs will advertise beacons. (true, false)\nuuid| string| The UUID to be used in the beacon identifier.\nmajorMinorAssignmentMode| string| The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')\nmajor| integer| The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.\nminor| integer| The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bluetoothSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bluetoothSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscanningEnabled| boolean| Whether APs will scan for Bluetooth enabled clients. (true, false)\nadvertisingEnabled| boolean| Whether APs will advertise beacons. (true, false)\nuuid| string| The UUID to be used in the beacon identifier.\nmajorMinorAssignmentMode| string| The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')\nmajor| integer| The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.\nminor| integer| The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSiteToSiteVpn",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/siteToSiteVpn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"siteToSiteVpn"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the site-to-site VPN settings of a network. Only valid for MX networks."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/siteToSiteVpn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"siteToSiteVpn"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the site-to-site VPN settings of a network. Only valid for MX networks."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSiteToSiteVpn",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/siteToSiteVpn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"siteToSiteVpn"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'\nhubs| array| The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.\nsubnets| array| The list of subnets and their VPN presence.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/siteToSiteVpn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"siteToSiteVpn"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string| The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'\nhubs| array| The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.\nsubnets| array| The list of subnets and their VPN presence.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "splitNetwork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"split"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Split a combined network into individual networks for each type of device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"split"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Split a combined network into individual networks for each type of device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"resultingNetworks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"organizationId\": \"2930418\",\r\n      \"name\": \"Long Island Office - switch\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"switch\",\r\n      \"productTypes\": [\r\n        \"switch\"\r\n      ],\r\n      \"disableMyMerakiCom\": false,\r\n      \"enrollmentString\": \"long-island-office\"\r\n    },\r\n    {\r\n      \"id\": \"N_5678\",\r\n      \"organizationId\": \"2930418\",\r\n      \"name\": \"Long Island Office - wireless\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"wireless\",\r\n      \"productTypes\": [\r\n        \"wireless\"\r\n      ],\r\n      \"disableMyMerakiCom\": false,\r\n      \"enrollmentString\": \"long-island-office\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkTraffic",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/traffic?t0={{t0}}&timespan={{timespan}}&deviceType={{deviceType}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"traffic"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days."
								},
								{
									"key": "deviceType",
									"value": "{{deviceType}}",
									"description": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/traffic?t0={{t0}}&timespan={{timespan}}&deviceType={{deviceType}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"traffic"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days."
										},
										{
											"key": "deviceType",
											"value": "{{deviceType}}",
											"description": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"application\": \"Gmail\",\r\n    \"destination\": null,\r\n    \"protocol\": \"TCP\",\r\n    \"port\": 443,\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0,\r\n    \"numClients\": 7,\r\n    \"activeTime\": 77000,\r\n    \"flows\": 300\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "unbindNetwork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/unbind",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"unbind"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Unbind a network from a template."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/unbind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"unbind"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Unbind a network from a template."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getOrganizationNetworks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/networks?configTemplateId={{configTemplateId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"networks"
							],
							"query": [
								{
									"key": "configTemplateId",
									"value": "{{configTemplateId}}",
									"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the networks in an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/networks?configTemplateId={{configTemplateId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"networks"
									],
									"query": [
										{
											"key": "configTemplateId",
											"value": "{{configTemplateId}}",
											"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the networks in an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": \"2930418\",\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"productTypes\": [\r\n      \"appliance\",\r\n      \"switch\",\r\n      \"wireless\"\r\n    ],\r\n    \"disableMyMerakiCom\": false,\r\n    \"enrollmentString\": \"long-island-office\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createOrganizationNetwork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"disableMyMerakiCom\": false,\r\n  \"type\": \"appliance switch camera\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"networks"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Create a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new network\ntype| string| The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, or a space-separated list of those for a combined network.\ntags| string| A space-separated list of tags to be applied to the network\ntimeZone| string| The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>\ncopyFromNetworkId| string| The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.\ndisableMyMerakiCom| boolean| Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)\ndisableRemoteStatusPage| boolean| Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"disableMyMerakiCom\": false,\r\n  \"type\": \"appliance switch camera\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"networks"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Create a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new network\ntype| string| The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, or a space-separated list of those for a combined network.\ntags| string| A space-separated list of tags to be applied to the network\ntimeZone| string| The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>\ncopyFromNetworkId| string| The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.\ndisableMyMerakiCom| boolean| Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)\ndisableRemoteStatusPage| boolean| Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": \"2930418\",\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"productTypes\": [\r\n    \"appliance\",\r\n    \"switch\",\r\n    \"wireless\"\r\n  ],\r\n  \"disableMyMerakiCom\": false,\r\n  \"enrollmentString\": \"long-island-office\"\r\n}"
						}
					]
				},
				{
					"name": "combineOrganizationNetworks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"networkIds\": [\r\n    \"N_1234\",\r\n    \"N_5678\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/networks/combine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"networks",
								"combine"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Combine multiple networks into a single network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the combined network\nnetworkIds| array| A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network\nenrollmentString| string| A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Long Island Office\",\r\n  \"networkIds\": [\r\n    \"N_1234\",\r\n    \"N_5678\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/networks/combine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"networks",
										"combine"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Combine multiple networks into a single network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the combined network\nnetworkIds| array| A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network\nenrollmentString| string| A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"resultingNetwork\": {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": \"2930418\",\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"productTypes\": [\r\n      \"appliance\",\r\n      \"switch\",\r\n      \"wireless\"\r\n    ],\r\n    \"disableMyMerakiCom\": false,\r\n    \"enrollmentString\": \"long-island-office\"\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OpenAPI Spec",
			"item": [
				{
					"name": "getOrganizationOpenapiSpec",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/openapiSpec",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"openapiSpec"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/openapiSpec",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"openapiSpec"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"v0\",\r\n    \"title\": \"Meraki Dashboard API\",\r\n    \"description\": \"This collection of API calls provides an easy way to interact with a Cisco Meraki network\"\r\n  },\r\n  \"paths\": {\r\n    \"/organizations\": {\r\n      \"get\": {\r\n        \"description\": \"List the organizations that the user has privileges on\",\r\n        \"operationId\": \"getOrganizations\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful operation\",\r\n            \"examples\": {\r\n              \"application/json\": [\r\n                {\r\n                  \"id\": \"2930418\",\r\n                  \"name\": \"My organization\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "getOrganizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "List the organizations that the user has privileges on"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								},
								"description": "List the organizations that the user has privileges on"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"2930418\",\r\n    \"name\": \"My organization\",\r\n    \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createOrganization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "Create a new organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the organization\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								},
								"description": "Create a new organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the organization\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"2930418\",\r\n  \"name\": \"My organization\",\r\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\r\n}"
						}
					]
				},
				{
					"name": "getOrganization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"2930418\",\r\n  \"name\": \"My organization\",\r\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\r\n}"
						}
					]
				},
				{
					"name": "updateOrganization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Update an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the organization\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Update an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the organization\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"2930418\",\r\n  \"name\": \"My organization\",\r\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\r\n}"
						}
					]
				},
				{
					"name": "deleteOrganization",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Delete an organization"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Delete an organization"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "claimOrganization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orders\": [\r\n    \"4CXXXXXXX\"\r\n  ],\r\n  \"serials\": [\r\n    \"Q234-ABCD-5678\"\r\n  ],\r\n  \"licenses\": [\r\n    {\r\n      \"key\": \"Z2XXXXXXXXXX\",\r\n      \"mode\": \"addDevices\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/claim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"claim"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \norders| array| The numbers of the orders that should be claimed\nserials| array| The serials of the devices that should be claimed\nlicenses| array| The licenses that should be claimed\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\r\n    \"4CXXXXXXX\"\r\n  ],\r\n  \"serials\": [\r\n    \"Q234-ABCD-5678\"\r\n  ],\r\n  \"licenses\": [\r\n    {\r\n      \"key\": \"Z2XXXXXXXXXX\",\r\n      \"mode\": \"addDevices\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"claim"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \norders| array| The numbers of the orders that should be claimed\nserials| array| The serials of the devices that should be claimed\nlicenses| array| The licenses that should be claimed\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"orders\": [\r\n    \"4CXXXXXXX\"\r\n  ],\r\n  \"serials\": [\r\n    \"Q234-ABCD-5678\"\r\n  ],\r\n  \"licenses\": [\r\n    {\r\n      \"key\": \"Z2XXXXXXXXXX\",\r\n      \"mode\": \"addDevices\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "cloneOrganization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/clone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"clone"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Create a new organization by cloning the addressed organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new organization\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My organization\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"clone"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Create a new organization by cloning the addressed organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new organization\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"2930418\",\r\n  \"name\": \"My organization\",\r\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationDeviceStatuses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/deviceStatuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"deviceStatuses"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the status of every Meraki device in the organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/deviceStatuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"deviceStatuses"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the status of every Meraki device in the organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"status\": \"online\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"networkId\": \"N_24329156\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationInventory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/inventory?includeLicenseInfo={{includeLicenseInfo}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"inventory"
							],
							"query": [
								{
									"key": "includeLicenseInfo",
									"value": "{{includeLicenseInfo}}",
									"description": "When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false."
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the inventory for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/inventory?includeLicenseInfo={{includeLicenseInfo}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"inventory"
									],
									"query": [
										{
											"key": "includeLicenseInfo",
											"value": "{{includeLicenseInfo}}",
											"description": "When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false."
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the inventory for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"model\": \"MR34\",\r\n    \"claimedAt\": 1518365681.0,\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"name\": \"My AP\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationLicenseState",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/licenseState",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"licenseState"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the license state for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/licenseState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"licenseState"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the license state for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"status\": \"OK\",\r\n  \"expirationDate\": \"Feb 8, 2020 UTC\",\r\n  \"licensedDeviceCounts\": {\r\n    \"MS\": 100\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationThirdPartyVPNPeers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/thirdPartyVPNPeers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"thirdPartyVPNPeers"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the third party VPN peers for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/thirdPartyVPNPeers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"thirdPartyVPNPeers"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the third party VPN peers for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"remoteId\": \"miles@meraki.com\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateOrganizationThirdPartyVPNPeers",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"peers\": [\r\n    {\r\n      \"name\": \"My peer 1\",\r\n      \"publicIp\": \"123.123.123.1\",\r\n      \"privateSubnets\": [\r\n        \"192.168.1.0/24\",\r\n        \"192.168.128.0/24\"\r\n      ],\r\n      \"secret\": \"asdf1234\",\r\n      \"ipsecPolicies\": {\r\n        \"ikeCipherAlgo\": [\r\n          \"tripledes\"\r\n        ],\r\n        \"ikeAuthAlgo\": [\r\n          \"sha1\"\r\n        ],\r\n        \"ikeDiffieHellmanGroup\": [\r\n          \"group2\"\r\n        ],\r\n        \"ikeLifetime\": 28800,\r\n        \"childCipherAlgo\": [\r\n          \"aes128\"\r\n        ],\r\n        \"childAuthAlgo\": [\r\n          \"sha1\"\r\n        ],\r\n        \"childPfsGroup\": [\r\n          \"disabled\"\r\n        ],\r\n        \"childLifetime\": 28800\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"My peer 2\",\r\n      \"publicIp\": \"123.123.123.2\",\r\n      \"remoteId\": \"miles@meraki.com\",\r\n      \"privateSubnets\": [\r\n        \"192.168.2.0/24\",\r\n        \"192.168.129.0/24\"\r\n      ],\r\n      \"secret\": \"asdf56785678567856785678\",\r\n      \"ipsecPoliciesPreset\": \"default\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/thirdPartyVPNPeers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"thirdPartyVPNPeers"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Update the third party VPN peers for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \npeers| array| The list of VPN peers\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"peers\": [\r\n    {\r\n      \"name\": \"My peer 1\",\r\n      \"publicIp\": \"123.123.123.1\",\r\n      \"privateSubnets\": [\r\n        \"192.168.1.0/24\",\r\n        \"192.168.128.0/24\"\r\n      ],\r\n      \"secret\": \"asdf1234\",\r\n      \"ipsecPolicies\": {\r\n        \"ikeCipherAlgo\": [\r\n          \"tripledes\"\r\n        ],\r\n        \"ikeAuthAlgo\": [\r\n          \"sha1\"\r\n        ],\r\n        \"ikeDiffieHellmanGroup\": [\r\n          \"group2\"\r\n        ],\r\n        \"ikeLifetime\": 28800,\r\n        \"childCipherAlgo\": [\r\n          \"aes128\"\r\n        ],\r\n        \"childAuthAlgo\": [\r\n          \"sha1\"\r\n        ],\r\n        \"childPfsGroup\": [\r\n          \"disabled\"\r\n        ],\r\n        \"childLifetime\": 28800\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"My peer 2\",\r\n      \"publicIp\": \"123.123.123.2\",\r\n      \"remoteId\": \"miles@meraki.com\",\r\n      \"privateSubnets\": [\r\n        \"192.168.2.0/24\",\r\n        \"192.168.129.0/24\"\r\n      ],\r\n      \"secret\": \"asdf56785678567856785678\",\r\n      \"ipsecPoliciesPreset\": \"default\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/thirdPartyVPNPeers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"thirdPartyVPNPeers"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Update the third party VPN peers for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \npeers| array| The list of VPN peers\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"remoteId\": \"miles@meraki.com\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationUplinksLossAndLatency",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/uplinksLossAndLatency?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&uplink={{uplink}}&ip={{ip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"uplinksLossAndLatency"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
								},
								{
									"key": "uplink",
									"value": "{{uplink}}",
									"description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "Optional filter for a specific destination IP. Default will return all destination IPs."
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/uplinksLossAndLatency?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&uplink={{uplink}}&ip={{ip}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"uplinksLossAndLatency"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
										},
										{
											"key": "uplink",
											"value": "{{uplink}}",
											"description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "Optional filter for a specific destination IP. Default will return all destination IPs."
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PII",
			"item": [
				{
					"name": "getNetworkPiiPiiKeys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/piiKeys?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"piiKeys"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The username of a Systems Manager user"
								},
								{
									"key": "email",
									"value": "{{email}}",
									"description": "The email of a network user account or a Systems Manager device"
								},
								{
									"key": "mac",
									"value": "{{mac}}",
									"description": "The MAC of a network client device or a Systems Manager device"
								},
								{
									"key": "serial",
									"value": "{{serial}}",
									"description": "The serial of a Systems Manager device"
								},
								{
									"key": "imei",
									"value": "{{imei}}",
									"description": "The IMEI of a Systems Manager device"
								},
								{
									"key": "bluetoothMac",
									"value": "{{bluetoothMac}}",
									"description": "The MAC of a Bluetooth client"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/piiKeys?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"piiKeys"
									],
									"query": [
										{
											"key": "username",
											"value": "{{username}}",
											"description": "The username of a Systems Manager user"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"description": "The email of a network user account or a Systems Manager device"
										},
										{
											"key": "mac",
											"value": "{{mac}}",
											"description": "The MAC of a network client device or a Systems Manager device"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "The serial of a Systems Manager device"
										},
										{
											"key": "imei",
											"value": "{{imei}}",
											"description": "The IMEI of a Systems Manager device"
										},
										{
											"key": "bluetoothMac",
											"value": "{{bluetoothMac}}",
											"description": "The MAC of a Bluetooth client"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"N_1234\": {\r\n    \"macs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ],\r\n    \"emails\": [\r\n      \"fake@example.com\"\r\n    ],\r\n    \"usernames\": [\r\n      \"fakename\"\r\n    ],\r\n    \"serials\": [\r\n      \"abcd1234\"\r\n    ],\r\n    \"imeis\": [\r\n      \"990000862471854\"\r\n    ],\r\n    \"bluetoothMacs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ]\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkPiiRequests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"requests"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"requests"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"organizationWide\": false,\r\n    \"networkId\": \"N_1234\",\r\n    \"type\": \"delete\",\r\n    \"mac\": \"00:77:00:77:00:77\",\r\n    \"datasets\": \"['usage', 'events']\",\r\n    \"status\": \"Completed\",\r\n    \"createdAt\": 1524692227,\r\n    \"completedAt\": 1524702227\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkPiiRequest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"delete\",\r\n  \"datasets\": [\r\n    \"usage\",\r\n    \"events\"\r\n  ],\r\n  \"mac\": \"00:77:00:77:00:77\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"requests"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntype| string| One of \"delete\" or \"restrict processing\"\ndatasets| array| The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)\nusername| string| The username of a network log in. Only applies to \"delete\" requests.\nemail| string| The email of a network user account. Only applies to \"delete\" requests.\nmac| string| The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.\nsmDeviceId| string| The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.\nsmUserId| string| The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"delete\",\r\n  \"datasets\": [\r\n    \"usage\",\r\n    \"events\"\r\n  ],\r\n  \"mac\": \"00:77:00:77:00:77\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"requests"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntype| string| One of \"delete\" or \"restrict processing\"\ndatasets| array| The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)\nusername| string| The username of a network log in. Only applies to \"delete\" requests.\nemail| string| The email of a network user account. Only applies to \"delete\" requests.\nmac| string| The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.\nsmDeviceId| string| The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.\nsmUserId| string| The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Not visible in Dashboard; database deletion in process\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": null\r\n}"
						}
					]
				},
				{
					"name": "getNetworkPiiRequest",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "requestId",
									"value": "{{requestId}}"
								}
							]
						},
						"description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"requests",
										":requestId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "requestId",
											"value": "{{requestId}}"
										}
									]
								},
								"description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Completed\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": 1524702227\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkPiiRequest",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "requestId",
									"value": "{{requestId}}"
								}
							]
						},
						"description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"requests",
										":requestId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "requestId",
											"value": "{{requestId}}"
										}
									]
								},
								"description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkPiiSmDevicesForKey",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/smDevicesForKey?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"smDevicesForKey"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The username of a Systems Manager user"
								},
								{
									"key": "email",
									"value": "{{email}}",
									"description": "The email of a network user account or a Systems Manager device"
								},
								{
									"key": "mac",
									"value": "{{mac}}",
									"description": "The MAC of a network client device or a Systems Manager device"
								},
								{
									"key": "serial",
									"value": "{{serial}}",
									"description": "The serial of a Systems Manager device"
								},
								{
									"key": "imei",
									"value": "{{imei}}",
									"description": "The IMEI of a Systems Manager device"
								},
								{
									"key": "bluetoothMac",
									"value": "{{bluetoothMac}}",
									"description": "The MAC of a Bluetooth client"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/smDevicesForKey?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"smDevicesForKey"
									],
									"query": [
										{
											"key": "username",
											"value": "{{username}}",
											"description": "The username of a Systems Manager user"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"description": "The email of a network user account or a Systems Manager device"
										},
										{
											"key": "mac",
											"value": "{{mac}}",
											"description": "The MAC of a network client device or a Systems Manager device"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "The serial of a Systems Manager device"
										},
										{
											"key": "imei",
											"value": "{{imei}}",
											"description": "The IMEI of a Systems Manager device"
										},
										{
											"key": "bluetoothMac",
											"value": "{{bluetoothMac}}",
											"description": "The MAC of a Bluetooth client"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\",\r\n    \"8348382288234\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkPiiSmOwnersForKey",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/pii/smOwnersForKey?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"pii",
								"smOwnersForKey"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The username of a Systems Manager user"
								},
								{
									"key": "email",
									"value": "{{email}}",
									"description": "The email of a network user account or a Systems Manager device"
								},
								{
									"key": "mac",
									"value": "{{mac}}",
									"description": "The MAC of a network client device or a Systems Manager device"
								},
								{
									"key": "serial",
									"value": "{{serial}}",
									"description": "The serial of a Systems Manager device"
								},
								{
									"key": "imei",
									"value": "{{imei}}",
									"description": "The IMEI of a Systems Manager device"
								},
								{
									"key": "bluetoothMac",
									"value": "{{bluetoothMac}}",
									"description": "The MAC of a Bluetooth client"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/pii/smOwnersForKey?username={{username}}&email={{email}}&mac={{mac}}&serial={{serial}}&imei={{imei}}&bluetoothMac={{bluetoothMac}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"pii",
										"smOwnersForKey"
									],
									"query": [
										{
											"key": "username",
											"value": "{{username}}",
											"description": "The username of a Systems Manager user"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"description": "The email of a network user account or a Systems Manager device"
										},
										{
											"key": "mac",
											"value": "{{mac}}",
											"description": "The MAC of a network client device or a Systems Manager device"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "The serial of a Systems Manager device"
										},
										{
											"key": "imei",
											"value": "{{imei}}",
											"description": "The IMEI of a Systems Manager device"
										},
										{
											"key": "bluetoothMac",
											"value": "{{bluetoothMac}}",
											"description": "The MAC of a Bluetooth client"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\"\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Radio settings",
			"item": [
				{
					"name": "getNetworkDeviceWirelessRadioSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/radioSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"wireless",
								"radioSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the radio settings of a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/radioSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"wireless",
										"radioSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the radio settings of a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkDeviceWirelessRadioSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rfProfileId\": \"1234\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/radioSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"wireless",
								"radioSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Update the radio settings of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrfProfileId| integer|     The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n    (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\n    on the device (channel width, channel, power).\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rfProfileId\": \"1234\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/radioSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"wireless",
										"radioSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Update the radio settings of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrfProfileId| integer|     The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n    (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\n    on the device (channel width, channel, power).\n\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkWirelessRfProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles?includeTemplateProfiles={{includeTemplateProfiles}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"rfProfiles"
							],
							"query": [
								{
									"key": "includeTemplateProfiles",
									"value": "{{includeTemplateProfiles}}",
									"description": "    If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n    should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the non-basic RF profiles for this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles?includeTemplateProfiles={{includeTemplateProfiles}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"rfProfiles"
									],
									"query": [
										{
											"key": "includeTemplateProfiles",
											"value": "{{includeTemplateProfiles}}",
											"description": "    If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n    should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the non-basic RF profiles for this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Some Custom RF Profile\",\r\n    \"clientBalancingEnabled\": true,\r\n    \"minBitrateType\": \"band\",\r\n    \"bandSelectionType\": \"ap\",\r\n    \"apSelectionSettings\": {\r\n      \"bandOperationMode\": \"dual\",\r\n      \"bandSteeringEnabled\": true\r\n    },\r\n    \"twoFourGhzSettings\": {\r\n      \"maxPower\": 30,\r\n      \"minPower\": 5,\r\n      \"minBitrate\": 11,\r\n      \"rxsop\": null,\r\n      \"validAutoChannels\": [\r\n        1,\r\n        6,\r\n        11\r\n      ],\r\n      \"axEnabled\": true\r\n    },\r\n    \"fiveGhzSettings\": {\r\n      \"maxPower\": 30,\r\n      \"minPower\": 8,\r\n      \"minBitrate\": 12,\r\n      \"rxsop\": null,\r\n      \"validAutoChannels\": [\r\n        36,\r\n        40,\r\n        44,\r\n        48,\r\n        52,\r\n        56,\r\n        60,\r\n        64,\r\n        100,\r\n        104,\r\n        108,\r\n        112,\r\n        116,\r\n        120,\r\n        124,\r\n        128,\r\n        132,\r\n        136,\r\n        140,\r\n        144,\r\n        149,\r\n        153,\r\n        157,\r\n        161,\r\n        165\r\n      ],\r\n      \"channelWidth\": \"auto\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkWirelessRfProfile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"rfProfiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Creates new RF profile for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique. This param is required on creation.\nclientBalancingEnabled| boolean| Steers client to best available access point. Can be either true or false. Defaults to true.\nminBitrateType| string| Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.\nbandSelectionType| string| Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.\napBandSettings| object| Settings that will be enabled if selectionType is set to 'ap'.\ntwoFourGhzSettings| object| Settings related to 2.4Ghz band\nfiveGhzSettings| object| Settings related to 5Ghz band\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"rfProfiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Creates new RF profile for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique. This param is required on creation.\nclientBalancingEnabled| boolean| Steers client to best available access point. Can be either true or false. Defaults to true.\nminBitrateType| string| Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.\nbandSelectionType| string| Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.\napBandSettings| object| Settings that will be enabled if selectionType is set to 'ap'.\ntwoFourGhzSettings| object| Settings related to 2.4Ghz band\nfiveGhzSettings| object| Settings related to 5Ghz band\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Some Custom RF Profile\",\r\n  \"clientBalancingEnabled\": true,\r\n  \"minBitrateType\": \"band\",\r\n  \"bandSelectionType\": \"ap\",\r\n  \"apSelectionSettings\": {\r\n    \"bandOperationMode\": \"dual\",\r\n    \"bandSteeringEnabled\": true\r\n  },\r\n  \"twoFourGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 5,\r\n    \"minBitrate\": 11,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      1,\r\n      6,\r\n      11\r\n    ],\r\n    \"axEnabled\": true\r\n  },\r\n  \"fiveGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 8,\r\n    \"minBitrate\": 12,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      36,\r\n      40,\r\n      44,\r\n      48,\r\n      52,\r\n      56,\r\n      60,\r\n      64,\r\n      100,\r\n      104,\r\n      108,\r\n      112,\r\n      116,\r\n      120,\r\n      124,\r\n      128,\r\n      132,\r\n      136,\r\n      140,\r\n      144,\r\n      149,\r\n      153,\r\n      157,\r\n      161,\r\n      165\r\n    ],\r\n    \"channelWidth\": \"auto\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkWirelessRfProfile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"rfProfiles",
								":rfProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "rfProfileId",
									"value": "{{rfProfileId}}"
								}
							]
						},
						"description": "Updates specified RF profile for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique.\nclientBalancingEnabled| boolean| Steers client to best available access point. Can be either true or false.\nminBitrateType| string| Minimum bitrate can be set to either 'band' or 'ssid'.\nbandSelectionType| string| Band selection can be set to either 'ssid' or 'ap'.\napBandSettings| object| Settings that will be enabled if selectionType is set to 'ap'.\ntwoFourGhzSettings| object| Settings related to 2.4Ghz band\nfiveGhzSettings| object| Settings related to 5Ghz band\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"rfProfiles",
										":rfProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "rfProfileId",
											"value": "{{rfProfileId}}"
										}
									]
								},
								"description": "Updates specified RF profile for this network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new profile. Must be unique.\nclientBalancingEnabled| boolean| Steers client to best available access point. Can be either true or false.\nminBitrateType| string| Minimum bitrate can be set to either 'band' or 'ssid'.\nbandSelectionType| string| Band selection can be set to either 'ssid' or 'ap'.\napBandSettings| object| Settings that will be enabled if selectionType is set to 'ap'.\ntwoFourGhzSettings| object| Settings related to 2.4Ghz band\nfiveGhzSettings| object| Settings related to 5Ghz band\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Some Custom RF Profile\",\r\n  \"clientBalancingEnabled\": true,\r\n  \"minBitrateType\": \"band\",\r\n  \"bandSelectionType\": \"ap\",\r\n  \"apSelectionSettings\": {\r\n    \"bandOperationMode\": \"dual\",\r\n    \"bandSteeringEnabled\": true\r\n  },\r\n  \"twoFourGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 5,\r\n    \"minBitrate\": 11,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      1,\r\n      6,\r\n      11\r\n    ],\r\n    \"axEnabled\": true\r\n  },\r\n  \"fiveGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 8,\r\n    \"minBitrate\": 12,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      36,\r\n      40,\r\n      44,\r\n      48,\r\n      52,\r\n      56,\r\n      60,\r\n      64,\r\n      100,\r\n      104,\r\n      108,\r\n      112,\r\n      116,\r\n      120,\r\n      124,\r\n      128,\r\n      132,\r\n      136,\r\n      140,\r\n      144,\r\n      149,\r\n      153,\r\n      157,\r\n      161,\r\n      165\r\n    ],\r\n    \"channelWidth\": \"auto\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkWirelessRfProfile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"rfProfiles",
								":rfProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "rfProfileId",
									"value": "{{rfProfileId}}"
								}
							]
						},
						"description": "Delete a RF Profile"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"rfProfiles",
										":rfProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "rfProfileId",
											"value": "{{rfProfileId}}"
										}
									]
								},
								"description": "Delete a RF Profile"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkWirelessRfProfile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"rfProfiles",
								":rfProfileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "rfProfileId",
									"value": "{{rfProfileId}}"
								}
							]
						},
						"description": "Return a RF profile"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"rfProfiles",
										":rfProfileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "rfProfileId",
											"value": "{{rfProfileId}}"
										}
									]
								},
								"description": "Return a RF profile"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Some Custom RF Profile\",\r\n  \"clientBalancingEnabled\": true,\r\n  \"minBitrateType\": \"band\",\r\n  \"bandSelectionType\": \"ap\",\r\n  \"apSelectionSettings\": {\r\n    \"bandOperationMode\": \"dual\",\r\n    \"bandSteeringEnabled\": true\r\n  },\r\n  \"twoFourGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 5,\r\n    \"minBitrate\": 11,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      1,\r\n      6,\r\n      11\r\n    ],\r\n    \"axEnabled\": true\r\n  },\r\n  \"fiveGhzSettings\": {\r\n    \"maxPower\": 30,\r\n    \"minPower\": 8,\r\n    \"minBitrate\": 12,\r\n    \"rxsop\": null,\r\n    \"validAutoChannels\": [\r\n      36,\r\n      40,\r\n      44,\r\n      48,\r\n      52,\r\n      56,\r\n      60,\r\n      64,\r\n      100,\r\n      104,\r\n      108,\r\n      112,\r\n      116,\r\n      120,\r\n      124,\r\n      128,\r\n      132,\r\n      136,\r\n      140,\r\n      144,\r\n      149,\r\n      153,\r\n      157,\r\n      161,\r\n      165\r\n    ],\r\n    \"channelWidth\": \"auto\"\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SAML roles",
			"item": [
				{
					"name": "getOrganizationSamlRoles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"samlRoles"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the SAML roles for this organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"samlRoles"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the SAML roles for this organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"TEdJIEN1c3RvbWVy\",\r\n    \"role\": \"myrole\",\r\n    \"orgAccess\": \"none\",\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_1234\",\r\n        \"access\": \"full\"\r\n      }\r\n    ],\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createOrganizationSamlRole",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"samlRoles"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Create a SAML role\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrole| string| The role of the SAML administrator\norgAccess| string| The privilege of the SAML administrator on the organization\ntags| array| The list of tags that the SAML administrator has privleges on\nnetworks| array| The list of networks that the SAML administrator has privileges on\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"samlRoles"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Create a SAML role\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrole| string| The role of the SAML administrator\norgAccess| string| The privilege of the SAML administrator on the organization\ntags| array| The list of tags that the SAML administrator has privleges on\nnetworks| array| The list of networks that the SAML administrator has privileges on\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationSamlRole",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"samlRoles",
								":samlRoleId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "samlRoleId",
									"value": "{{samlRoleId}}"
								}
							]
						},
						"description": "Return a SAML role"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"samlRoles",
										":samlRoleId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "samlRoleId",
											"value": "{{samlRoleId}}"
										}
									]
								},
								"description": "Return a SAML role"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationSamlRole",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"samlRoles",
								":samlRoleId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "samlRoleId",
									"value": "{{samlRoleId}}"
								}
							]
						},
						"description": "Update a SAML role\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrole| string| The role of the SAML administrator\norgAccess| string| The privilege of the SAML administrator on the organization\ntags| array| The list of tags that the SAML administrator has privleges on\nnetworks| array| The list of networks that the SAML administrator has privileges on\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"samlRoles",
										":samlRoleId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "samlRoleId",
											"value": "{{samlRoleId}}"
										}
									]
								},
								"description": "Update a SAML role\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrole| string| The role of the SAML administrator\norgAccess| string| The privilege of the SAML administrator on the organization\ntags| array| The list of tags that the SAML administrator has privleges on\nnetworks| array| The list of networks that the SAML administrator has privileges on\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteOrganizationSamlRole",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"samlRoles",
								":samlRoleId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "samlRoleId",
									"value": "{{samlRoleId}}"
								}
							]
						},
						"description": "Remove a SAML role"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"samlRoles",
										":samlRoleId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "samlRoleId",
											"value": "{{samlRoleId}}"
										}
									]
								},
								"description": "Remove a SAML role"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SM",
			"item": [
				{
					"name": "createNetworkSmAppPolaris",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"manifestUrl\": \"https://website.com/assets/manifest.plist\",\r\n  \"preventAutoInstall\": true,\r\n  \"usesVPP\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"app",
								"polaris"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a new Polaris app\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscope| string| The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nmanifestUrl| string| The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)\nbundleId| string| The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)\npreventAutoInstall| boolean| (optional) Whether or not SM should auto-install this app (one of true or false). False by default.\nusesVPP| boolean| (optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"manifestUrl\": \"https://website.com/assets/manifest.plist\",\r\n  \"preventAutoInstall\": true,\r\n  \"usesVPP\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"app",
										"polaris"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a new Polaris app\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscope| string| The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nmanifestUrl| string| The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)\nbundleId| string| The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)\npreventAutoInstall| boolean| (optional) Whether or not SM should auto-install this app (one of true or false). False by default.\nusesVPP| boolean| (optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"app_id\": \"123456\",\r\n  \"bundle_id\": \"com.cisco.polaris\",\r\n  \"scope\": \"withAny\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"prevent_auto_install\": true,\r\n  \"uses_vpp\": true\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmAppPolaris",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris?bundleId={{bundleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"app",
								"polaris"
							],
							"query": [
								{
									"key": "bundleId",
									"value": "{{bundleId}}",
									"description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Get details for a Cisco Polaris app if it exists"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris?bundleId={{bundleId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"app",
										"polaris"
									],
									"query": [
										{
											"key": "bundleId",
											"value": "{{bundleId}}",
											"description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Get details for a Cisco Polaris app if it exists"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"app_id\": \"123456\",\r\n  \"bundle_id\": \"com.cisco.polaris\",\r\n  \"scope\": \"withAny\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"prevent_auto_install\": true,\r\n  \"uses_vpp\": true\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmAppPolaris",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"preventAutoInstall\": true,\r\n  \"usesVPP\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris/:appId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"app",
								"polaris",
								":appId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "appId",
									"value": "{{appId}}"
								}
							]
						},
						"description": "Update an existing Polaris app\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscope| string| optional: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\npreventAutoInstall| boolean| optional: Whether or not SM should auto-install this app (one of true or false)\nusesVPP| boolean| optional: Whether or not the app should use VPP by device assignment (one of true or false)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"preventAutoInstall\": true,\r\n  \"usesVPP\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris/:appId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"app",
										"polaris",
										":appId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "appId",
											"value": "{{appId}}"
										}
									]
								},
								"description": "Update an existing Polaris app\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nscope| string| optional: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\npreventAutoInstall| boolean| optional: Whether or not SM should auto-install this app (one of true or false)\nusesVPP| boolean| optional: Whether or not the app should use VPP by device assignment (one of true or false)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"app_id\": \"123456\",\r\n  \"bundle_id\": \"com.cisco.polaris\",\r\n  \"scope\": \"withAny\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"prevent_auto_install\": true,\r\n  \"uses_vpp\": true\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSmAppPolaris",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris/:appId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"app",
								"polaris",
								":appId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "appId",
									"value": "{{appId}}"
								}
							]
						},
						"description": "Delete a Cisco Polaris app"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/app/polaris/:appId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"app",
										"polaris",
										":appId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "appId",
											"value": "{{appId}}"
										}
									]
								},
								"description": "Delete a Cisco Polaris app"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "createNetworkSmBypassActivationLockAttempt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ids\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"bypassActivationLockAttempts"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Bypass activation lock attempt\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nids| array| The ids of the devices to attempt activation lock bypass.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"bypassActivationLockAttempts"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Bypass activation lock attempt\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nids| array| The ids of the devices to attempt activation lock bypass.\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"status\": \"pending\",\r\n  \"data\": {}\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmBypassActivationLockAttempt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts/:attemptId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"bypassActivationLockAttempts",
								":attemptId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "attemptId",
									"value": "{{attemptId}}"
								}
							]
						},
						"description": "Bypass activation lock attempt status"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts/:attemptId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"bypassActivationLockAttempts",
										":attemptId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "attemptId",
											"value": "{{attemptId}}"
										}
									]
								},
								"description": "Bypass activation lock attempt status"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"status\": \"complete\",\r\n  \"data\": {\r\n    \"38290139892\": {\r\n      \"success\": true\r\n    },\r\n    \"2090938209\": {\r\n      \"success\": false,\r\n      \"errors\": [\r\n        \"Activation lock bypass code not known for this device\"\r\n      ]\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmDeviceFields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"1284392014819\",\r\n  \"deviceFields\": {\r\n    \"name\": \"My name\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/device/fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"device",
								"fields"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Modify the fields of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMac| string| The wifiMac of the device to be modified.\nid| string| The id of the device to be modified.\nserial| string| The serial of the device to be modified.\ndeviceFields| object| The new fields of the device. Each field of this object is optional.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"1284392014819\",\r\n  \"deviceFields\": {\r\n    \"name\": \"My name\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/device/fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"device",
										"fields"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Modify the fields of a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMac| string| The wifiMac of the device to be modified.\nid| string| The id of the device to be modified.\nserial| string| The serial of the device to be modified.\ndeviceFields| object| The new fields of the device. Each field of this object is optional.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": [\r\n    {\r\n      \"id\": \"1284392014819\",\r\n      \"serial\": \"F5XKHEBX\",\r\n      \"wifiMac\": \"00:11:22:33:44:55\",\r\n      \"name\": \"My name\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "wipeNetworkSmDevice",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"1284392014819\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/device/wipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"device",
								"wipe"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Wipe a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMac| string| The wifiMac of the device to be wiped.\nid| string| The id of the device to be wiped.\nserial| string| The serial of the device to be wiped.\npin| integer| The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"1284392014819\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/device/wipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"device",
										"wipe"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Wipe a device\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMac| string| The wifiMac of the device to be wiped.\nid| string| The id of the device to be wiped.\nserial| string| The serial of the device to be wiped.\npin| integer| The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "refreshNetworkSmDeviceDetails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/device/:deviceId/refreshDetails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"device",
								":deviceId",
								"refreshDetails"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "Refresh the details of a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/device/:deviceId/refreshDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"device",
										":deviceId",
										"refreshDetails"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "Refresh the details of a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkSmDevices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/devices?fields={{fields}}&wifiMacs={{wifiMacs}}&serials={{serials}}&ids={{ids}}&scope={{scope}}&batchSize={{batchSize}}&batchToken={{batchToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"devices"
							],
							"query": [
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
								},
								{
									"key": "wifiMacs",
									"value": "{{wifiMacs}}",
									"description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
								},
								{
									"key": "serials",
									"value": "{{serials}}",
									"description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
								},
								{
									"key": "ids",
									"value": "{{ids}}",
									"description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
								},
								{
									"key": "scope",
									"value": "{{scope}}",
									"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
								},
								{
									"key": "batchSize",
									"value": "{{batchSize}}",
									"description": "Number of devices to return, 1000 is the default as well as the max."
								},
								{
									"key": "batchToken",
									"value": "{{batchToken}}",
									"description": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the devices enrolled in an SM network with various specified fields and filters"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/devices?fields={{fields}}&wifiMacs={{wifiMacs}}&serials={{serials}}&ids={{ids}}&scope={{scope}}&batchSize={{batchSize}}&batchToken={{batchToken}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"devices"
									],
									"query": [
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
										},
										{
											"key": "wifiMacs",
											"value": "{{wifiMacs}}",
											"description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
										},
										{
											"key": "serials",
											"value": "{{serials}}",
											"description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
										},
										{
											"key": "ids",
											"value": "{{ids}}",
											"description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
										},
										{
											"key": "scope",
											"value": "{{scope}}",
											"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
										},
										{
											"key": "batchSize",
											"value": "{{batchSize}}",
											"description": "Number of devices to return, 1000 is the default as well as the max."
										},
										{
											"key": "batchToken",
											"value": "{{batchToken}}",
											"description": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the devices enrolled in an SM network with various specified fields and filters"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"devices\": [\r\n    {\r\n      \"id\": \"1284392014819\",\r\n      \"name\": \"Miles's phone\",\r\n      \"tags\": [\r\n        \"tag1\",\r\n        \"tag2\"\r\n      ],\r\n      \"ssid\": \"My SSID\",\r\n      \"wifiMac\": \"00:11:22:33:44:55\",\r\n      \"osName\": \"iOS 9.3.5\",\r\n      \"systemModel\": \"iPhone\",\r\n      \"uuid\": \"3d990628ede4c628d52\",\r\n      \"serialNumber\": \"F5XKHEBX\",\r\n      \"ip\": \"1.2.3.4\"\r\n    }\r\n  ],\r\n  \"batchToken\": \"MMbCbpHZtG3TKUCr9B9uc5\"\r\n}"
						}
					]
				},
				{
					"name": "checkinNetworkSmDevices",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/devices/checkin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"devices",
								"checkin"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Force check-in a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be checked-in.\nids| string| The ids of the devices to be checked-in.\nserials| string| The serials of the devices to be checked-in.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/devices/checkin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"devices",
										"checkin"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Force check-in a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be checked-in.\nids| string| The ids of the devices to be checked-in.\nserials| string| The serials of the devices to be checked-in.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "moveNetworkSmDevices",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\",\r\n  \"newNetwork\": \"N_24329156\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/devices/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"devices",
								"move"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Move a set of devices to a new network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be moved.\nids| string| The ids of the devices to be moved.\nserials| string| The serials of the devices to be moved.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.\nnewNetwork| string| The new network to which the devices will be moved.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\",\r\n  \"newNetwork\": \"N_24329156\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/devices/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"devices",
										"move"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Move a set of devices to a new network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be moved.\nids| string| The ids of the devices to be moved.\nserials| string| The serials of the devices to be moved.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.\nnewNetwork| string| The new network to which the devices will be moved.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmDevicesTags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scope\": \"withAny, old_tag\",\r\n  \"updateAction\": \"add\",\r\n  \"tags\": \"tag1,tag2\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/devices/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"devices",
								"tags"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add, delete, or update the tags of a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be modified.\nids| string| The ids of the devices to be modified.\nserials| string| The serials of the devices to be modified.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.\ntags| string| The tags to be added, deleted, or updated.\nupdateAction| string| One of add, delete, or update. Only devices that have been modified will be returned.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"scope\": \"withAny, old_tag\",\r\n  \"updateAction\": \"add\",\r\n  \"tags\": \"tag1,tag2\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/devices/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"devices",
										"tags"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add, delete, or update the tags of a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be modified.\nids| string| The ids of the devices to be modified.\nserials| string| The serials of the devices to be modified.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.\ntags| string| The tags to be added, deleted, or updated.\nupdateAction| string| One of add, delete, or update. Only devices that have been modified will be returned.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": [\r\n    {\r\n      \"id\": \"1284392014819\",\r\n      \"serial\": \"F5XKHEBX\",\r\n      \"wifiMac\": \"00:11:22:33:44:55\",\r\n      \"tags\": [\r\n        \"tag1\",\r\n        \"tag2\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "unenrollNetworkSmDevice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/unenroll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"devices",
								":deviceId",
								"unenroll"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "Unenroll a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/unenroll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"devices",
										":deviceId",
										"unenroll"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "Unenroll a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "createNetworkSmProfileClarity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cisco Clarity Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"PluginBundleID\": \"com.cisco.security.app\",\r\n  \"FilterBrowsers\": true,\r\n  \"FilterSockets\": true,\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"clarity"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a new profile containing a Cisco Clarity payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name to be given to the new profile\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nPluginBundleID| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nFilterBrowsers| boolean| Whether or not to enable browser traffic filtering (one of true, false). Default true.\nFilterSockets| boolean| Whether or not to enable socket traffic filtering (one of true, false). Default true.\nVendorConfig| array| The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cisco Clarity Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"PluginBundleID\": \"com.cisco.security.app\",\r\n  \"FilterBrowsers\": true,\r\n  \"FilterSockets\": true,\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"clarity"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a new profile containing a Cisco Clarity payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name to be given to the new profile\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nPluginBundleID| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nFilterBrowsers| boolean| Whether or not to enable browser traffic filtering (one of true, false). Default true.\nFilterSockets| boolean| Whether or not to enable socket traffic filtering (one of true, false). Default true.\nVendorConfig| array| The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmProfileClarity",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cisco Clarity Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"clarity",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Update an existing profile containing a Cisco Clarity payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| optional: A new name for the profile\nscope| string| optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nPluginBundleID| string| optional: The new bundle ID of the application\nFilterBrowsers| boolean| optional: Whether or not to enable browser traffic filtering (one of true, false).\nFilterSockets| boolean| optional: Whether or not to enable socket traffic filtering (one of true, false).\nVendorConfig| array| optional: The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cisco Clarity Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"clarity",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Update an existing profile containing a Cisco Clarity payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| optional: A new name for the profile\nscope| string| optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nPluginBundleID| string| optional: The new bundle ID of the application\nFilterBrowsers| boolean| optional: Whether or not to enable browser traffic filtering (one of true, false).\nFilterSockets| boolean| optional: Whether or not to enable socket traffic filtering (one of true, false).\nVendorConfig| array| optional: The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "addNetworkSmProfileClarity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"clarity",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Add a Cisco Clarity payload to an existing profile\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nPluginBundleID| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nFilterBrowsers| boolean| Whether or not to enable browser traffic filtering (one of true, false). Defaults to true\nFilterSockets| boolean| Whether or not to enable socket traffic filtering (one of true, false). Defaults to true\nVendorConfig| array| The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"clarity",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Add a Cisco Clarity payload to an existing profile\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nPluginBundleID| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nFilterBrowsers| boolean| Whether or not to enable browser traffic filtering (one of true, false). Defaults to true\nFilterSockets| boolean| Whether or not to enable socket traffic filtering (one of true, false). Defaults to true\nVendorConfig| array| The specific VendorConfig to be passed to the filtering framework, in the form of an array of objects (as JSON).\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmProfileClarity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"clarity",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Get details for a Cisco Clarity payload"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"clarity",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Get details for a Cisco Clarity payload"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"profile_id\": \"12345\",\r\n  \"name\": \"Cisco Clarity Config\",\r\n  \"PluginBundleID\": \"com.cisco.security.app\",\r\n  \"FilterBrowsers\": true,\r\n  \"FilterSockets\": true,\r\n  \"VendorConfig\": [\r\n    {\r\n      \"key\": \"cloud_asn1_server_host\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"immunet.com\"\r\n    },\r\n    {\r\n      \"key\": \"cloud_asn1_server_port\",\r\n      \"type\": \"manual_int\",\r\n      \"value\": 443\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSmProfileClarity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"clarity",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/clarity/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"clarity",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"payload_deleted\": true,\r\n  \"profile_deleted\": true\r\n}"
						}
					]
				},
				{
					"name": "createNetworkSmProfileUmbrella",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cisco Umbrella Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"AppBundleIdentifier\": \"com.cisco.security\",\r\n  \"ProviderBundleIdentifier\": \"com.cisco.umbrella\",\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ],\r\n  \"usesCert\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"umbrella"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a new profile containing a Cisco Umbrella payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name to be given to the new profile\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nAppBundleIdentifier| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nProviderBundleIdentifier| string| The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella\nProviderConfiguration| array| The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| Whether the certificate should be attached to this profile (one of true, false). False by default\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cisco Umbrella Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"AppBundleIdentifier\": \"com.cisco.security\",\r\n  \"ProviderBundleIdentifier\": \"com.cisco.umbrella\",\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ],\r\n  \"usesCert\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"umbrella"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a new profile containing a Cisco Umbrella payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name to be given to the new profile\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nAppBundleIdentifier| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nProviderBundleIdentifier| string| The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella\nProviderConfiguration| array| The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| Whether the certificate should be attached to this profile (one of true, false). False by default\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSmProfileUmbrella",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cisco Umbrella Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"umbrella",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Update an existing profile containing a Cisco Umbrella payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| optional: A new name for the profile\nscope| string| optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nAppBundleIdentifier| string| optional: The bundle ID of the application\nProviderBundleIdentifier| string| optional: The bundle ID of the provider\nProviderConfiguration| array| optional: The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| optional: Whether the certificate should be attached to this profile (one of true, false)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cisco Umbrella Config\",\r\n  \"scope\": \"withAny, tag1, tag2\",\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"umbrella",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Update an existing profile containing a Cisco Umbrella payload\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| optional: A new name for the profile\nscope| string| optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned\nAppBundleIdentifier| string| optional: The bundle ID of the application\nProviderBundleIdentifier| string| optional: The bundle ID of the provider\nProviderConfiguration| array| optional: The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| optional: Whether the certificate should be attached to this profile (one of true, false)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "addNetworkSmProfileUmbrella",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"umbrella",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Add a Cisco Umbrella payload to an existing profile\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nAppBundleIdentifier| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nProviderBundleIdentifier| string| The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella\nProviderConfiguration| array| The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| Whether the certificate should be attached to this profile (one of true, false). False by default\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"umbrella",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Add a Cisco Umbrella payload to an existing profile\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nAppBundleIdentifier| string| The bundle ID of the application, defaults to com.cisco.ciscosecurity.app\nProviderBundleIdentifier| string| The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella\nProviderConfiguration| array| The specific ProviderConfiguration to be passed to the filtering framework, in the form of an array of objects (as JSON).\nusesCert| boolean| Whether the certificate should be attached to this profile (one of true, false). False by default\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"profile_id\": \"12345\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmProfileUmbrella",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"umbrella",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Get details for a Cisco Umbrella payload"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"umbrella",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Get details for a Cisco Umbrella payload"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"profile_id\": \"12345\",\r\n  \"name\": \"Cisco Umbrella Config\",\r\n  \"AppBundleIdentifier\": \"com.cisco.security\",\r\n  \"ProviderBundleIdentifier\": \"com.cisco.umbrella\",\r\n  \"ProviderConfiguration\": [\r\n    {\r\n      \"key\": \"internalDomains\",\r\n      \"type\": \"manual_list\",\r\n      \"value\": [\r\n        \"meraki.com\",\r\n        \"cisco.com\"\r\n      ]\r\n    },\r\n    {\r\n      \"key\": \"user_id\",\r\n      \"type\": \"manual_string\",\r\n      \"value\": \"miles\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSmProfileUmbrella",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profile",
								"umbrella",
								":profileId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "profileId",
									"value": "{{profileId}}"
								}
							]
						},
						"description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profile/umbrella/:profileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profile",
										"umbrella",
										":profileId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "profileId",
											"value": "{{profileId}}"
										}
									]
								},
								"description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true,\r\n  \"payload_deleted\": true,\r\n  \"profile_deleted\": true\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"profiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List all the profiles in the network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"profiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List all the profiles in the network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"profiles\": [\r\n    {\r\n      \"id\": \"1234\",\r\n      \"payload_display_name\": \"API Profile\",\r\n      \"payload_identifier\": \"com.meraki.sm.1\",\r\n      \"payload_description\": \"API docs test\",\r\n      \"scope\": \"some\",\r\n      \"tags\": [\r\n        \"tag1\",\r\n        \"tag2\"\r\n      ],\r\n      \"wifis\": [],\r\n      \"payload_types\": [\r\n        \"Privacy\",\r\n        \"Document\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmUserDeviceProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/user/:userId/deviceProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"user",
								":userId",
								"deviceProfiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						},
						"description": "Get the profiles associated with a user"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/user/:userId/deviceProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"user",
										":userId",
										"deviceProfiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								},
								"description": "Get the profiles associated with a user"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"deviceId\": \"1234\",\r\n  \"id\": \"1284392014819\",\r\n  \"isEncrypted\": true,\r\n  \"isManaged\": true,\r\n  \"profileData\": {},\r\n  \"profileIdentifier\": \"com.test.app\",\r\n  \"name\": \"My profile\",\r\n  \"version\": \"0.0.1\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmUserSoftwares",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/user/:userId/softwares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"user",
								":userId",
								"softwares"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						},
						"description": "Get a list of softwares associated with a user"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/user/:userId/softwares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"user",
										":userId",
										"softwares"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								},
								"description": "Get a list of softwares associated with a user"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"appId\": \"1234\",\r\n    \"bundleSize\": null,\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"deviceId\": \"1234\",\r\n    \"dynamicSize\": null,\r\n    \"id\": \"1284392014819\",\r\n    \"identifier\": \"com.test.app\",\r\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"toInstall\": null,\r\n    \"iosRedemptionCode\": null,\r\n    \"isManaged\": true,\r\n    \"itunesId\": null,\r\n    \"licenseKey\": null,\r\n    \"name\": \"My app\",\r\n    \"path\": \"/Path/to/app.app\",\r\n    \"redemptionCode\": null,\r\n    \"shortVersion\": null,\r\n    \"status\": null,\r\n    \"toUninstall\": false,\r\n    \"uninstalledAt\": null,\r\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"vendor\": \"Apple\",\r\n    \"version\": \"0.1\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmUsers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/users?ids={{ids}}&usernames={{usernames}}&emails={{emails}}&scope={{scope}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								"users"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{ids}}",
									"description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
								},
								{
									"key": "usernames",
									"value": "{{usernames}}",
									"description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
								},
								{
									"key": "emails",
									"value": "{{emails}}",
									"description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
								},
								{
									"key": "scope",
									"value": "{{scope}}",
									"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the owners in an SM network with various specified fields and filters"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/users?ids={{ids}}&usernames={{usernames}}&emails={{emails}}&scope={{scope}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										"users"
									],
									"query": [
										{
											"key": "ids",
											"value": "{{ids}}",
											"description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
										},
										{
											"key": "usernames",
											"value": "{{usernames}}",
											"description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
										},
										{
											"key": "emails",
											"value": "{{emails}}",
											"description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
										},
										{
											"key": "scope",
											"value": "{{scope}}",
											"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the owners in an SM network with various specified fields and filters"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"fullName\": \"Miles Meraki\",\r\n  \"username\": \"\",\r\n  \"hasPassword\": false,\r\n  \"tags\": [\r\n    \"tag1\",\r\n    \"tag2\"\r\n  ],\r\n  \"adGroups\": [],\r\n  \"asmGroups\": [],\r\n  \"isExternal\": false,\r\n  \"displayName\": \"Miles Meraki <miles@meraki.com>\",\r\n  \"hasIdentityCertificate\": false,\r\n  \"userThumbnail\": \"https://s3.amazonaws.com/image.extension\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmCellularUsageHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/cellularUsageHistory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"cellularUsageHistory"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "Return the client's daily cellular data usage history. Usage data is in kilobytes."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/cellularUsageHistory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"cellularUsageHistory"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "Return the client's daily cellular data usage history. Usage data is in kilobytes."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"sent\": 138.0,\r\n  \"recv\": 61.0,\r\n  \"ts\": 1526087474\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmCerts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/certs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"certs"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "List the certs on a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/certs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"certs"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "List the certs on a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"My Cert\",\r\n    \"notValidAfter\": \"May 12, 2018\",\r\n    \"notValidBefore\": \"Feb 11, 2018\",\r\n    \"certPem\": \"-----BEGIN CERTIFICATE-----\\n-----END CERTIFICATE-----\\n\",\r\n    \"deviceId\": \"1234\",\r\n    \"issuer\": \"\",\r\n    \"subject\": \"\",\r\n    \"id\": \"15\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmDeviceProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/deviceProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"deviceProfiles"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "Get the profiles associated with a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/deviceProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"deviceProfiles"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "Get the profiles associated with a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"deviceId\": \"1234\",\r\n  \"id\": \"1284392014819\",\r\n  \"isEncrypted\": true,\r\n  \"isManaged\": true,\r\n  \"profileData\": {},\r\n  \"profileIdentifier\": \"com.test.app\",\r\n  \"name\": \"My profile\",\r\n  \"version\": \"0.0.1\"\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmNetworkAdapters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/networkAdapters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"networkAdapters"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "List the network adapters of a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/networkAdapters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"networkAdapters"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "List the network adapters of a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"dhcpServer\": \"123.123.123.1\",\r\n    \"dnsServer\": \"8.8.8.8, 8.8.4.4\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"id\": \"1284392014819\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"name\": \"en0\",\r\n    \"subnet\": \"255.255.255.0\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmRestrictions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"restrictions"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "List the restrictions on a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"restrictions"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "List the restrictions on a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"profile\": \"com.meraki.sm.1\",\r\n    \"restrictions\": {\r\n      \"myRestriction\": {\r\n        \"value\": true\r\n      }\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmSecurityCenters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/securityCenters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"securityCenters"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "List the security centers on a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/securityCenters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"securityCenters"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "List the security centers on a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"isRooted\": true,\r\n    \"hasAntiVirus\": true,\r\n    \"antiVirusName\": \"meraki_av\",\r\n    \"isFireWallEnabled\": true,\r\n    \"hasFireWallInstalled\": true,\r\n    \"fireWallName\": \"meraki_fw\",\r\n    \"isDiskEncrypted\": true,\r\n    \"isAutoLoginDisabled\": true,\r\n    \"id\": \"1284392014819\",\r\n    \"runningProcs\": \"/software,/software_2\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmSoftwares",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/softwares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"softwares"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "Get a list of softwares associated with a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/softwares",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"softwares"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "Get a list of softwares associated with a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"appId\": \"1234\",\r\n    \"bundleSize\": null,\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"deviceId\": \"1234\",\r\n    \"dynamicSize\": null,\r\n    \"id\": \"1284392014819\",\r\n    \"identifier\": \"com.test.app\",\r\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"toInstall\": null,\r\n    \"iosRedemptionCode\": null,\r\n    \"isManaged\": true,\r\n    \"itunesId\": null,\r\n    \"licenseKey\": null,\r\n    \"name\": \"My app\",\r\n    \"path\": \"/Path/to/app.app\",\r\n    \"redemptionCode\": null,\r\n    \"shortVersion\": null,\r\n    \"status\": null,\r\n    \"toUninstall\": false,\r\n    \"uninstalledAt\": null,\r\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"vendor\": \"Apple\",\r\n    \"version\": \"0.1\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmWlanLists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/wlanLists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"sm",
								":deviceId",
								"wlanLists"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								}
							]
						},
						"description": "List the saved SSID names on a device"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/sm/:deviceId/wlanLists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"sm",
										":deviceId",
										"wlanLists"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									]
								},
								"description": "List the saved SSID names on a device"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"id\": \"1284392014819\",\r\n    \"xml\": \"Preferred networks on en0:\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "lockNetworkSmDevices",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:network_id/sm/devices/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":network_id",
								"sm",
								"devices",
								"lock"
							],
							"variable": [
								{
									"key": "network_id",
									"value": "{{network_id}}"
								}
							]
						},
						"description": "Lock a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be locked.\nids| string| The ids of the devices to be locked.\nserials| string| The serials of the devices to be locked.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.\npin| integer| The pin number for locking macOS devices (a six digit number). Required only for macOS devices.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": \"\\\"1284392014819\\\"\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:network_id/sm/devices/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":network_id",
										"sm",
										"devices",
										"lock"
									],
									"variable": [
										{
											"key": "network_id",
											"value": "{{network_id}}"
										}
									]
								},
								"description": "Lock a set of devices\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nwifiMacs| string| The wifiMacs of the devices to be locked.\nids| string| The ids of the devices to be locked.\nserials| string| The serials of the devices to be locked.\nscope| string| The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.\npin| integer| The pin number for locking macOS devices (a six digit number). Required only for macOS devices.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"success\": true\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmConnectivity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:network_id/sm/:id/connectivity?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":network_id",
								"sm",
								":id",
								"connectivity"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned"
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "network_id",
									"value": "{{network_id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard)."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:network_id/sm/:id/connectivity?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":network_id",
										"sm",
										":id",
										"connectivity"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned"
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "network_id",
											"value": "{{network_id}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard)."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"firstSeenAt\": 1518365681.0,\r\n  \"lastSeenAt\": 1526087474.0\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmDesktopLogs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:network_id/sm/:id/desktopLogs?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":network_id",
								"sm",
								":id",
								"desktopLogs"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned"
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "network_id",
									"value": "{{network_id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return historical records of various Systems Manager network connection details for desktop devices."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:network_id/sm/:id/desktopLogs?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":network_id",
										"sm",
										":id",
										"desktopLogs"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned"
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "network_id",
											"value": "{{network_id}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Return historical records of various Systems Manager network connection details for desktop devices."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"measuredAt\": 1526087474.0,\r\n    \"user\": \"milesmeraki\",\r\n    \"networkDevice\": \"NIC\",\r\n    \"networkDriver\": \"Driver\",\r\n    \"wifiChannel\": \"11\",\r\n    \"wifiAuth\": \"wpa-psk\",\r\n    \"wifiBssid\": \"00:11:22:33:44:55\",\r\n    \"wifiSsid\": \"ssid\",\r\n    \"wifiRssi\": \"-11\",\r\n    \"wifiNoise\": \"-99\",\r\n    \"dhcpServer\": \"1.2.3.4\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"networkMTU\": \"1500\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIP\": \"123.123.123.1\",\r\n    \"dnsServer\": \"8\",\r\n    \"ts\": 1526087474.0\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSmDeviceCommandLogs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:network_id/sm/:id/deviceCommandLogs?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":network_id",
								"sm",
								":id",
								"deviceCommandLogs"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned"
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "network_id",
									"value": "{{network_id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:network_id/sm/:id/deviceCommandLogs?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":network_id",
										"sm",
										":id",
										"deviceCommandLogs"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned"
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "network_id",
											"value": "{{network_id}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"action\": \"UpdateProfile\",\r\n  \"name\": \"My profile\",\r\n  \"details\": \"{}\",\r\n  \"dashboardUser\": \"Miles Meraki\",\r\n  \"ts\": 1526087474.0\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSmPerformanceHistory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:network_id/sm/:id/performanceHistory?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":network_id",
								"sm",
								":id",
								"performanceHistory"
							],
							"query": [
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned"
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "network_id",
									"value": "{{network_id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return historical records of various Systems Manager client metrics for desktop devices."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:network_id/sm/:id/performanceHistory?perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":network_id",
										"sm",
										":id",
										"performanceHistory"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned"
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "network_id",
											"value": "{{network_id}}"
										},
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Return historical records of various Systems Manager client metrics for desktop devices."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"cpuPercentUsed\": 0.95,\r\n    \"memFree\": 1024,\r\n    \"memWired\": 4096,\r\n    \"memActive\": 1024,\r\n    \"memInactive\": 2048,\r\n    \"networkSent\": 512,\r\n    \"networkReceived\": 512,\r\n    \"swapUsed\": 768,\r\n    \"diskUsage\": {\r\n      \"c\": {\r\n        \"used\": 2048,\r\n        \"space\": 9096\r\n      }\r\n    },\r\n    \"ts\": 1526087474.0\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SNMP settings",
			"item": [
				{
					"name": "getNetworkSnmpSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/snmpSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"snmpSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the SNMP settings for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/snmpSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"snmpSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the SNMP settings for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSnmpSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/snmpSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"snmpSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the SNMP settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \naccess| string| The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).\ncommunityString| string| The SNMP community string. Only relevant if 'access' is set to 'community'.\nusers| array| The list of SNMP users. Only relevant if 'access' is set to 'users'.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/snmpSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"snmpSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the SNMP settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \naccess| string| The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).\ncommunityString| string| The SNMP community string. Only relevant if 'access' is set to 'community'.\nusers| array| The list of SNMP users. Only relevant if 'access' is set to 'users'.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getOrganizationSnmp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"snmp"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the SNMP settings for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"snmp"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the SNMP settings for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\",\r\n  \"hostname\": \"n1.meraki.com\",\r\n  \"port\": 443\r\n}"
						}
					]
				},
				{
					"name": "updateOrganizationSnmp",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"snmp"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Update the SNMP settings for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nv2cEnabled| boolean| Boolean indicating whether SNMP version 2c is enabled for the organization.\nv3Enabled| boolean| Boolean indicating whether SNMP version 3 is enabled for the organization.\nv3AuthMode| string| The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.\nv3AuthPass| string| The SNMP version 3 authentication password. Must be at least 8 characters if specified.\nv3PrivMode| string| The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.\nv3PrivPass| string| The SNMP version 3 privacy password. Must be at least 8 characters if specified.\npeerIps| string| The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"snmp"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Update the SNMP settings for an organization\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nv2cEnabled| boolean| Boolean indicating whether SNMP version 2c is enabled for the organization.\nv3Enabled| boolean| Boolean indicating whether SNMP version 3 is enabled for the organization.\nv3AuthMode| string| The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.\nv3AuthPass| string| The SNMP version 3 authentication password. Must be at least 8 characters if specified.\nv3PrivMode| string| The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.\nv3PrivPass| string| The SNMP version 3 privacy password. Must be at least 8 characters if specified.\npeerIps| string| The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\",\r\n  \"hostname\": \"n1.meraki.com\",\r\n  \"port\": 443\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SSIDs",
			"item": [
				{
					"name": "getNetworkDeviceWirelessStatus",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"wireless",
								"status"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the SSID statuses of an access point"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/wireless/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"wireless",
										"status"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the SSID statuses of an access point"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"basicServiceSets\": [\r\n    {\r\n      \"ssidName\": \"My SSID\",\r\n      \"ssidNumber\": 0,\r\n      \"enabled\": true,\r\n      \"band\": \"2.4 GHz\",\r\n      \"bssid\": \"8A:15:04:00:00:00\",\r\n      \"channel\": 11,\r\n      \"channelWidth\": \"20 MHz\",\r\n      \"power\": \"18 dBm\",\r\n      \"visible\": true,\r\n      \"broadcasting\": true\r\n    },\r\n    {\r\n      \"ssidName\": \"My SSID\",\r\n      \"ssidNumber\": 0,\r\n      \"enabled\": true,\r\n      \"band\": \"5 GHz\",\r\n      \"bssid\": \"8A:15:14:00:00:00\",\r\n      \"channel\": 149,\r\n      \"channelWidth\": \"80 MHz\",\r\n      \"power\": \"18 dBm\",\r\n      \"visible\": true,\r\n      \"broadcasting\": true\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSsids",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"number\": 0,\r\n    \"name\": \"My SSID\",\r\n    \"enabled\": true,\r\n    \"splashPage\": \"Click-through splash page\",\r\n    \"ssidAdminAccessible\": false,\r\n    \"authMode\": \"8021x-radius\",\r\n    \"encryptionMode\": \"wpa-eap\",\r\n    \"wpaEncryptionMode\": \"WPA2 only\",\r\n    \"radiusServers\": [\r\n      {\r\n        \"host\": \"0.0.0.0\",\r\n        \"port\": 3000\r\n      }\r\n    ],\r\n    \"radiusAccountingEnabled\": false,\r\n    \"radiusEnabled\": true,\r\n    \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\r\n    \"radiusFailoverPolicy\": \"null\",\r\n    \"radiusLoadBalancingPolicy\": \"null\",\r\n    \"ipAssignmentMode\": \"NAT mode\",\r\n    \"adminSplashUrl\": \"http://example.com\",\r\n    \"splashTimeout\": \"30 minutes\",\r\n    \"walledGardenEnabled\": true,\r\n    \"walledGardenRanges\": \"example.com\",\r\n    \"minBitrate\": 11,\r\n    \"bandSelection\": \"5 GHz band only\",\r\n    \"perClientBandwidthLimitUp\": 0,\r\n    \"perClientBandwidthLimitDown\": 0\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSsid",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Return a single SSID"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Return a single SSID"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"8021x-radius\",\r\n  \"encryptionMode\": \"wpa-eap\",\r\n  \"wpaEncryptionMode\": \"WPA2 only\",\r\n  \"radiusServers\": [\r\n    {\r\n      \"host\": \"0.0.0.0\",\r\n      \"port\": 3000\r\n    }\r\n  ],\r\n  \"radiusAccountingEnabled\": false,\r\n  \"radiusEnabled\": true,\r\n  \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\r\n  \"radiusFailoverPolicy\": \"null\",\r\n  \"radiusLoadBalancingPolicy\": \"null\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"adminSplashUrl\": \"http://example.com\",\r\n  \"splashTimeout\": \"30 minutes\",\r\n  \"walledGardenEnabled\": true,\r\n  \"walledGardenRanges\": \"example.com\",\r\n  \"minBitrate\": 11,\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSsid",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Update the attributes of an SSID\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the SSID\nenabled| boolean| Whether or not the SSID is enabled\nauthMode| string| The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')\nenterpriseAdminAccess| string| Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')\nencryptionMode| string| The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'\npsk| string| The passkey for the SSID. This param is only valid if the authMode is 'psk'\nwpaEncryptionMode| string| The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')\nsplashPage| string| The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.\nradiusServers| array| The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nradiusCoaEnabled| boolean| If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.\nradiusFailoverPolicy| string| This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')\nradiusLoadBalancingPolicy| string| This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')\nradiusAccountingEnabled| boolean| Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nradiusAccountingServers| array| The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'\nradiusAttributeForGroupPolicies| string| Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message\nipAssignmentMode| string| The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')\nuseVlanTagging| boolean| Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\nconcentratorNetworkId| string| The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.\nvlanId| integer| The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'\ndefaultVlanId| integer| The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\napTagsAndVlanIds| array| The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\nwalledGardenEnabled| boolean| Allow access to a configurable list of IP ranges, which users may access prior to sign-on.\nwalledGardenRanges| string| Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.\nradiusOverride| boolean| If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.\nminBitrate| number| The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')\nbandSelection| string| The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')\nperClientBandwidthLimitUp| integer| The upload bandwidth limit in Kbps. (0 represents no limit.)\nperClientBandwidthLimitDown| integer| The download bandwidth limit in Kbps. (0 represents no limit.)\nlanIsolationEnabled| boolean| Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Update the attributes of an SSID\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the SSID\nenabled| boolean| Whether or not the SSID is enabled\nauthMode| string| The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')\nenterpriseAdminAccess| string| Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')\nencryptionMode| string| The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'\npsk| string| The passkey for the SSID. This param is only valid if the authMode is 'psk'\nwpaEncryptionMode| string| The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')\nsplashPage| string| The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.\nradiusServers| array| The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nradiusCoaEnabled| boolean| If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.\nradiusFailoverPolicy| string| This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')\nradiusLoadBalancingPolicy| string| This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')\nradiusAccountingEnabled| boolean| Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nradiusAccountingServers| array| The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'\nradiusAttributeForGroupPolicies| string| Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message\nipAssignmentMode| string| The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')\nuseVlanTagging| boolean| Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\nconcentratorNetworkId| string| The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.\nvlanId| integer| The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'\ndefaultVlanId| integer| The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\napTagsAndVlanIds| array| The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'\nwalledGardenEnabled| boolean| Allow access to a configurable list of IP ranges, which users may access prior to sign-on.\nwalledGardenRanges| string| Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.\nradiusOverride| boolean| If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.\nminBitrate| number| The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')\nbandSelection| string| The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')\nperClientBandwidthLimitUp| integer| The upload bandwidth limit in Kbps. (0 represents no limit.)\nperClientBandwidthLimitDown| integer| The download bandwidth limit in Kbps. (0 represents no limit.)\nlanIsolationEnabled| boolean| Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"8021x-radius\",\r\n  \"encryptionMode\": \"wpa-eap\",\r\n  \"wpaEncryptionMode\": \"WPA2 only\",\r\n  \"radiusServers\": [\r\n    {\r\n      \"host\": \"0.0.0.0\",\r\n      \"port\": 3000\r\n    }\r\n  ],\r\n  \"radiusAccountingEnabled\": false,\r\n  \"radiusEnabled\": true,\r\n  \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\r\n  \"radiusFailoverPolicy\": \"null\",\r\n  \"radiusLoadBalancingPolicy\": \"null\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"adminSplashUrl\": \"http://example.com\",\r\n  \"splashTimeout\": \"30 minutes\",\r\n  \"walledGardenEnabled\": true,\r\n  \"walledGardenRanges\": \"example.com\",\r\n  \"minBitrate\": 11,\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Security events",
			"item": [
				{
					"name": "getNetworkClientSecurityEvents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"securityEvents"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"securityEvents"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkSecurityEvents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"securityEvents"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the security events for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"securityEvents"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the security events for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getOrganizationSecurityEvents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"securityEvents"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "List the security events for an organization"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/securityEvents?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"securityEvents"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "List the security events for an organization"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Splash login attempts",
			"item": [
				{
					"name": "getNetworkSplashLoginAttempts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/splashLoginAttempts?ssidNumber={{ssidNumber}}&loginIdentifier={{loginIdentifier}}&timespan={{timespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"splashLoginAttempts"
							],
							"query": [
								{
									"key": "ssidNumber",
									"value": "{{ssidNumber}}",
									"description": "Only return the login attempts for the specified SSID"
								},
								{
									"key": "loginIdentifier",
									"value": "{{loginIdentifier}}",
									"description": "The username, email, or phone number used during login"
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the splash login attempts for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/splashLoginAttempts?ssidNumber={{ssidNumber}}&loginIdentifier={{loginIdentifier}}&timespan={{timespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"splashLoginAttempts"
									],
									"query": [
										{
											"key": "ssidNumber",
											"value": "{{ssidNumber}}",
											"description": "Only return the login attempts for the specified SSID"
										},
										{
											"key": "loginIdentifier",
											"value": "{{loginIdentifier}}",
											"description": "The username, email, or phone number used during login"
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the splash login attempts for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"name\": \"Miles Meraki\",\r\n    \"login\": \"miles@meraki.com\",\r\n    \"ssid\": \"My SSID\",\r\n    \"loginAt\": 1518365681,\r\n    \"gatewayDeviceMac\": \"00:11:22:33:44:55\",\r\n    \"clientMac\": \"22:33:44:55:66:77\",\r\n    \"clientId\": \"k74272e\",\r\n    \"authorization\": \"success\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Splash settings",
			"item": [
				{
					"name": "getNetworkSsidSplashSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/splashSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"splashSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Display the splash page settings for the given SSID"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/splashSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"splashSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Display the splash page settings for the given SSID"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSsidSplashSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/splashSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"splashSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Modify the splash page settings for the given SSID\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nsplashUrl| string| [optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'\nuseSplashUrl| boolean| [optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/splashSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"splashSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Modify the splash page settings for the given SSID\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nsplashUrl| string| [optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'\nuseSplashUrl| boolean| [optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch ACLs",
			"item": [
				{
					"name": "getNetworkSwitchAccessControlLists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"accessControlLists"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the access control lists for a MS network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"accessControlLists"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the access control lists for a MS network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Deny SSH\",\r\n      \"policy\": \"deny\",\r\n      \"ipVersion\": \"ipv4\",\r\n      \"protocol\": \"tcp\",\r\n      \"srcCidr\": \"10.1.10.0/24\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"172.16.30/24\",\r\n      \"dstPort\": 22,\r\n      \"vlan\": 10\r\n    },\r\n    {\r\n      \"comment\": \"Default rule\",\r\n      \"policy\": \"allow\",\r\n      \"ipVersion\": \"any\",\r\n      \"protocol\": \"any\",\r\n      \"srcCidr\": \"any\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"any\",\r\n      \"dstPort\": \"any\",\r\n      \"vlan\": \"any\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchAccessControlLists",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Deny SSH\",\r\n      \"policy\": \"deny\",\r\n      \"ipVersion\": \"ipv4\",\r\n      \"protocol\": \"tcp\",\r\n      \"srcCidr\": \"10.1.10.0/24\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"172.16.30/24\",\r\n      \"dstPort\": \"22\",\r\n      \"vlan\": \"10\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"accessControlLists"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the access control lists for a MS network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Deny SSH\",\r\n      \"policy\": \"deny\",\r\n      \"ipVersion\": \"ipv4\",\r\n      \"protocol\": \"tcp\",\r\n      \"srcCidr\": \"10.1.10.0/24\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"172.16.30/24\",\r\n      \"dstPort\": \"22\",\r\n      \"vlan\": \"10\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"accessControlLists"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the access control lists for a MS network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrules| array| An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rules\": [\r\n    {\r\n      \"comment\": \"Deny SSH\",\r\n      \"policy\": \"deny\",\r\n      \"ipVersion\": \"ipv4\",\r\n      \"protocol\": \"tcp\",\r\n      \"srcCidr\": \"10.1.10.0/24\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"172.16.30/24\",\r\n      \"dstPort\": 22,\r\n      \"vlan\": 10\r\n    },\r\n    {\r\n      \"comment\": \"Default rule\",\r\n      \"policy\": \"allow\",\r\n      \"ipVersion\": \"any\",\r\n      \"protocol\": \"any\",\r\n      \"srcCidr\": \"any\",\r\n      \"srcPort\": \"any\",\r\n      \"dstCidr\": \"any\",\r\n      \"dstPort\": \"any\",\r\n      \"vlan\": \"any\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch port schedules",
			"item": [
				{
					"name": "getNetworkSwitchPortSchedules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"portSchedules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List switch port schedules"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"portSchedules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List switch port schedules"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Weekdays schedule\",\r\n    \"portSchedule\": {\r\n      \"monday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"tuesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"wednesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"thursday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"friday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"saturday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      },\r\n      \"sunday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      }\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkSwitchPortSchedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"portSchedules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add a switch port schedule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your port schedule. Required\nportSchedule| object|     The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"portSchedules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add a switch port schedule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your port schedule. Required\nportSchedule| object|     The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSwitchPortSchedule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"portSchedules",
								":portScheduleId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "portScheduleId",
									"value": "{{portScheduleId}}"
								}
							]
						},
						"description": "Delete a switch port schedule"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"portSchedules",
										":portScheduleId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "portScheduleId",
											"value": "{{portScheduleId}}"
										}
									]
								},
								"description": "Delete a switch port schedule"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "updateNetworkSwitchPortSchedule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"portSchedules",
								":portScheduleId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "portScheduleId",
									"value": "{{portScheduleId}}"
								}
							]
						},
						"description": "Update a switch port schedule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your port schedule.\nportSchedule| object|     The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"portSchedules",
										":portScheduleId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "portScheduleId",
											"value": "{{portScheduleId}}"
										}
									]
								},
								"description": "Update a switch port schedule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name for your port schedule.\nportSchedule| object|     The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"Weekdays schedule\",\r\n  \"portSchedule\": {\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch ports",
			"item": [
				{
					"name": "getDeviceSwitchPortStatuses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/switchPortStatuses?t0={{t0}}&timespan={{timespan}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"switchPortStatuses"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
								}
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Return the status for all the ports of a switch"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/switchPortStatuses?t0={{t0}}&timespan={{timespan}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"switchPortStatuses"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
										}
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Return the status for all the ports of a switch"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"portId\": \"1\",\r\n    \"enabled\": true,\r\n    \"status\": \"Connected\",\r\n    \"errors\": [\r\n      \"PoE overload\",\r\n      \"Very high proportion of CRC errors\"\r\n    ],\r\n    \"warnings\": [\r\n      \"PoE port was denied power\",\r\n      \"High proportion of CRC errors\"\r\n    ],\r\n    \"speed\": \"10 Gbps\",\r\n    \"duplex\": \"full\",\r\n    \"usageInKb\": {\r\n      \"total\": 40867,\r\n      \"sent\": 23008,\r\n      \"recv\": 17859\r\n    },\r\n    \"cdp\": {\r\n      \"systemName\": \"\",\r\n      \"platform\": \"MS350-24X\",\r\n      \"deviceId\": \"0c8ddbddee:ff\",\r\n      \"portId\": \"Port 20\",\r\n      \"nativeVlan\": 1,\r\n      \"address\": \"10.0,0.1\",\r\n      \"managementAddress\": \"10.0.0.100\",\r\n      \"version\": \"1\",\r\n      \"vtpManagementDomain\": \"\",\r\n      \"capabilities\": \"Switch\"\r\n    },\r\n    \"lldp\": {\r\n      \"systemName\": \"MS350-24X - Test\",\r\n      \"systemDescription\": \"MS350-24X Cloud Managed PoE Switch\",\r\n      \"portId\": \"20\",\r\n      \"portDescription\": \"Port 20\",\r\n      \"chassisId\": \"0c:8d:db:dd:ee:ff\",\r\n      \"managementVlan\": 1,\r\n      \"portVlan\": 1,\r\n      \"managementAddress\": \"10.0.0.100\",\r\n      \"systemCapabilities\": \"switch\"\r\n    },\r\n    \"clientCount\": 10\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getDeviceSwitchPorts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/switchPorts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"switchPorts"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "List the switch ports for a switch"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/switchPorts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"switchPorts"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "List the switch ports for a switch"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My switch port\",\r\n    \"tags\": \"tag1 tag2\",\r\n    \"enabled\": true,\r\n    \"poeEnabled\": true,\r\n    \"type\": \"access\",\r\n    \"vlan\": 10,\r\n    \"voiceVlan\": 20,\r\n    \"isolationEnabled\": false,\r\n    \"rstpEnabled\": true,\r\n    \"stpGuard\": \"disabled\",\r\n    \"accessPolicyNumber\": \"1234\",\r\n    \"linkNegotiation\": \"Auto negotiate\",\r\n    \"portScheduleId\": \"1234\",\r\n    \"udld\": \"Alert only\",\r\n    \"macWhitelist\": [\r\n      \"34:56:fe:ce:8e:a0\",\r\n      \"34:56:fe:ce:8e:a1\"\r\n    ],\r\n    \"stickyMacWhitelist\": [\r\n      \"34:56:fe:ce:8e:b0\",\r\n      \"34:56:fe:ce:8e:b1\"\r\n    ],\r\n    \"stickyMacWhitelistLimit\": 5,\r\n    \"stormControlEnabled\": true\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getDeviceSwitchPort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/switchPorts/:number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"switchPorts",
								":number"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Return a switch port"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/switchPorts/:number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"switchPorts",
										":number"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Return a switch port"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\",\r\n  \"portScheduleId\": \"1234\",\r\n  \"udld\": \"Alert only\",\r\n  \"macWhitelist\": [\r\n    \"34:56:fe:ce:8e:a0\",\r\n    \"34:56:fe:ce:8e:a1\"\r\n  ],\r\n  \"stickyMacWhitelist\": [\r\n    \"34:56:fe:ce:8e:b0\",\r\n    \"34:56:fe:ce:8e:b1\"\r\n  ],\r\n  \"stickyMacWhitelistLimit\": 5,\r\n  \"stormControlEnabled\": true\r\n}"
						}
					]
				},
				{
					"name": "updateDeviceSwitchPort",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\",\r\n  \"portScheduleId\": \"1234\",\r\n  \"udld\": \"Alert only\",\r\n  \"macWhitelist\": [\r\n    \"34:56:fe:ce:8e:a0\",\r\n    \"34:56:fe:ce:8e:a1\"\r\n  ],\r\n  \"stickyMacWhitelist\": [\r\n    \"34:56:fe:ce:8e:b0\",\r\n    \"34:56:fe:ce:8e:b1\"\r\n  ],\r\n  \"stickyMacWhitelistLimit\": 5,\r\n  \"stormControlEnabled\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:serial/switchPorts/:number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":serial",
								"switchPorts",
								":number"
							],
							"variable": [
								{
									"key": "serial",
									"value": "{{serial}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Update a switch port\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the switch port\ntags| string| The tags of the switch port\nenabled| boolean| The status of the switch port\ntype| string| The type of the switch port (\"access\" or \"trunk\")\nvlan| integer| The VLAN of the switch port. A null value will clear the value set for trunk ports.\nvoiceVlan| integer| The voice VLAN of the switch port. Only applicable to access ports.\nallowedVlans| string| The VLANs allowed on the switch port. Only applicable to trunk ports.\npoeEnabled| boolean| The PoE status of the switch port\nisolationEnabled| boolean| The isolation status of the switch port\nrstpEnabled| boolean| The rapid spanning tree protocol status\nstpGuard| string| The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")\naccessPolicyNumber| integer| The number of the access policy of the switch port. Only applicable to access ports.\nlinkNegotiation| string| The link speed for the switch port\nportScheduleId| string| The ID of the port schedule. A value of null will clear the port schedule.\nudld| string| The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.\nmacWhitelist| array| Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. To disable MAC whitelist, set accessPolicyNumber to null.\nstickyMacWhitelist| array| The initial list of MAC addresses for sticky Mac whitelist. To reset Sticky MAC whitelist, set accessPolicyNumber to null.\nstickyMacWhitelistLimit| integer| The maximum number of MAC addresses for sticky MAC whitelist.\nstormControlEnabled| boolean| The storm control status of the switch port\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\",\r\n  \"portScheduleId\": \"1234\",\r\n  \"udld\": \"Alert only\",\r\n  \"macWhitelist\": [\r\n    \"34:56:fe:ce:8e:a0\",\r\n    \"34:56:fe:ce:8e:a1\"\r\n  ],\r\n  \"stickyMacWhitelist\": [\r\n    \"34:56:fe:ce:8e:b0\",\r\n    \"34:56:fe:ce:8e:b1\"\r\n  ],\r\n  \"stickyMacWhitelistLimit\": 5,\r\n  \"stormControlEnabled\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/switchPorts/:number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"switchPorts",
										":number"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Update a switch port\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the switch port\ntags| string| The tags of the switch port\nenabled| boolean| The status of the switch port\ntype| string| The type of the switch port (\"access\" or \"trunk\")\nvlan| integer| The VLAN of the switch port. A null value will clear the value set for trunk ports.\nvoiceVlan| integer| The voice VLAN of the switch port. Only applicable to access ports.\nallowedVlans| string| The VLANs allowed on the switch port. Only applicable to trunk ports.\npoeEnabled| boolean| The PoE status of the switch port\nisolationEnabled| boolean| The isolation status of the switch port\nrstpEnabled| boolean| The rapid spanning tree protocol status\nstpGuard| string| The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")\naccessPolicyNumber| integer| The number of the access policy of the switch port. Only applicable to access ports.\nlinkNegotiation| string| The link speed for the switch port\nportScheduleId| string| The ID of the port schedule. A value of null will clear the port schedule.\nudld| string| The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.\nmacWhitelist| array| Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. To disable MAC whitelist, set accessPolicyNumber to null.\nstickyMacWhitelist| array| The initial list of MAC addresses for sticky Mac whitelist. To reset Sticky MAC whitelist, set accessPolicyNumber to null.\nstickyMacWhitelistLimit| integer| The maximum number of MAC addresses for sticky MAC whitelist.\nstormControlEnabled| boolean| The storm control status of the switch port\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\",\r\n  \"portScheduleId\": \"1234\",\r\n  \"udld\": \"Alert only\",\r\n  \"macWhitelist\": [\r\n    \"34:56:fe:ce:8e:a0\",\r\n    \"34:56:fe:ce:8e:a1\"\r\n  ],\r\n  \"stickyMacWhitelist\": [\r\n    \"34:56:fe:ce:8e:b0\",\r\n    \"34:56:fe:ce:8e:b1\"\r\n  ],\r\n  \"stickyMacWhitelistLimit\": 5,\r\n  \"stormControlEnabled\": true\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch profiles",
			"item": [
				{
					"name": "getOrganizationConfigTemplateSwitchProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switchProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"configTemplates",
								":configTemplateId",
								"switchProfiles"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								},
								{
									"key": "configTemplateId",
									"value": "{{configTemplateId}}"
								}
							]
						},
						"description": "List the switch profiles for your switch template configuration"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switchProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"configTemplates",
										":configTemplateId",
										"switchProfiles"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										},
										{
											"key": "configTemplateId",
											"value": "{{configTemplateId}}"
										}
									]
								},
								"description": "List the switch profiles for your switch template configuration"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"switchProfileId\": \"1234\",\r\n    \"name\": \"A Simple Switch Profile\",\r\n    \"model\": \"MS450-24\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch settings",
			"item": [
				{
					"name": "getNetworkSwitchSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the switch network settings"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the switch network settings"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"vlan\": 100,\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vlan\": 100,\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update switch network settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| Management VLAN\nuseCombinedPower| boolean| The use Combined Power as the default behavior of secondary power supplies on supported devices.\npowerExceptions| array| Exceptions on a per switch basis to \"useCombinedPower\"\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"vlan\": 100,\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update switch network settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| Management VLAN\nuseCombinedPower| boolean| The use Combined Power as the default behavior of secondary power supplies on supported devices.\npowerExceptions| array| Exceptions on a per switch basis to \"useCombinedPower\"\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"vlan\": 100,\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsDhcpServerPolicy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dhcpServerPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"dhcpServerPolicy"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the DHCP server policy"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dhcpServerPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"dhcpServerPolicy"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the DHCP server policy"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultPolicy\": \"block\",\r\n  \"allowedServers\": [\r\n    \"00:50:56:00:00:01\",\r\n    \"00:50:56:00:00:02\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsDhcpServerPolicy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultPolicy\": \"block\",\r\n  \"allowedServers\": [\r\n    \"00:50:56:00:00:01\",\r\n    \"00:50:56:00:00:02\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dhcpServerPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"dhcpServerPolicy"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the DHCP server policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultPolicy| string| 'allow' or 'block' new DHCP servers. Default value is 'allow'.\nallowedServers| array| List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries.\nblockedServers| array| List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"defaultPolicy\": \"block\",\r\n  \"allowedServers\": [\r\n    \"00:50:56:00:00:01\",\r\n    \"00:50:56:00:00:02\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dhcpServerPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"dhcpServerPolicy"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the DHCP server policy\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultPolicy| string| 'allow' or 'block' new DHCP servers. Default value is 'allow'.\nallowedServers| array| List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries.\nblockedServers| array| List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultPolicy\": \"block\",\r\n  \"allowedServers\": [\r\n    \"00:50:56:00:00:01\",\r\n    \"00:50:56:00:00:02\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsDscpToCosMappings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dscpToCosMappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"dscpToCosMappings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the DSCP to CoS mappings"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dscpToCosMappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"dscpToCosMappings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the DSCP to CoS mappings"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mappings\": [\r\n    {\r\n      \"dscp\": 1,\r\n      \"cos\": 1,\r\n      \"title\": \"Video\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsDscpToCosMappings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mappings\": [\r\n    {\r\n      \"dscp\": 1,\r\n      \"cos\": 1,\r\n      \"title\": \"Video\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dscpToCosMappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"dscpToCosMappings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the DSCP to CoS mappings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmappings| array| An array of DSCP to CoS mappings. An empty array will reset the mappings to default.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mappings\": [\r\n    {\r\n      \"dscp\": 1,\r\n      \"cos\": 1,\r\n      \"title\": \"Video\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/dscpToCosMappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"dscpToCosMappings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the DSCP to CoS mappings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmappings| array| An array of DSCP to CoS mappings. An empty array will reset the mappings to default.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mappings\": [\r\n    {\r\n      \"dscp\": 1,\r\n      \"cos\": 1,\r\n      \"title\": \"Video\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsMtu",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/mtu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"mtu"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the MTU configuration"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/mtu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"mtu"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the MTU configuration"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultMtuSize\": 9578,\r\n  \"overrides\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"mtuSize\": 1500\r\n    },\r\n    {\r\n      \"switchProfiles\": [\r\n        \"1284392014819\",\r\n        \"2983092129865\"\r\n      ],\r\n      \"mtuSize\": 1600\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsMtu",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultMtuSize\": 9578,\r\n  \"overrides\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"mtuSize\": 1500\r\n    },\r\n    {\r\n      \"switchProfiles\": [\r\n        \"1284392014819\",\r\n        \"2983092129865\"\r\n      ],\r\n      \"mtuSize\": 1600\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/mtu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"mtu"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the MTU configuration\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultMtuSize| integer| MTU size for the entire network. Default value is 9578.\noverrides| array| Override MTU size for individual switches or switch profiles. An empty array will clear overrides.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"defaultMtuSize\": 9578,\r\n  \"overrides\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"mtuSize\": 1500\r\n    },\r\n    {\r\n      \"switchProfiles\": [\r\n        \"1284392014819\",\r\n        \"2983092129865\"\r\n      ],\r\n      \"mtuSize\": 1600\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/mtu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"mtu"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the MTU configuration\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultMtuSize| integer| MTU size for the entire network. Default value is 9578.\noverrides| array| Override MTU size for individual switches or switch profiles. An empty array will clear overrides.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultMtuSize\": 9578,\r\n  \"overrides\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"mtuSize\": 1500\r\n    },\r\n    {\r\n      \"switchProfiles\": [\r\n        \"1284392014819\",\r\n        \"2983092129865\"\r\n      ],\r\n      \"mtuSize\": 1600\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsQosRules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List quality of service rules"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List quality of service rules"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1284392014819\",\r\n    \"vlan\": 100,\r\n    \"protocol\": \"TCP\",\r\n    \"srcPort\": 2000,\r\n    \"srcPortRange\": null,\r\n    \"dstPort\": null,\r\n    \"dstPortRange\": \"3000-3100\",\r\n    \"dscp\": 0\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkSwitchSettingsQosRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add a quality of service rule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.\nprotocol| string| The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"\nsrcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.\nsrcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.\ndstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndscp| integer| DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add a quality of service rule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.\nprotocol| string| The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"\nsrcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.\nsrcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.\ndstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndscp| integer| DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1284392014819\",\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsQosRulesOrder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules",
								"order"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the quality of service rule IDs by order in which they will be processed by the switch"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules",
										"order"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the quality of service rule IDs by order in which they will be processed by the switch"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ruleIds\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsQosRulesOrder",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ruleIds\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules",
								"order"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the order in which the rules should be processed by the switch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nruleIds| array| A list of quality of service rule IDs arranged in order in which they should be processed by the switch.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ruleIds\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules",
										"order"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the order in which the rules should be processed by the switch\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nruleIds| array| A list of quality of service rule IDs arranged in order in which they should be processed by the switch.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"ruleIds\": [\r\n    \"1284392014819\",\r\n    \"2983092129865\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsQosRule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules",
								":qosRuleId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qosRuleId",
									"value": "{{qosRuleId}}"
								}
							]
						},
						"description": "Return a quality of service rule"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules",
										":qosRuleId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qosRuleId",
											"value": "{{qosRuleId}}"
										}
									]
								},
								"description": "Return a quality of service rule"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1284392014819\",\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSwitchSettingsQosRule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules",
								":qosRuleId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qosRuleId",
									"value": "{{qosRuleId}}"
								}
							]
						},
						"description": "Delete a quality of service rule"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules",
										":qosRuleId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qosRuleId",
											"value": "{{qosRuleId}}"
										}
									]
								},
								"description": "Delete a quality of service rule"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsQosRule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"qosRules",
								":qosRuleId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "qosRuleId",
									"value": "{{qosRuleId}}"
								}
							]
						},
						"description": "Update a quality of service rule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.\nprotocol| string| The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\".\nsrcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.\nsrcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.\ndstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndscp| integer| DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/qosRules/:qosRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"qosRules",
										":qosRuleId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "qosRuleId",
											"value": "{{qosRuleId}}"
										}
									]
								},
								"description": "Update a quality of service rule\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nvlan| integer| The VLAN of the incoming packet. A null value will match any VLAN.\nprotocol| string| The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\".\nsrcPort| integer| The source port of the incoming packet. Applicable only if protocol is TCP or UDP.\nsrcPortRange| string| The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndstPort| integer| The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.\ndstPortRange| string| The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80\ndscp| integer| DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1284392014819\",\r\n  \"vlan\": 100,\r\n  \"protocol\": \"TCP\",\r\n  \"srcPort\": 2000,\r\n  \"srcPortRange\": null,\r\n  \"dstPort\": null,\r\n  \"dstPortRange\": \"3000-3100\",\r\n  \"dscp\": 0\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsStormControl",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stormControl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"stormControl"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the storm control configuration for a switch network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stormControl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"stormControl"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the storm control configuration for a switch network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"broadcastThreshold\": 30,\r\n  \"multicastThreshold\": 30,\r\n  \"unknownUnicastThreshold\": 30\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsStormControl",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"broadcastThreshold\": 30,\r\n  \"multicastThreshold\": 30,\r\n  \"unknownUnicastThreshold\": 30\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stormControl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"stormControl"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the storm control configuration for a switch network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbroadcastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration.\nmulticastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration.\nunknownUnicastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"broadcastThreshold\": 30,\r\n  \"multicastThreshold\": 30,\r\n  \"unknownUnicastThreshold\": 30\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stormControl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"stormControl"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the storm control configuration for a switch network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbroadcastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration.\nmulticastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration.\nunknownUnicastThreshold| integer| Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"broadcastThreshold\": 30,\r\n  \"multicastThreshold\": 30,\r\n  \"unknownUnicastThreshold\": 30\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchSettingsStp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"stp"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns STP settings"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"stp"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns STP settings"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rstpEnabled\": true,\r\n  \"stpBridgePriority\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"stpPriority\": 4096\r\n    },\r\n    {\r\n      \"stacks\": [\r\n        \"789102\",\r\n        \"123456\",\r\n        \"129102\"\r\n      ],\r\n      \"stpPriority\": 28672\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkSwitchSettingsStp",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rstpEnabled\": true,\r\n  \"stpBridgePriority\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"stpPriority\": 4096\r\n    },\r\n    {\r\n      \"stacks\": [\r\n        \"789102\",\r\n        \"123456\",\r\n        \"129102\"\r\n      ],\r\n      \"stpPriority\": 28672\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switch",
								"settings",
								"stp"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Updates STP settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrstpEnabled| boolean| The spanning tree protocol status in network\nstpBridgePriority| array| STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rstpEnabled\": true,\r\n  \"stpBridgePriority\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"stpPriority\": 4096\r\n    },\r\n    {\r\n      \"stacks\": [\r\n        \"789102\",\r\n        \"123456\",\r\n        \"129102\"\r\n      ],\r\n      \"stpPriority\": 28672\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switch/settings/stp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switch",
										"settings",
										"stp"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Updates STP settings\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nrstpEnabled| boolean| The spanning tree protocol status in network\nstpBridgePriority| array| STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"rstpEnabled\": true,\r\n  \"stpBridgePriority\": [\r\n    {\r\n      \"switches\": [\r\n        \"Q234-ABCD-0001\",\r\n        \"Q234-ABCD-0002\",\r\n        \"Q234-ABCD-0003\"\r\n      ],\r\n      \"stpPriority\": 4096\r\n    },\r\n    {\r\n      \"stacks\": [\r\n        \"789102\",\r\n        \"123456\",\r\n        \"129102\"\r\n      ],\r\n      \"stpPriority\": 28672\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Switch stacks",
			"item": [
				{
					"name": "getNetworkSwitchStacks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the switch stacks in a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the switch stacks in a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"8473\",\r\n    \"name\": \"A cool stack\",\r\n    \"serials\": [\r\n      \"QBZY-XWVU-TSRQ\",\r\n      \"QBAB-CDEF-GHIJ\"\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkSwitchStack",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Create a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new stack\nserials| array| An array of switch serials to be added into the new stack\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Create a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the new stack\nserials| array| An array of switch serials to be added into the new stack\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSwitchStack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks",
								":switchStackId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "switchStackId",
									"value": "{{switchStackId}}"
								}
							]
						},
						"description": "Show a switch stack"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks",
										":switchStackId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "switchStackId",
											"value": "{{switchStackId}}"
										}
									]
								},
								"description": "Show a switch stack"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkSwitchStack",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks",
								":switchStackId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "switchStackId",
									"value": "{{switchStackId}}"
								}
							]
						},
						"description": "Delete a stack"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks",
										":switchStackId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "switchStackId",
											"value": "{{switchStackId}}"
										}
									]
								},
								"description": "Delete a stack"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "addNetworkSwitchStack",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serial\": \"QBZY-XWVU-TSRQ\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks",
								":switchStackId",
								"add"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "switchStackId",
									"value": "{{switchStackId}}"
								}
							]
						},
						"description": "Add a switch to a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of the switch to be added\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"serial\": \"QBZY-XWVU-TSRQ\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks",
										":switchStackId",
										"add"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "switchStackId",
											"value": "{{switchStackId}}"
										}
									]
								},
								"description": "Add a switch to a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of the switch to be added\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "removeNetworkSwitchStack",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serial\": \"QBZY-XWVU-TSRQ\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"switchStacks",
								":switchStackId",
								"remove"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "switchStackId",
									"value": "{{switchStackId}}"
								}
							]
						},
						"description": "Remove a switch from a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of the switch to be removed\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"serial\": \"QBZY-XWVU-TSRQ\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/switchStacks/:switchStackId/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"switchStacks",
										":switchStackId",
										"remove"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "switchStackId",
											"value": "{{switchStackId}}"
										}
									]
								},
								"description": "Remove a switch from a stack\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nserial| string| The serial of the switch to be removed\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Syslog servers",
			"item": [
				{
					"name": "getNetworkSyslogServers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"syslogServers"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the syslog servers for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"syslogServers"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the syslog servers for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "updateNetworkSyslogServers",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"servers\": [\r\n    {\r\n      \"host\": \"1.2.3.4\",\r\n      \"port\": 443,\r\n      \"roles\": [\r\n        \"Wireless event log\",\r\n        \"URLs\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"syslogServers"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the syslog servers for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nservers| array| A list of the syslog servers for this network\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"servers\": [\r\n    {\r\n      \"host\": \"1.2.3.4\",\r\n      \"port\": 443,\r\n      \"roles\": [\r\n        \"Wireless event log\",\r\n        \"URLs\"\r\n      ]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"syslogServers"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the syslog servers for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nservers| array| A list of the syslog servers for this network\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Traffic analysis settings",
			"item": [
				{
					"name": "getNetworkTrafficAnalysisSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysisSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficAnalysisSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the traffic analysis settings for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysisSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficAnalysisSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the traffic analysis settings for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"detailed\",\r\n  \"customPieChartItems\": [\r\n    {\r\n      \"name\": \"Item from hostname\",\r\n      \"type\": \"host\",\r\n      \"value\": \"example.com\"\r\n    },\r\n    {\r\n      \"name\": \"Item from port\",\r\n      \"type\": \"port\",\r\n      \"value\": \"440\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.1.0.0\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range (CIDR)\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.2.0.0/16\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range with port\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.3.0.0/16:80\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkTrafficAnalysisSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mode\": \"detailed\",\r\n  \"customPieChartItems\": [\r\n    {\r\n      \"name\": \"Item from hostname\",\r\n      \"type\": \"host\",\r\n      \"value\": \"example.com\"\r\n    },\r\n    {\r\n      \"name\": \"Item from port\",\r\n      \"type\": \"port\",\r\n      \"value\": \"440\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.1.0.0\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range (CIDR)\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.2.0.0/16\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range with port\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.3.0.0/16:80\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysisSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficAnalysisSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the traffic analysis settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string|     The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),\n    'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).\n\ncustomPieChartItems| array| The list of items that make up the custom pie chart for traffic reporting.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mode\": \"detailed\",\r\n  \"customPieChartItems\": [\r\n    {\r\n      \"name\": \"Item from hostname\",\r\n      \"type\": \"host\",\r\n      \"value\": \"example.com\"\r\n    },\r\n    {\r\n      \"name\": \"Item from port\",\r\n      \"type\": \"port\",\r\n      \"value\": \"440\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.1.0.0\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range (CIDR)\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.2.0.0/16\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range with port\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.3.0.0/16:80\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysisSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficAnalysisSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the traffic analysis settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmode| string|     The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),\n    'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).\n\ncustomPieChartItems| array| The list of items that make up the custom pie chart for traffic reporting.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mode\": \"detailed\",\r\n  \"customPieChartItems\": [\r\n    {\r\n      \"name\": \"Item from hostname\",\r\n      \"type\": \"host\",\r\n      \"value\": \"example.com\"\r\n    },\r\n    {\r\n      \"name\": \"Item from port\",\r\n      \"type\": \"port\",\r\n      \"value\": \"440\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.1.0.0\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range (CIDR)\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.2.0.0/16\"\r\n    },\r\n    {\r\n      \"name\": \"Item from IP range with port\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"192.3.0.0/16:80\"\r\n    }\r\n  ]\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Traffic shaping",
			"item": [
				{
					"name": "updateNetworkSsidTrafficShaping",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/trafficShaping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"trafficShaping"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Update the traffic shaping settings for an SSID on an MR network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntrafficShapingEnabled| boolean| Whether traffic shaping rules are applied to clients on your SSID.\ndefaultRulesEnabled| boolean|     Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n\nrules| array|     An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/trafficShaping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"trafficShaping"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Update the traffic shaping settings for an SSID on an MR network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ntrafficShapingEnabled| boolean| Whether traffic shaping rules are applied to clients on your SSID.\ndefaultRulesEnabled| boolean|     Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n\nrules| array|     An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkSsidTrafficShaping",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/trafficShaping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"ssids",
								":number",
								"trafficShaping"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "number",
									"value": "{{number}}"
								}
							]
						},
						"description": "Display the traffic shaping settings for a SSID on an MR network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/ssids/:number/trafficShaping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"ssids",
										":number",
										"trafficShaping"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "number",
											"value": "{{number}}"
										}
									]
								},
								"description": "Display the traffic shaping settings for a SSID on an MR network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkTrafficShaping",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficShaping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficShaping"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the traffic shaping settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultRulesEnabled| boolean|     Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n\nrules| array|     An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficShaping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficShaping"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the traffic shaping settings for an MX network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ndefaultRulesEnabled| boolean|     Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n\nrules| array|     An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkTrafficShaping",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficShaping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficShaping"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Display the traffic shaping settings for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficShaping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficShaping"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Display the traffic shaping settings for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "getNetworkTrafficShapingApplicationCategories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/applicationCategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficShaping",
								"applicationCategories"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the application categories for traffic shaping rules."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/applicationCategories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficShaping",
										"applicationCategories"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the application categories for traffic shaping rules."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkTrafficShapingDscpTaggingOptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/dscpTaggingOptions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"trafficShaping",
								"dscpTaggingOptions"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the available DSCP tagging options for your traffic shaping rules."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/dscpTaggingOptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"trafficShaping",
										"dscpTaggingOptions"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the available DSCP tagging options for your traffic shaping rules."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"dscpTagValue\": 10,\r\n    \"description\": \"AF11 - High Throughput, Latency Insensitive, Low Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 12,\r\n    \"description\": \"AF12 - High Throughput, Latency Insensitive, Medium Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 14,\r\n    \"description\": \"AF13 - High Throughput, Latency Insensitive, High Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 18,\r\n    \"description\": \"AF21 - Low Latency Data, Low Drop\"\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Uplink settings",
			"item": [
				{
					"name": "getNetworkUplinkSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/uplinkSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"uplinkSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the uplink settings for your MX network."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/uplinkSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"uplinkSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the uplink settings for your MX network."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkUplinkSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/uplinkSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"uplinkSettings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Updates the uplink settings for your MX network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbandwidthLimits| object| A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/uplinkSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"uplinkSettings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Updates the uplink settings for your MX network.\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nbandwidthLimits| object| A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VLANs",
			"item": [
				{
					"name": "getNetworkVlans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlans"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List the VLANs for an MX network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlans"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List the VLANs for an MX network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My VLAN\",\r\n    \"applianceIp\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": {\r\n      \"22:33:44:55:66:77\": {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"name\": \"Some client name\"\r\n      }\r\n    },\r\n    \"reservedIpRanges\": [\r\n      {\r\n        \"start\": \"192.168.1.0\",\r\n        \"end\": \"192.168.1.1\",\r\n        \"comment\": \"A reserved IP range\"\r\n      }\r\n    ],\r\n    \"dnsNameservers\": \"google_dns\",\r\n    \"dhcpHandling\": \"Run a DHCP server\",\r\n    \"dhcpLeaseTime\": \"1 day\",\r\n    \"dhcpBootOptionsEnabled\": false,\r\n    \"dhcpBootNextServer\": null,\r\n    \"dhcpBootFilename\": null,\r\n    \"dhcpOptions\": [\r\n      {\r\n        \"code\": 5,\r\n        \"type\": \"text\",\r\n        \"value\": \"five\"\r\n      }\r\n    ]\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "createNetworkVlan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"1234\",\r\n  \"name\": \"My VLAN\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"applianceIp\": \"1.2.3.4\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlans"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Add a VLAN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nid| string| The VLAN ID of the new VLAN (must be between 1 and 4094)\nname| string| The name of the new VLAN\nsubnet| string| The subnet of the VLAN\napplianceIp| string| The local IP of the appliance on the VLAN\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"1234\",\r\n  \"name\": \"My VLAN\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"applianceIp\": \"1.2.3.4\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlans"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Add a VLAN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nid| string| The VLAN ID of the new VLAN (must be between 1 and 4094)\nname| string| The name of the new VLAN\nsubnet| string| The subnet of the VLAN\napplianceIp| string| The local IP of the appliance on the VLAN\n"
							},
							"status": "Successful operation",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {},\r\n  \"reservedIpRanges\": [],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": []\r\n}"
						}
					]
				},
				{
					"name": "getNetworkVlan",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlans",
								":vlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "vlanId",
									"value": "{{vlanId}}"
								}
							]
						},
						"description": "Return a VLAN"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlans",
										":vlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "vlanId",
											"value": "{{vlanId}}"
										}
									]
								},
								"description": "Return a VLAN"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkVlan",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlans",
								":vlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "vlanId",
									"value": "{{vlanId}}"
								}
							]
						},
						"description": "Update a VLAN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the VLAN\nsubnet| string| The subnet of the VLAN\napplianceIp| string| The local IP of the appliance on the VLAN\nvpnNatSubnet| string| The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN\ndhcpHandling| string| The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'\ndhcpRelayServerIps| array| The IPs of the DHCP servers that DHCP requests should be relayed to\ndhcpLeaseTime| string| The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'\ndhcpBootOptionsEnabled| boolean| Use DHCP boot options specified in other properties\ndhcpBootNextServer| string| DHCP boot option to direct boot clients to the server to load the boot file from\ndhcpBootFilename| string| DHCP boot option for boot filename\nfixedIpAssignments| object| The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.\nreservedIpRanges| array| The DHCP reserved IP ranges on the VLAN\ndnsNameservers| string| The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names\ndhcpOptions| array| The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlans",
										":vlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "vlanId",
											"value": "{{vlanId}}"
										}
									]
								},
								"description": "Update a VLAN\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nname| string| The name of the VLAN\nsubnet| string| The subnet of the VLAN\napplianceIp| string| The local IP of the appliance on the VLAN\nvpnNatSubnet| string| The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN\ndhcpHandling| string| The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'\ndhcpRelayServerIps| array| The IPs of the DHCP servers that DHCP requests should be relayed to\ndhcpLeaseTime| string| The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'\ndhcpBootOptionsEnabled| boolean| Use DHCP boot options specified in other properties\ndhcpBootNextServer| string| DHCP boot option to direct boot clients to the server to load the boot file from\ndhcpBootFilename| string| DHCP boot option for boot filename\nfixedIpAssignments| object| The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.\nreservedIpRanges| array| The DHCP reserved IP ranges on the VLAN\ndnsNameservers| string| The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names\ndhcpOptions| array| The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties.\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "deleteNetworkVlan",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlans",
								":vlanId"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "vlanId",
									"value": "{{vlanId}}"
								}
							]
						},
						"description": "Delete a VLAN from a network"
					},
					"response": [
						{
							"name": "Response_204",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlans/:vlanId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlans",
										":vlanId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "vlanId",
											"value": "{{vlanId}}"
										}
									]
								},
								"description": "Delete a VLAN from a network"
							},
							"status": "Successful operation",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getNetworkVlansEnabledState",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlansEnabledState",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlansEnabledState"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Returns the enabled status of VLANs for the network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlansEnabledState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlansEnabledState"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Returns the enabled status of VLANs for the network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkVlansEnabledState",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"enabled\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/vlansEnabledState",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"vlansEnabledState"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Enable/Disable VLANs for the given network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| Boolean indicating whether to enable (true) or disable (false) VLANs for the network\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"enabled\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/vlansEnabledState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"vlansEnabledState"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Enable/Disable VLANs for the given network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nenabled| boolean| Boolean indicating whether to enable (true) or disable (false) VLANs for the network\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Webhook logs",
			"item": [
				{
					"name": "getOrganizationWebhookLogs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/webhookLogs?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&url={{url}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"webhookLogs"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
								},
								{
									"key": "perPage",
									"value": "{{perPage}}",
									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
								},
								{
									"key": "startingAfter",
									"value": "{{startingAfter}}",
									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "endingBefore",
									"value": "{{endingBefore}}",
									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
								},
								{
									"key": "url",
									"value": "{{url}}",
									"description": "The URL the webhook was sent to"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						},
						"description": "Return the log of webhook POSTs sent"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/webhookLogs?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&perPage={{perPage}}&startingAfter={{startingAfter}}&endingBefore={{endingBefore}}&url={{url}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"webhookLogs"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
										},
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
										},
										{
											"key": "url",
											"value": "{{url}}",
											"description": "The URL the webhook was sent to"
										}
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}"
										}
									]
								},
								"description": "Return the log of webhook POSTs sent"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"organizationId\": \"33619\",\r\n    \"networkId\": \"L_22742\",\r\n    \"alertType\": \"Settings changed\",\r\n    \"url\": \"https://www.example.com/path\",\r\n    \"sentAt\": \"2019-01-01T13:37:28.123456Z\",\r\n    \"loggedAt\": \"2019-01-01T13:37:28.423456Z\",\r\n    \"responseCode\": 200,\r\n    \"responseDuration\": 244\r\n  }\r\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Wireless health",
			"item": [
				{
					"name": "getNetworkClientsConnectionStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								"connectionStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated connectivity info for this network, grouped by clients"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										"connectionStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated connectivity info for this network, grouped by clients"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 10\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 24\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 0,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 16\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkClientsLatencyStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								"latencyStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated latency info for this network, grouped by clients"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										"latencyStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated latency info for this network, grouped by clients"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkClientConnectionStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"connectionStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"connectionStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 4,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 10\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkClientLatencyStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients",
								":clientId",
								"latencyStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"clients",
										":clientId",
										"latencyStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}"
										}
									]
								},
								"description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC."
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkConnectionStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"connectionStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated connectivity info for this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"connectionStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated connectivity info for this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"assoc\": 1,\r\n  \"auth\": 5,\r\n  \"dhcp\": 0,\r\n  \"dns\": 0,\r\n  \"success\": 51\r\n}"
						}
					]
				},
				{
					"name": "getNetworkDevicesConnectionStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								"connectionStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated connectivity info for this network, grouped by node"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										"connectionStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated connectivity info for this network, grouped by node"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 43\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 8\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkDevicesLatencyStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								"latencyStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated latency info for this network, grouped by node"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										"latencyStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated latency info for this network, grouped by node"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkDeviceConnectionStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"connectionStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Aggregated connectivity info for a given AP on this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/connectionStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"connectionStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Aggregated connectivity info for a given AP on this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 1,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 43\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkDeviceLatencyStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"devices",
								":serial",
								"latencyStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								},
								{
									"key": "serial",
									"value": "{{serial}}"
								}
							]
						},
						"description": "Aggregated latency info for a given AP on this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/devices/:serial/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"devices",
										":serial",
										"latencyStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										}
									]
								},
								"description": "Aggregated latency info for a given AP on this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "getNetworkFailedConnections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/failedConnections?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&serial={{serial}}&clientId={{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"failedConnections"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "serial",
									"value": "{{serial}}",
									"description": "Filter by AP"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}",
									"description": "Filter by client MAC"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "List of all failed client connection events on this network in a given time range"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/failedConnections?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&serial={{serial}}&clientId={{clientId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"failedConnections"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "Filter by AP"
										},
										{
											"key": "clientId",
											"value": "{{clientId}}",
											"description": "Filter by client MAC"
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "List of all failed client connection events on this network in a given time range"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032593\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032594\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"assoc\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:81:8d:0a\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  }\r\n]"
						}
					]
				},
				{
					"name": "getNetworkLatencyStats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"latencyStats"
							],
							"query": [
								{
									"key": "t0",
									"value": "{{t0}}",
									"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
								},
								{
									"key": "t1",
									"value": "{{t1}}",
									"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
								},
								{
									"key": "timespan",
									"value": "{{timespan}}",
									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
								},
								{
									"key": "ssid",
									"value": "{{ssid}}",
									"description": "Filter results by SSID"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}",
									"description": "Filter results by VLAN"
								},
								{
									"key": "apTag",
									"value": "{{apTag}}",
									"description": "Filter results by AP Tag"
								},
								{
									"key": "fields",
									"value": "{{fields}}",
									"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Aggregated latency info for this network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/latencyStats?t0={{t0}}&t1={{t1}}&timespan={{timespan}}&ssid={{ssid}}&vlan={{vlan}}&apTag={{apTag}}&fields={{fields}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"latencyStats"
									],
									"query": [
										{
											"key": "t0",
											"value": "{{t0}}",
											"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
										},
										{
											"key": "t1",
											"value": "{{t1}}",
											"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
										},
										{
											"key": "timespan",
											"value": "{{timespan}}",
											"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
										},
										{
											"key": "ssid",
											"value": "{{ssid}}",
											"description": "Filter results by SSID"
										},
										{
											"key": "vlan",
											"value": "{{vlan}}",
											"description": "Filter results by VLAN"
										},
										{
											"key": "apTag",
											"value": "{{apTag}}",
											"description": "Filter results by AP Tag"
										},
										{
											"key": "fields",
											"value": "{{fields}}",
											"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
										}
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Aggregated latency info for this network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"backgroundTraffic\": {\r\n    \"rawDistribution\": {\r\n      \"0\": 1234,\r\n      \"1\": 2345,\r\n      \"2\": 3456,\r\n      \"4\": 4567,\r\n      \"8\": 5678,\r\n      \"16\": 6789,\r\n      \"32\": 7890,\r\n      \"64\": 8901,\r\n      \"128\": 9012,\r\n      \"256\": 83,\r\n      \"512\": 1234,\r\n      \"1024\": 2345,\r\n      \"2048\": 9999\r\n    },\r\n    \"avg\": 606.52\r\n  },\r\n  \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n  \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n  \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Wireless settings",
			"item": [
				{
					"name": "getNetworkWirelessSettings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"settings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Return the wireless settings for a network"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"settings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Return the wireless settings for a network"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"meshingEnabled\": true,\r\n  \"ipv6BridgeEnabled\": false,\r\n  \"locationAnalyticsEnabled\": false\r\n}"
						}
					]
				},
				{
					"name": "updateNetworkWirelessSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"meshingEnabled\": true,\r\n  \"ipv6BridgeEnabled\": false,\r\n  \"locationAnalyticsEnabled\": false\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"wireless",
								"settings"
							],
							"variable": [
								{
									"key": "networkId",
									"value": "{{networkId}}"
								}
							]
						},
						"description": "Update the wireless settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmeshingEnabled| boolean| Toggle for enabling or disabling meshing in a network\nipv6BridgeEnabled| boolean| Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)\nlocationAnalyticsEnabled| boolean| Toggle for enabling or disabling location analytics for your network\nledLightsOn| boolean| Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"meshingEnabled\": true,\r\n  \"ipv6BridgeEnabled\": false,\r\n  \"locationAnalyticsEnabled\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"wireless",
										"settings"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}"
										}
									]
								},
								"description": "Update the wireless settings for a network\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \nmeshingEnabled| boolean| Toggle for enabling or disabling meshing in a network\nipv6BridgeEnabled| boolean| Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)\nlocationAnalyticsEnabled| boolean| Toggle for enabling or disabling location analytics for your network\nledLightsOn| boolean| Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)\n"
							},
							"status": "Successful operation",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"meshingEnabled\": true,\r\n  \"ipv6BridgeEnabled\": false,\r\n  \"locationAnalyticsEnabled\": false\r\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{X-Cisco-Meraki-API-Key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-Cisco-Meraki-API-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4b597d2c-ddd7-4684-9181-0b2917ed5ae3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f0ba3ad8-33a3-4c7e-9495-0b06e096e7ad",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a6b6eaf3-61ea-4d9e-a686-49ee9bdb9c9a",
			"key": "X-Cisco-Meraki-API-Key",
			"value": "",
			"type": "string"
		},
		{
			"id": "43f56e49-6200-422c-bc2a-5ef1cd8a0847",
			"key": "t0",
			"value": "",
			"type": "string"
		},
		{
			"id": "526a492d-24e5-49a0-87d6-b977905e252c",
			"key": "t1",
			"value": "",
			"type": "string"
		},
		{
			"id": "674a95eb-70e9-4d17-a386-e21c7bdcdc59",
			"key": "timespan",
			"value": "",
			"type": "string"
		},
		{
			"id": "49f45376-bd4d-4a75-a401-c4e1b6877de1",
			"key": "perPage",
			"value": "",
			"type": "string"
		},
		{
			"id": "7faadc66-aeb4-4cc8-8899-a4be2fe9c2be",
			"key": "startingAfter",
			"value": "",
			"type": "string"
		},
		{
			"id": "283e37e3-edf2-49d8-acc5-b6c4efcd9c75",
			"key": "endingBefore",
			"value": "",
			"type": "string"
		},
		{
			"id": "c7c983ab-5a44-4f9d-abdc-bb2fbb99ba20",
			"key": "adminId",
			"value": "",
			"type": "string"
		},
		{
			"id": "ae94abe2-fca1-4950-958e-b333acab74d9",
			"key": "path",
			"value": "",
			"type": "string"
		},
		{
			"id": "4781b98d-f347-4ddb-9e54-d59c2c2eef3b",
			"key": "method",
			"value": "",
			"type": "string"
		},
		{
			"id": "f394f3df-ce2e-41e3-aab9-2a1880bdf61f",
			"key": "responseCode",
			"value": "",
			"type": "string"
		},
		{
			"id": "f5607336-af27-4d9f-bf23-3cff510b62b3",
			"key": "sourceIp",
			"value": "",
			"type": "string"
		},
		{
			"id": "6545e921-5206-41cf-8364-5d1f050d6bdd",
			"key": "organizationId",
			"value": "",
			"type": "string"
		},
		{
			"id": "40e45cee-ffe2-4f20-a583-9eed472e0dcc",
			"key": "actionBatchId",
			"value": "",
			"type": "string"
		},
		{
			"id": "a6a7eb57-2ad1-4920-ae5f-f2f471d68149",
			"key": "id",
			"value": "",
			"type": "string"
		},
		{
			"id": "30faf9ab-4517-4664-9cb1-aa646acc97f4",
			"key": "networkId",
			"value": "",
			"type": "string"
		},
		{
			"id": "a08d18b1-5ba9-4191-bc1c-c4d76103a6fe",
			"key": "includeConnectivityHistory",
			"value": "",
			"type": "string"
		},
		{
			"id": "544c172c-3504-49e2-9888-644116de2337",
			"key": "connectivityHistoryTimespan",
			"value": "",
			"type": "string"
		},
		{
			"id": "e5424b18-3131-445e-b118-b39efefbcf90",
			"key": "bluetoothClientId",
			"value": "",
			"type": "string"
		},
		{
			"id": "ec450e04-8a78-4b56-89ee-8728bbce9f3d",
			"key": "qualityRetentionProfileId",
			"value": "",
			"type": "string"
		},
		{
			"id": "591bbfdc-3990-4640-a2fd-965c9c2c77ba",
			"key": "serial",
			"value": "",
			"type": "string"
		},
		{
			"id": "b6eeb321-2e9b-48a6-a904-09993c321ebe",
			"key": "timestamp",
			"value": "",
			"type": "string"
		},
		{
			"id": "65becf73-4601-49d0-85e6-a1a6d5e36111",
			"key": "clientId",
			"value": "",
			"type": "string"
		},
		{
			"id": "01e234d5-3c2a-4790-b6fa-fa688b38b9b7",
			"key": "resolution",
			"value": "",
			"type": "string"
		},
		{
			"id": "60a4e439-3b17-4927-b056-428a101ffc5e",
			"key": "configTemplateId",
			"value": "",
			"type": "string"
		},
		{
			"id": "910c3ff1-d436-4c9d-973b-d35fdad4ac0e",
			"key": "brandingPolicyId",
			"value": "",
			"type": "string"
		},
		{
			"id": "cfaa848c-e6fa-40b3-8827-7d4f8693af1b",
			"key": "uplink",
			"value": "",
			"type": "string"
		},
		{
			"id": "d59e5c01-5e62-4eaa-8012-f2460b808ab7",
			"key": "ip",
			"value": "",
			"type": "string"
		},
		{
			"id": "709a71fa-c32c-48cb-8dbb-31841ff64051",
			"key": "configurationUpdatedAfter",
			"value": "",
			"type": "string"
		},
		{
			"id": "48a2330d-7b3d-49ca-a0d0-528804957c99",
			"key": "productType",
			"value": "",
			"type": "string"
		},
		{
			"id": "7fe3ecd9-c870-4001-8ef7-2c9b54ee4bf2",
			"key": "includedEventTypes",
			"value": "",
			"type": "string"
		},
		{
			"id": "e7658b68-3607-4d37-82c5-442745d09985",
			"key": "excludedEventTypes",
			"value": "",
			"type": "string"
		},
		{
			"id": "0e90233d-4129-41c6-8af3-9c9418d6e985",
			"key": "deviceMac",
			"value": "",
			"type": "string"
		},
		{
			"id": "34f6d4ff-7878-4883-840d-f71ca48c4b5e",
			"key": "deviceSerial",
			"value": "",
			"type": "string"
		},
		{
			"id": "e3395a75-2051-43c6-ac4a-a065d4c934a4",
			"key": "deviceName",
			"value": "",
			"type": "string"
		},
		{
			"id": "9e054094-cec0-47c2-8d06-7b9f95a75e7f",
			"key": "clientIp",
			"value": "",
			"type": "string"
		},
		{
			"id": "cadc9981-59fb-4839-b6cc-81825de4b798",
			"key": "clientMac",
			"value": "",
			"type": "string"
		},
		{
			"id": "fbb1339a-90ef-49cd-9129-309d2925286a",
			"key": "clientName",
			"value": "",
			"type": "string"
		},
		{
			"id": "9435e2e2-bc90-4223-a635-87f489ff3d08",
			"key": "smDeviceMac",
			"value": "",
			"type": "string"
		},
		{
			"id": "d623aec9-1db3-49d6-9a4f-4734cb4d310f",
			"key": "smDeviceName",
			"value": "",
			"type": "string"
		},
		{
			"id": "90c6934a-e190-4430-9e1a-878962f514fc",
			"key": "service",
			"value": "",
			"type": "string"
		},
		{
			"id": "833cfb08-1fe3-4517-8b32-0e80924b8f0a",
			"key": "floorPlanId",
			"value": "",
			"type": "string"
		},
		{
			"id": "e13bc143-2f2d-4a49-bb3c-8c8378f31cac",
			"key": "groupPolicyId",
			"value": "",
			"type": "string"
		},
		{
			"id": "cc3f839c-5c7b-48d3-9f78-caba15ec492f",
			"key": "state",
			"value": "",
			"type": "string"
		},
		{
			"id": "633f038f-4c9b-4ac4-bd83-67ae5df7a7da",
			"key": "licenseId",
			"value": "",
			"type": "string"
		},
		{
			"id": "a6ef69f4-5827-457e-a991-0dff25a766cf",
			"key": "linkAggregationId",
			"value": "",
			"type": "string"
		},
		{
			"id": "049c5a43-1e74-49cd-aac9-9d495a9ea6de",
			"key": "number",
			"value": "",
			"type": "string"
		},
		{
			"id": "781fc7e3-c220-47b1-947d-7bb32d785c1f",
			"key": "objectType",
			"value": "",
			"type": "string"
		},
		{
			"id": "f49b87e1-daca-40b2-894c-893fcff33082",
			"key": "zoneId",
			"value": "",
			"type": "string"
		},
		{
			"id": "618a07e4-477e-4a30-b763-7b8f18e4cbc9",
			"key": "appliancePortId",
			"value": "",
			"type": "string"
		},
		{
			"id": "7bd97941-d299-4ed6-8ec9-17769cc914ed",
			"key": "srId",
			"value": "",
			"type": "string"
		},
		{
			"id": "783354c8-9413-47b8-ae68-011606aaca63",
			"key": "merakiAuthUserId",
			"value": "",
			"type": "string"
		},
		{
			"id": "fd70a326-388f-4fec-a383-71afbedd8edf",
			"key": "withDetails",
			"value": "",
			"type": "string"
		},
		{
			"id": "4819aba8-20c9-4f98-abc1-cc8623073830",
			"key": "targetGroupId",
			"value": "",
			"type": "string"
		},
		{
			"id": "6b52769f-0bc9-4f6e-8ce8-cdafe1754f31",
			"key": "deviceType",
			"value": "",
			"type": "string"
		},
		{
			"id": "811e1381-0d56-4438-a880-30dbb327dce5",
			"key": "includeLicenseInfo",
			"value": "",
			"type": "string"
		},
		{
			"id": "262f44bb-4abe-4d84-a7a3-2b99e86d0a59",
			"key": "username",
			"value": "",
			"type": "string"
		},
		{
			"id": "066e9e77-e1c0-4f03-9d02-e9f87b993737",
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"id": "8e1253b1-ea7a-46ad-a5c2-9916d5e1b8b1",
			"key": "mac",
			"value": "",
			"type": "string"
		},
		{
			"id": "9cf33ed8-d651-41e6-8d0b-9cbe58dbdfb0",
			"key": "imei",
			"value": "",
			"type": "string"
		},
		{
			"id": "6d95365d-d3f4-47df-9d71-48196bbfa473",
			"key": "bluetoothMac",
			"value": "",
			"type": "string"
		},
		{
			"id": "0b2137ba-32be-4c58-a7d4-b42c11ba47c9",
			"key": "requestId",
			"value": "",
			"type": "string"
		},
		{
			"id": "82285f40-3b72-47f2-88a3-2b3f3734215e",
			"key": "includeTemplateProfiles",
			"value": "",
			"type": "string"
		},
		{
			"id": "c894003e-81a9-4ca2-afad-6b5e350a3eec",
			"key": "rfProfileId",
			"value": "",
			"type": "string"
		},
		{
			"id": "68da6bb2-119b-4b45-b361-29ee5e502237",
			"key": "samlRoleId",
			"value": "",
			"type": "string"
		},
		{
			"id": "f58cab37-f5ab-4999-9004-a520422b8651",
			"key": "bundleId",
			"value": "",
			"type": "string"
		},
		{
			"id": "a86cfab5-ed53-4607-984e-069a8cf06259",
			"key": "appId",
			"value": "",
			"type": "string"
		},
		{
			"id": "5b4f5668-5c0a-443d-8576-57789e1aefc6",
			"key": "attemptId",
			"value": "",
			"type": "string"
		},
		{
			"id": "d735dfa0-e74f-4bca-9c14-aaaf8d6fc732",
			"key": "deviceId",
			"value": "",
			"type": "string"
		},
		{
			"id": "09251400-dda2-493b-b1fd-95e36a1b7d7a",
			"key": "fields",
			"value": "",
			"type": "string"
		},
		{
			"id": "239e4587-fbd6-494f-b2b0-8d4e8d3eef25",
			"key": "wifiMacs",
			"value": "",
			"type": "string"
		},
		{
			"id": "68b51a64-2b91-4858-a0f0-eb95f8007c30",
			"key": "serials",
			"value": "",
			"type": "string"
		},
		{
			"id": "44939dea-2702-4b68-8b02-cedbc419decc",
			"key": "ids",
			"value": "",
			"type": "string"
		},
		{
			"id": "14465da3-bfc0-4bb0-a623-238a7ac3e909",
			"key": "scope",
			"value": "",
			"type": "string"
		},
		{
			"id": "5a7a647a-b562-4a70-8224-20496498fde4",
			"key": "batchSize",
			"value": "",
			"type": "string"
		},
		{
			"id": "2bea97d8-7866-45dc-ad37-764e63cd82a9",
			"key": "batchToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "0a4ab580-eb16-4d24-a746-e632d81c5a42",
			"key": "profileId",
			"value": "",
			"type": "string"
		},
		{
			"id": "8a6f7342-f85e-4794-b0fb-ff6d0aaaa206",
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"id": "092e215c-e518-4b94-8cc8-8bcc3d9e1405",
			"key": "usernames",
			"value": "",
			"type": "string"
		},
		{
			"id": "8fbf6081-1914-4d44-9c3f-defca9ff0df7",
			"key": "emails",
			"value": "",
			"type": "string"
		},
		{
			"id": "c757b1e5-37f7-46e6-8c92-1915bd000923",
			"key": "network_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "d5bfccea-9a57-4026-a693-3d9d99929376",
			"key": "ssidNumber",
			"value": "",
			"type": "string"
		},
		{
			"id": "05687bf4-2c18-46b2-8f9d-aba3e426dac3",
			"key": "loginIdentifier",
			"value": "",
			"type": "string"
		},
		{
			"id": "921d9cf2-6c65-47b1-aee4-e296a6822d3c",
			"key": "portScheduleId",
			"value": "",
			"type": "string"
		},
		{
			"id": "2e30138e-eea3-4f61-b909-b19db78f9627",
			"key": "qosRuleId",
			"value": "",
			"type": "string"
		},
		{
			"id": "9df09df5-28e8-4a64-95e5-f34e787c1a6a",
			"key": "switchStackId",
			"value": "",
			"type": "string"
		},
		{
			"id": "14a64040-fe41-4fee-ae07-40b47d8eb37e",
			"key": "vlanId",
			"value": "",
			"type": "string"
		},
		{
			"id": "4a7e2369-c818-4bb8-9a51-c4ecd5623e0f",
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"id": "579f61f0-b0ec-4574-a0ff-d6ec7d48f07f",
			"key": "ssid",
			"value": "",
			"type": "string"
		},
		{
			"id": "afb296e6-9783-4310-9b60-62499ec244ff",
			"key": "vlan",
			"value": "",
			"type": "string"
		},
		{
			"id": "c8ee2a4f-11b9-4cbf-8628-ae7c6ab678d0",
			"key": "apTag",
			"value": "",
			"type": "string"
		},
		{
			"id": "ce4bc27e-11a3-4e4f-9e8c-3e075a06eb5b",
			"key": "baseUrl",
			"value": "https://api.meraki.com/api/v0",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}